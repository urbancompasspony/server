#!/bin/bash

# ============================================================================ #
#########################                                                      #
# Universal Server Menu # ==================================================== #
#########################                                                      #
#                                                           ####################
# ========================================================= # By José Humberto #
#                                                           ####################
# ============================================================================ #

################################################################################
# PAINEL DE CONTROLE ###########################################################

# Versionamento: v1.9.4
# 1.x: Mudanças drásticas, geralmente recursos novos e menus principais.
# x.9: Mudanças pequenas, implementação de novas ferramentas.
# rc-1: Correções de bugs de ferramentas ou menus

version="v4.0"
revis="r0.1"

################################################################################
################################################################################

# For Ubuntu 22.04!
export NEEDRESTART_MODE=a
export DEBIAN_FRONTEND=noninteractive

# Hashs
hash2="576200e78f0ab25b437dc7372ae920d9"
hash3="9ae7c2a8e120dssssa4915cba5a15e17"

# Docs
FILE3="/tmp/.email"
FILE4="/tmp/.relat"

doc_rel="0"
datetime3=$(date +"%m-%Y") # Month for Docs!

[ -d /home/administrador/.DOC ] || { mkdir "/home/administrador/.DOC" 2> /dev/null; }
[ -f /home/administrador/.DOC/$datetime3.docx ] || {
cp "/home/administrador/.DOC/.relat.docx" "/home/administrador/.DOC/$datetime3.docx" 2> /dev/null

TEXTAO14="
Conforme estipulado em contrato mensal de prestação de serviços na área de informática, segue abaixo o relatório de suporte, manutenções preventivas e corretivas executados no período de $datetime3:"

echo "$TEXTAO14" >> "/home/administrador/.DOC/$datetime3.docx"
}

# Menu Title
bktitle="USM: Universal Server Menu $version"
report=0; datetime2=0; confrel=0

# Checagem de Dependências
function pkg {
APT_CMD=$(which apt 1> /dev/null 2> /dev/null && echo "sim" || echo "nao")
YUM_CMD=$(which yum 1> /dev/null 2> /dev/null && echo "sim" || echo "nao")

[ "$APT_CMD" = "sim" ] && {
  pkg1="apt"
  REQUIRED_PKG="$1"
  PKG_OK=$(dpkg-query -W 1> /dev/null 2> /dev/null $REQUIRED_PKG && echo "sim" || echo "nao")
  [ "$PKG_OK" = "nao" ] && {
    echo "$REQUIRED_PKG não encontrado. Instalando..."
    echo "Digite sua senha!"
    sudo apt update; sudo apt install $REQUIRED_PKG $2 -y
    mkdir -p ~/.mutt/cache/headers && mkdir ~/.mutt/cache/bodies && touch ~/.mutt/certificates && touch ~/.mutt/muttrc
    echo -e "$TEXTAO07" > ~/.mutt/muttrc
  } || {
    echo "ok" > /dev/null
    }
} || {
  echo "Sistema desconhecido."
  }

}

# PASSWORD
function init {
password=$(dialog --backtitle "$bktitle" --title "Acesso ao USM" --insecure --passwordbox "Digite a senha!" 0 0 2>&1 > /dev/tty)
hash1=$(echo "$password" | md5sum | awk '{print $1}')
[ -z "$password" ] && {
  clear
  echo "É necessário digitar uma senha para continuar. Tente novamente!"
} || {
  [ "$hash1" = "$hash2" ] || [ "$hash1" = "$hash3" ] && {
    menu054
  } || {
    echo "É necessário digitar a senha correta. Saindo."
    }
}

}

# SISTEMA Normal
function start {
doc_rel="1" # Relatorio!
datetime=$(date +"%d/%m %H:%M")
uptime=$(uptime | awk {'print $3 $4 $5'})
var1=$(dialog --backtitle "$bktitle" --title 'Menu Principal' --menu "Nome da Máquina: $HOSTNAME
Data e Hora: $datetime
UpTime: $uptime"  0 0 0 \
A 'Status Geral' \
B 'Máquinas Virtuais' \
C 'Processos' \
D 'Active Directory' \
E 'Ferramentas' \
F 'Avançado' \
G '*Reiniciar' \
H '*Desligar' \
X 'SAIR' 2>&1 > /dev/tty )
[ $? -ne 0 ] && start
case "$var1" in
A) menu01 ;;
B) curl -sSL https://raw.githubusercontent.com/urbancompasspony/server/main/vm_machine | sudo bash ; start ;;
C) menu03 ;;
D) curl -sSL https://raw.githubusercontent.com/urbancompasspony/server/main/domain | sudo bash ; start ;;
E) menu05 ;;
F) m10 ;;
G) menu06 ;;
H) menu07 ;;
X) echo "Saindo... Para voltar, digite 'menu'!" && exit ;;
esac
}

# Ferramentas Normal
 #xorg=$(ls /tmp/.X11-unix | wc -l)
function menu05 {
var6=$(dialog --help-button --help-label 'Ajuda' --title 'Ferramentas' --backtitle "$bktitle" --menu " " 0 0 0 \
A 'Placas de Rede' \
B '*Speed Test' \
C '*Arp-Scan' \
D '*IP Neigh' \
E '*Who Is' \
F '*Trace Route' \
G 'Iniciar Navegador' \
H '*Ping DNS' \
I 'Iniciar Scripts' \
J '*Re-Iniciar NOIP' \
K 'Config. Relatórios' \
L 'Relatórios Salvos' \
X 'Voltar' 2>&1 > /dev/tty )
case $? in
  2) dialog --title 'Ajuda' --msgbox "$TEXTAO09" 0 0 ; menu05 ;;
esac
[ $? -ne 0 ] && start
case "$var6" in
A) menu21 ;;
B) menu050 ;;
C) menu0501 ;;
D) menu23 ;;
E) menu051 ;;
F) menu052 ;;
G) [ "$DISPLAY" = "localhost:10.0" ] && { xinit epiphany-browser $* -- :100 vt$XDG_VTNR;} || { epiphany-browser;} ; menu05 ;;
H) menu22 ;;
I) menu24 ;;
J) menu25 ;;
K) menu054 ;;
L) menu055 ;;
X) start ;;
esac
}

function m10 {
var10=$(dialog --backtitle "Ferramentas e Funções Avançadas" --title 'Atenção' --menu "Funções Avançadas" 0 0 0 \
A 'Atualizar o Sistema' \
B 'Samba - Client' \
C 'X Samba' \
D 'PiHole' \
E 'Manut. Banco AD&DC' \
F 'Manutenção NextCloud' \
G 'Trocar Gov. de CPU' \
H 'Menu de Backups' \
I 'UDPCast' \
J '*Usuários Logados' \
K '*Logins Anteriores' \
L 'Diagnóstico Manual' \
M 'Finalizar .docx > .PDF' \
N 'Encaminhar .PDF' \
O 'Apagar .docx' \
P 'Apagar .PDF' \
X 'Voltar' 2>&1 > /dev/tty )
[ $? -ne 0 ] && start
case "$var10" in
A) m11 ;;
B) menu31 ;;
C) menu32 ;;
D) menu26 ;;
E) menu004 ;;
F) menu34 ;;
G) menu053 ;;
H) m122 ;;
I) menu17 ;;
J) menu18 ;;
K) menu19 ;;
L) menu28 ;;
M) menu291 ;;
N) menu29 ;;
O) menu30 ;;
P) menu301 ;;
X) start ;;
esac
}

##########
# INICIO # #------------------------------------------------------------------ #
##########

# Normal
function menu01 {
ip=$(hostname -I | awk '{print $1}')
ip2=$(dig @resolver4.opendns.com myip.opendns.com +short)
var2=$(dialog --title 'Status' --backtitle "$bktitle" --menu "IP Local  : $ip
IP Externo: $ip2" 0 0 0 \
A '*Sistema' \
B '*Temperatura' \
C '*Armazenamento' \
D '*S.M.A.R.T.' \
E '*Cluster: DRBD' \
F '*Cluster: PCS' \
G '*Smart UPS' \
X 'Voltar' 2>&1 > /dev/tty )
[ $? -ne 0 ] && start
case "$var2" in
A) menu11 ;;
B) menu12 ;;
C) menu13 ;;
D) menu14 ;;
E) menu15 ;;
F) menu16 ;;
G) menu33 ;;
X) start ;;
esac
}

# Invertido
function m3nu01 {
ip=$(hostname -I | awk '{print $1}')
ip2=$(dig @resolver4.opendns.com myip.opendns.com +short)
var2=$(dialog --title 'Status' --backtitle "$bktitle" --menu "IP Local  : $ip
IP Externo: $ip2" 0 0 0 \
A '*Sistema' \
B '*Temperatura' \
C '*Armazenamento' \
D '*Smart UPS' \
X 'Voltar' 2>&1 > /dev/tty )
[ $? -ne 0 ] && start
case "$var2" in
A) menu11 ;;
B) menu12 ;;
C) menu13 ;;
D) menu33 ;;
X) start ;;
esac
}

function menu24 {
# Cluster
checkscript1=$([ -f /home/administrador/Scripts/Cluster ] && echo "sim" || echo "nao")
[ "$checkscript1" = "sim" ] && {
script1=$(ps aux | grep "Cluster" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
  [ "$script1" = "Executando" ] && {
    dialog --title 'Script Cluster Em Execução!' --msgbox "Confirme no menu 'Status Geral > Sistema'!" 8 40
  } || {
    sudo bash /home/administrador/Scripts/Cluster & 1> /dev/null 2> /dev/null
    dialog --title 'Script Cluster foi iniciado!' --msgbox "Confirme no menu 'Status Geral > Sistema'!" 8 40
    }
} || {
  dialog --title 'ATENÇÃO!' --msgbox "O script Cluster não foi encontrado ou configurado!" 8 40
  }
  
# Balloon
checkscript2=$([ -f /home/administrador/Scripts/Balloon ] && echo "sim" || echo "nao")
[ "$checkscript2" = "sim" ] && {
  script2=$(ps aux | grep "Balloon" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
  [ "$script2" = "Executando" ] && {
    dialog --title 'Script Balloon Em Execução!' --msgbox "Confirme no menu 'Status Geral > Sistema'!" 8 40
  } || {
    bash /home/administrador/Scripts/Balloon & 1> /dev/null 2> /dev/null
    dialog --title 'Script Balloon foi iniciado!' --msgbox "Confirme no menu 'Status Geral > Sistema'!" 8 40
    }
} || {
  dialog --title 'ATENÇÃO!' --msgbox "O script Balloon não foi encontrado ou configurado!" 8 40
  }
  
[ $? -ne 0 ] && menu05
menu05
}

function menu25 {
checknoip=$([ -f /usr/local/src/noip-duc-linux.tar.gz ] && echo "sim" || echo "nao")
[ "$checknoip" = "sim" ] && {
  noip0=$(ps aux | grep "noip2" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado ou Ausente")
  noip2="Serviço de DNS NO-IP!"
  [ "$noip0" = "Executando" ] && {
    dialog --title "$noip2" --yesno "Deseja reiniciar o NOIP?" 6 40
    [ $? = 0 ] && {
      sudo killall noip2
      sleep 2
      sudo noip2
      dialog --title "$noip2" --msgbox "O NOIP foi reiniciado! \n
Aguarde 1 minuto até o novo IP ser validado." 8 40
    } || {
      dialog --title "$noip2" --yesno "Deseja parar o NOIP?" 6 40
      [ $? = 0 ] && {
        sudo killall noip2
        dialog --title "$noip2" --msgbox "O NOIP foi parado!" 6 40
        }
    } || {
      menu05
      }
  } || {
    dialog --title "$noip2" --yesno "Deseja tentar iniciar o NOIP?" 6 40
    [ $? = 0 ] && {
      sudo noip2
      dialog --title "$noip2" --msgbox "Verifique se o NOIP iniciou no menu 'Status Geral > Sistema'!" 8 40
      }
  } 
} || {
  dialog --title "$noip2" --msgbox "NOIP não foi encontrado ou configurado nesse sistema." 8 40
}
menu05
}

# Status de Sistema
function menu11 {
governor=$(cat /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor || echo "Indisponível!")
bbalance=$(ps aux | grep "btrfs balance start" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
rrsnap=$(ps aux | grep "rsnapshot" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
rsync1=$(ps aux | grep "rsync" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
cp1=$(ps u | grep "cp" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
script1=$(ps aux | grep "Cluster" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
script2=$(ps aux | grep "Balloon" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
noip0=$(ps aux | grep "noip2" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado ou Ausente")

[ $(which drbdadm 2>/dev/null) ] && [ $(which virt-manager 2>/dev/null) ] && {
  aswb="sim"
} || {
  aswb="nao"
  }

[ $(which virt-manager 2>/dev/null) ] && {
  aswd="sim"
} || {
  aswd="nao"
  }

[ -d "/sys/firmware/efi/" ] && {
  sysd1=$(systemd-analyze | awk 'NR==1{print $5,$4,$8,$7}')
  sysd2=$(systemd-analyze | awk 'NR==1{print $11,$10,$14,$13}')
  sysd3=$(systemd-analyze | awk 'NR==1{print $15,$16}')
} || {
  sysd1=$(systemd-analyze | awk 'NR==1{print $5,$4,$8,$7}')
  sysd3=$(systemd-analyze | awk 'NR==1{print $9,$10}')
  }

TEXTMAIL="NOIP: $noip0
Governador de CPU: $governor

Balance BTRFS: $bbalance
RSnapshot: $rrsnap
RSync: $rsync1
CoPy: $cp1

Cluster: $script1
Deveria executar? $aswb
Balloon: $script2
Deveria executar? $aswd

Tempos de Boot:
$sysd1
$sysd2
Tempo total $sysd3"

dialog --cr-wrap --help-button --help-label 'Ajuda' --title "Informações encontradas" --backtitle "$bktitle" --msgbox "$TEXTMAIL" 0 0
case $? in
  2) dialog --title 'Ajuda com Significados de Status' --msgbox "$TEXTAO01" 0 0 ; menu11 ;;
esac
[ $? -ne 0 ] && liminal "m3nu01" "menu01"

menu08 "$Recado $TEXTMAIL $TEXTAO01 $Mensagem"
liminal "m3nu01" "menu01"
}

# Processos de Sistema
function menu03 {
menu09 smbd && smb1=$prcs
menu09 samba-ad-dc && smb2=$prcs
menu09 apache2 && apache=$prcs
menu09 lighttpd && lighttp=$prcs
menu09 pihole-FTL && pihole=$prcs
menu09 drbd && drbd1=$prcs
menu09 corosync && corosync1=$prcs
menu09 pacemaker && pacemaker1=$prcs
menu09 openfire && spark=$prcs
menu09 mysqld && mysql=$prcs
menu09 cups && cups1=$prcs
menu09 motion && motion1=$prcs
menu09 dwagent && dwagent1=$prcs
vpn=$(ip a | grep tun 1> /dev/null && echo "Executando" || echo "Parado ou Ausente")

menuxx=$(dialog --ok-label 'Ajustar' --help-button --help-label 'Ajuda' --backtitle "$bktitle" --title 'Processos de Sistema' --menu " "  0 0 0 \
A "Samba      : $smb1"  \
B "Dominio    : $smb2" \
C "Apache2    : $apache" \
D "Lighttpd   : $lighttp" \
E "PiHole     : $pihole" \
F "DRBD       : $drbd1" \
G "Corosync   : $corosync1" \
H "Pacemaker  : $pacemaker1" \
I "Spark      : $spark" \
J "MySQL      : $mysql" \
K "CUPS       : $cups1" \
L "Motion     : $motion1" \
M "DWAgent    : $dwagent1" \
N "VPN Client : $vpn" \
X "Voltar" 2>&1 > /dev/tty )
case $? in
  2) dialog --title 'Ajuda com Significados de Status' --msgbox "$TEXTAO08" 0 0 ; menu03 ;;
esac
[ $? -ne 0 ] && start
case "$menuxx" in
A) status="$smb1"; processname="Samba"; process="smbd"; menu031 ;;
B) status="$smb2"; processname="Dominio"; process="samba-ad-dc"; menu031 ;;
C) status="$apache"; processname="Apache2"; process="apache2"; menu031 ;;
D) status="$lighttp"; processname="Lighttp"; process="lighttp"; menu031 ;;
E) status="$pihole"; processname="PiHole"; process="pihole-FTL"; menu031 ;;
F) dialog --title 'Operação Não Permitida!' --msgbox "Utilize o gerenciamento padrão para lidar com o DRBD" 8 40; menu031 ;;
G) dialog --title 'Operação Não Permitida!' --msgbox "Utilize o gerenciamento padrão para lidar com o Corosync" 8 40; menu031 ;;
H) dialog --title 'Operação Não Permitida!' --msgbox "Utilize o gerenciamento padrão para lidar com o Pacemaker" 8 40; menu031 ;;
I) status="$spark"; processname="Spark"; process="openfire"; menu031 ;;
J) status="$mysql"; processname="MySQL"; process="mysql"; menu031 ;;
K) status="$cups1"; processname="CUPS"; process="cups"; menu031 ;;
L) status="$motion1"; processname="Motion"; process="motion"; menu031 ;;
M) status="$dwagent1"; processname="DWAgent"; process="dwagent"; menu031 ;;
N) status="$vpn"; processname="VPN Client"; process="openvpn"; menu03 ;;
X) start ;;
esac
}

function menu031 {
[ "$status" = "Executando" ] && {
  dialog --title "$processname" --yesno "Deseja reiniciar o processo $processname ?" 6 40
  [ $? = 0 ] && {
    sudo systemctl restart "$process"
    dialog --title "$processname" --msgbox "O processo $processname foi reiniciado!" 6 40
  } || {
    dialog --title "$processname" --yesno "Deseja parar o processo $processname ?" 6 40
    [ $? = 0 ] && {
      sudo systemctl stop "$process"
      dialog --title "$processname" --msgbox "O processo $processname foi parado!" 6 40
      }
  } || {
    menu03
    }
} || {
  dialog --title "$processname" --yesno "Deseja tentar iniciar o processo $processname ?" 6 40
  [ $? = 0 ] && {
    sudo systemctl start "$process"
    dialog --title "$processname" --msgbox "Verifique se o $processname iniciou." 6 40
    }
}

menu03
}

# Status de Processos
function menu09 {
  prcs=$(sudo systemctl is-active --quiet $1 && echo "Executando" || echo "Parado ou Ausente")
}

# Status Temperatura
function menu12 {
sensors0=$(sensors || echo "Indisponível!")
dialog --cr-wrap --help-button --help-label 'Ajuda' --backtitle 'Temperatura, Potencia e Rotação de Cooler(s) [Se disponível!]' --msgbox "$sensors0" 0 0
case $? in
  2) dialog --title 'Ajuda com Significados de Status' --msgbox "$TEXTAO02" 0 0 ; menu12 ;;
esac
[ $? -ne 0 ] && liminal "m3nu01" "menu01"
[ "$sensors1" = "Indisponível!" ] && {
  dialog --title "Erro ao emitir relatório" --msgbox "Sistema incompatível!" 0 0
} || {
  menu08 "$Recado $sensors0 $TEXTAO02 $Mensagem"
  }

liminal "m3nu01" "menu01"
}

# Status de Consumo dos Discos
function menu13 {
sdisks=$(df -Th)
dialog --cr-wrap --help-button --help-label 'Ajuda' --title "Discos encontrados" --backtitle "Status do Armazenamento" --msgbox "$sdisks" 0 0
case $? in
  2) dialog --title 'Ajuda' --msgbox "$TEXTAO03" 0 0; menu13 ;;
esac
[ $? -ne 0 ] && liminal "m3nu01" "menu01"

menu08 "$Recado $sdisks $TEXTAO03 $Mensagem"
liminal "m3nu01" "menu01"
}

# LibATASmart-bin!
function menu14 {
menu140 "sda" && dump1=$skd && dumpst1=$stssd
menu140 "sdb" && dump2=$skd && dumpst2=$stssd
menu140 "sdc" && dump3=$skd && dumpst3=$stssd
menu140 "sdd" && dump4=$skd && dumpst4=$stssd
menu140 "sde" && dump5=$skd && dumpst5=$stssd
menu140 "sdf" && dump6=$skd && dumpst6=$stssd
menu140 "sdg" && dump7=$skd && dumpst7=$stssd
menu140 "sdh" && dump8=$skd && dumpst8=$stssd
menu140 "sdi" && dump9=$skd && dumpst9=$stssd
menusk=$(dialog --help-button --help-label 'Ajuda' --backtitle "Análise de Atributos SMART!" --title "S.M.A.R.T." --menu ""  0 0 0 \
"/dev/sda" "$dumpst1" \
"/dev/sdb" "$dumpst2" \
"/dev/sdc" "$dumpst3" \
"/dev/sdd" "$dumpst4" \
"/dev/sde" "$dumpst5" \
"/dev/sdf" "$dumpst6" \
"/dev/sdg" "$dumpst7" \
"/dev/sdh" "$dumpst8" \
"/dev/sdi" "$dumpst9" \
"X Voltar" "" 2>&1 > /dev/tty )
case $? in
  2) dialog --title "Definições de SMART!" --msgbox "$TEXTAO04" 0 0 ; menu14 ;;
esac
[ $? -ne 0 ] && {start}
case "$menusk" in
"/dev/sda") menu141 "sda" "$dump1" ; menu14 ;;
"/dev/sdb") menu141 "sdb" "$dump2" ; menu14 ;;
"/dev/sdc") menu141 "sdc" "$dump3" ; menu14 ;;
"/dev/sdd") menu141 "sdd" "$dump4" ; menu14 ;;
"/dev/sde") menu141 "sde" "$dump5" ; menu14 ;;
"/dev/sdf") menu141 "sdf" "$dump6" ; menu14 ;;
"/dev/sdg") menu141 "sdg" "$dump7" ; menu14 ;;
"/dev/sdh") menu141 "sdh" "$dump8" ; menu14 ;;
"/dev/sdi") menu141 "sdi" "$dump9" ; menu14 ;;
"X Voltar") menu01 ;;
esac
}

function menu140 {
stssd=$(ls /dev/$1 1> /dev/null 2> /dev/null && echo "Presente" || echo "Ausente")
[ "$stssd" = "Presente" ] && {
  skd=$(sudo skdump /dev/$1 | grep -A40 -P 'ID#' | awk '{print $1,$2,$6}')
} || {
  skd=$(echo "Disco ausente!")
  }
}

function menu141 {
dialog --cr-wrap --backtitle /dev/$1 --msgbox "$2" 0 0

menu08 "$Recado $2 $TEXTAO04 $Mensagem"
menu14
}

function menu15 {
menu09 drbd && drbd1=$prcs
[ "$drbd1" = "Executando" ] && {
  sdrbd=$(sudo drbdadm status)
  dialog --cr-wrap --help-button --help-label 'Ajuda' --title "DRBD" --backtitle "$bktitle" --msgbox "$sdrbd" 0 0
  case $? in
    2) dialog --title 'Ajuda' --msgbox "$TEXTAO05" 0 0; menu15 ;;
  esac
  [ $? -ne 0 ] && {start}
  menu08 "$Recado $sdrbd $TEXTAO05 $Mensagem"
} || {
  dialog --title "ERROR" --msgbox "O DRBD não está em execução ou não foi localizado neste sistema!" 8 40
  }

menu01
}

function menu16 {
menu09 corosync && corosync1=$prcs
menu09 pacemaker && pacemaker1=$prcs
[ "$corosync1" = "Executando" ] && [ "$pacemaker1" = "Executando" ] && {
  spcs=$(sudo pcs status)
  dialog --cr-wrap --help-button --help-label 'Ajuda' --title "PCS" --backtitle "$bktitle" --msgbox "$spcs" 0 0
  case $? in
    2) dialog --title 'Ajuda' --msgbox "$TEXTAO06" 0 0; menu16 ;;
  esac
  [ $? -ne 0 ] && {start}
  menu08 "$Recado $spcs $TEXTAO06 $Mensagem"
} || {
  dialog --title "ERROR" --msgbox "O Pacemaker/Corosync não estão em execução ou não foram localizados neste sistema!" 8 40
  }

menu01
}

function menu17 {
var2=$(dialog --title 'UDPCast' --backtitle "$bktitle" --menu "Escolha o modo!" 0 0 0 \
A 'Cliente' \
B 'Servidor' \
X 'Voltar' 2>&1 > /dev/tty )
[ $? -ne 0 ] && {start}
case "$var2" in
A) echo "Modo Cliente. Para sair, precione CTRL + C!" ; udp-receiver --file=/dev/null ;;
B) echo "Modo Servidor. Para sair, precione CTRL + C!" ; udp-sender --file=/dev/zero ;;
X) m10 ;;
esac
}

function menu18 {
userlog=$(w)
dialog --title "Informação" --msgbox "$userlog" 20 60
menu08 "$Recado $userlog $Mensagem"
m10
}

function menu19 {
userlast=$(last)
dialog --title "Informação" --msgbox "$userlast" 20 60
menu08 "$Recado $userlast $Mensagem"
m10
}

function menu21 {
resultenp=$(ip a | sed -n '/enp/p' |  awk '!/mac/' | awk '{print $2}' | sed 's/.$//' | grep 'enp')
for i in $resultenp; do
  velo=$(sudo ethtool "$i" | grep Speed)
  dialog --title 'Velocidades detectadas:' --msgbox "$i $velo" 8 40
done

menu05
}

function ping1 {
  ping -c 1 "$1" | awk 'NR==2{print $7,$8}'
}

function gauge1 {
  echo  "$1" | dialog --title "Testando Ping..." --gauge "Aguarde a conclusão!" 8 40
}

function menu22 {
Google_P=$(ping1 "8.8.4.4")
gauge1 "8"
Google_S=$(ping1 "8.8.8.8")
gauge1 "14"
OpenDNS_P=$(ping1 "208.67.222.222")
gauge1 "19"
OpenDNS_S=$(ping1 "208.67.220.220")
gauge1 "22"
Level3_P=$(ping1 "4.2.2.1")
gauge1 "24"
Level3_S=$(ping1 "4.2.2.2")
gauge1 "28"
Comodo_P=$(ping1 "8.26.56.26")
gauge1 "32"
Comodo_S=$(ping1 "8.20.247.20")
gauge1 "36"
DNSWATCH_P=$(ping1 "84.200.69.80")
gauge1 "42"
DNSWATCH_S=$(ping1 "84.200.70.40")
gauge1 "46"
Quad9_P=$(ping1 "9.9.9.9")
gauge1 "50"
Quad9_S=$(ping1 "149.112.112.112")
gauge1 "57"
Cloudflare_P=$(ping1 "1.1.1.1")
gauge1 "67"
Cloudflare_S=$(ping1 "1.0.0.1")
gauge1 "74"
Algar_P=$(ping1 "200.225.197.34")
gauge1 "79"
Algar_S=$(ping1 "200.225.197.37")
gauge1 "85"
GIGA_P=$(ping1 "189.38.95.95")
gauge1 "88"
GIGA_S=$(ping1 "189.38.95.96")
gauge1 "93"
CLARO_P=$(ping1 "181.213.132.2")
gauge1 "98"
CLARO_S=$(ping1 "181.213.132.3")
gauge1 "100"

TEXTAO14="Google 8.8.4.4: $Google_P
Google 8.8.8.8: $Google_S
OpenDNS 208.67.222.222: $OpenDNS_P
OpenDNS 208.67.220.220: $OpenDNS_S
Level3 4.2.2.1: $Level3_P
Level3 4.2.2.2: $Level3_S
Comodo 8.26.56.26: $Comodo_P
Comodo 8.20.247.20: $Comodo_S
DNSWATCH 84.200.69.80: $DNSWATCH_P
DNSWATCH 84.200.70.40: $DNSWATCH_S
Quad9 9.9.9.9: $Quad9_P
Quad9 149.112.112.112: $Quad9_S
Cloudflare 1.1.1.1: $Cloudflare_P
Cloudflare 1.0.0.1: $Cloudflare_S
Algar 200.225.197.34: $Algar_P
Algar 200.225.197.37: $Algar_S
GigaDNS 189.38.95.95: $GIGA_P
GigaDNS 189.38.95.96: $GIGA_S
Claro 181.213.132.2: $CLARO_P
Claro 181.213.132.3: $CLARO_S"

dialog --title 'Resultados do Ping:' --msgbox "$TEXTAO14" 0 0

menu08 "$Recado $TEXTAO14 $Mensagem"
menu05
}

function menu23 {
ipneigh1=$(ip neigh)
dialog --title 'IP Neigh' --msgbox "$ipneigh1" 0 0
menu08 "$Recado $ipneigh1 $Mensagem"
menu05
}

# SpeedTest
function menu050 {
dialog --title 'SpeedTest' --backtitle "$bktitle" --msgbox "Pressione Enter para iniciar o teste e aguarde!" 0 0
speedy=$(curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python3 -)
dialog --title 'SpeedTest' --backtitle "$bktitle" --msgbox "$speedy" 0 0
menu08 "$Recado $speedy $Mensagem"
menu05
}

# Arp-Scan
function menu0501 {
dialog --title 'Arp-Scan' --backtitle "$bktitle" --msgbox "Pressione Enter para iniciar o teste e aguarde!" 0 0
arpscn=$(sudo arp-scan -l)
dialog --title 'Arp-Scan' --backtitle "$bktitle" --msgbox "$arpscn" 0 0
menu08 "$Recado $arpscn $Mensagem"
menu05
}

#WhoIS
function menu051 {
site=$(dialog --title 'WhoIs' --backtitle "$bktitle" --inputbox "Digite o site que deseja localizar informações. Use o seguinte modelo: exemplo.com.br" 10 40 2>&1 > /dev/tty)
dialog --title "WhoIs" --msgbox "Pressione Enter para iniciar o teste e aguarde!" 0 0
wis=$(whois "$site")
dialog --title "WhoIs" --msgbox "$wis" 0 0
menu08 "$Recado $wis $Mensagem"
menu05
}

# Traceroute
function menu052 {
site=$(dialog --title 'TraceRoute' --backtitle "Identificador de hops/saltos que um computador efetua até acessar um site especificado." --inputbox "Digite o site que deseja analisar os Saltos. Use o seguinte modelo: \n
exemplo.com.br \n
A identificação estará concluída quando um (END) surgir no final." 14 40 2>&1 > /dev/tty)
dialog --title "Traceroute" --msgbox "Pressione Enter para iniciar o teste e aguarde!" 0 0
trot=$(traceroute "$site")
dialog --title "Traceroute" --msgbox "$trot" 0 0
menu08 "$Recado $trot $Mensagem"
menu05
}

# Governador de CPU
function menu053 {
governor1=$(cat /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor || echo "Indisponível!")
governor2=$(cat /sys/devices/system/cpu/cpu1/cpufreq/scaling_available_governors || echo "Indisponível!")
var3=$(dialog --help-button --help-label 'Ajuda' --title 'Governador de CPU' --backtitle "$bktitle" --menu "Governador de CPU Atual: \n
$governor1" 0 0 0 \
A 'Conservative' \
B 'OnDemand' \
C 'UserSpace' \
D 'PowerSave' \
E 'Performance' \
F 'Schedutil' \
X 'Voltar' 2>&1 > /dev/tty )
case $? in
  2) dialog --title 'Ajuda' --msgbox "$TEXTAO10" 0 0 ; menu053 ;;
esac
[ $? -ne 0 ] && menu05
case "$var3" in
A) menu10 conservative ;;
B) menu10 ondemand ;;
C) menu10 userspace ;;
D) menu10 powersave ;;
E) menu10 performance ;;
F) menu10 schedutil ;;
X) m10 ;;
esac
}

# Governador de CPU 2
function menu10 {
governor2=$(cat /sys/devices/system/cpu/cpu1/cpufreq/scaling_available_governors)
govr=$(sudo echo $1 | sudo -S tee /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor 2> /dev/null 1> /dev/null && echo "si" || echo "no")
[ "$govr" = "si" ] && {
  dialog --cr-wrap --title "Bem sucedido!" --backtitle "$bktitle" --msgbox "Governador trocado com sucesso!" 0 0 ; menu053
} || {
  dialog --cr-wrap --title "ERRO" --backtitle "$bktitle" --msgbox "Seu sistema não suporta o governador escolhido. Detectamos estes governadores abaixo como suportados: \n \n
> $governor2 < \n \n
Mais informações em AJUDA!" 0 0 ; menu053
  }

}

function menu054 {
pong=$(ping google.com -c 1 1> /dev/null 2> /dev/null && echo "ok" || echo "notok")
[ "$pong" = "notok" ] && {
  dialog --cr-wrap --title "Erro na Rede" --backtitle "$bktitle" --msgbox "O sistema não pode se comunicar com a rede local! Verifique sua conexão e tente novamente mais tarde." 8 40
  start
} || {
  [ "$report" = "0" ] && {
    dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Deseja habilitar a emissão de relatórios de diagnóstico?" 8 40
    [ $? = 0 ] && {
      [ -f "$FILE3" ] && {
        report="1"
        validmail=$(awk 'NR==1' $FILE3)
        dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Deseja reutilizar este(s) e-mail(s) anteriormente utilizado(s) para envio dos relatórios? \n \n
$validmail" 15 40
          [ $? = 0 ] && {
            dialog --cr-wrap --title "Informação" --backtitle "$bktitle" --msgbox "Os relatórios somente funcionam nos menus com *!" 0 0
          } || {
            validmail=$(dialog --title "Inserir Destinatário" --backtitle "$bktitle" --inputbox "Insira o e-mail para o qual deseja enviar os relatórios gerados! \n \n
Pode ser mais de um, bastando separá-los com vírgula e espaço. Exemplo: user@mail.com, user2@mail.com" 15 40 2>&1 > /dev/tty)
             [ -z "$validmail" ] && {
              dialog --cr-wrap --title "Erro no E-mail!" --backtitle "$bktitle" --msgbox "Digite um e-mail válido!" 0 0
             } || {
              echo "$validmail" > "/tmp/.email"
              report="1"
              dialog --cr-wrap --title "Informação" --backtitle "$bktitle" --msgbox "Os relatórios somente funcionam nos items com *!" 0 0
              }
          }
      } || {
        validmail=$(dialog --title "Inserir Destinatário" --backtitle "$bktitle" --inputbox "Insira o e-mail para o qual deseja enviar os relatórios gerados! \n \n
Pode ser mais de um, bastando separá-los com vírgula e espaço. Exemplo: user@mail.com, user2@mail.com" 15 40 2>&1 > /dev/tty)
        [ -z "$validmail" ] && {
          dialog --cr-wrap --title "Erro no E-mail!" --backtitle "$bktitle" --msgbox "Digite um e-mail válido!" 0 0
        } || {
          echo "$validmail" > "/tmp/.email"
          report="1"
          dialog --cr-wrap --title "Informação" --backtitle "$bktitle" --msgbox "Os relatórios somente funcionam nos items com *!" 0 0
          }
      }      
    } || {
      echo "a" > /dev/null
      }
  } || {
    dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Deseja trocar o e-mail de emissão de relatórios de diagnóstico?" 8 40
    [ $? = 0 ] && {
      validmail=$(dialog --title " " --backtitle "$bktitle" --inputbox "Insira o e-mail para o qual deseja enviar os relatórios gerados!" 9 40 2>&1 > /dev/tty)
      echo "$validmail" > "/tmp/.email"
      dialog --cr-wrap --title "Informação" --backtitle "$bktitle" --msgbox "Os relatórios somente funcionam nos items com *!" 0 0
    } || {
      dialog --title "Confirmação" --backtitle "$bktitle" --yesno "Deseja desativar a emissão de relatórios de diagnóstico?" 8 40
      [ $? = 0 ] && {
        report="0"
      } || {
        echo "a" > /dev/null
        }
    }
  }
}

start
}

function menu055 {
[ "$report" = "0" ] && {
  dialog --cr-wrap --title "Informação" --backtitle "$bktitle" --msgbox "Relatórios desativados!" 0 0
} || {
  [ -f "$FILE4" ] && {
    validrelat=$(cat "$FILE4")
    dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Um relatório salvo foi encontrado. \n \n
$validrelat \n \n
Deseja enviá-lo por e-mail?" 20 70
    [ $? = 0 ] && {
      menu08 "$validrelat"
      dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Deseja apagar o relatório salvo?" 8 20
      [ $? = 0 ] && {
        dialog --cr-wrap --title "Informação" --backtitle "$bktitle" --msgbox "O relatório salvo foi apagado!" 0 0
        rm "$FILE4"
      } || {
        echo "a" > /dev/null
        }
    } || {
      dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Deseja apagar o relatório salvo?" 8 20
      [ $? = 0 ] && {
        dialog --cr-wrap --title "Informação" --backtitle "$bktitle" --msgbox "O relatório salvo foi apagado!" 0 0
        rm "$FILE4"
        }
      }
  } || {
    dialog --cr-wrap --title "Informação" --backtitle "$bktitle" --msgbox "Nenhum relatório salvo foi encontrado!" 0 0
    }
}

menu05
}

# Reinicio
function menu06 {
bbalance=$(ps aux | grep "btrfs balance start" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
rrsnap=$(ps aux | grep "rsnapshot" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
rsync1=$(ps aux | grep "rsync" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
cp1=$(ps u | grep "cp" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
datetime=$(date +"%d/%m %H:%M")
[ "$bbalance" = "Executando" ] || [ "$rrsnap" = "Executando" ] || [ "$rsync1" = "Executando" ] || [ "$cp1" = "Executando" ] && {
  dialog --cr-wrap --title 'ERRO AO REINICIAR' --backtitle "$bktitle" --msgbox "Reinício bloqueado! \n
Favor verificar o Status do Sistema ou tente novamente mais tarde." 0 0
} || {
  dialog --title 'Reiniciar' --backtitle "$bktitle" --yesno 'Deseja reiniciar este sistema?' 0 0
  [ $? = 0 ] && {
    [ "$report" = "1" ] && {
      dialog --title 'Relatório' --yesno "Deseja enviar um relatório por e-mail sobre este reinício?" 8 40
      [ $? = 0 ] && {
        menu08 "$Recado $Recado5 $datetime $Mensagem"
      } || {
        echo "a" > /dev/null
        }
    }
  sudo reboot
  }
}

start
}

# Desligamento
function menu07 {
rrsnap=$(ps aux | grep "rsnapshot" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
rsync1=$(ps aux | grep "rsync" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
bbalance=$(ps aux | grep "btrfs balance start" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
cp1=$(ps u | grep "cp" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
datetime=$(date +"%d/%m %H:%M")
[ "$bbalance" = "Executando" ] || [ "$rrsnap" = "Executando" ] || [ "$rsync1" = "Executando" ] || [ "$cp1" = "Executando" ] && {
  dialog --cr-wrap --title 'ERRO AO DESLIGAR' --backtitle 'ERRO AO TENTAR DESLIGAR.' --msgbox "Desligamento bloqueado! \n
Favor verificar o Status do Sistema ou tente novamente mais tarde." 0 0
} || {
  dialog --title 'Desligar' --backtitle 'D E S L I G A R' --yesno 'Deseja desligar este sistema?' 0 0
  [ $? = 0 ] && {
    [ "$report" = "1" ] && {
      dialog --title 'Relatório' --yesno "Deseja enviar um relatório por e-mail sobre este desligamento?" 8 40
      [ $? = 0 ] && {
        menu08 "$Recado $Recado6 $datetime $Mensagem"
      } || {
        echo "a" > /dev/null
        }
    }
  sudo shutdown -h now
  }
}

start
}

# Encaminhar relatórios por Email!
function menu08 {
echo "$1" > "/tmp/.relat"
[ "$report" = "0" ] && {
  [ "$confrel" = "0" ] && {
    dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Os relatórios não estão ativos. Deseja reativá-los temporariamente?" 8 40
    [ $? = 0 ] && {
      [ -f "$FILE3" ] && {
        validmail=$(awk 'NR==1' $FILE3)
        dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Deseja reutilizar este(s) e-mail(s) anteriormente utilizado(s) para envio dos relatórios? \n \n
$validmail" 15 40
        [ $? = 0 ] && {         
          echo "$1" | mutt -s "Diagnóstico - $HOSTNAME" "$validmail"
          dialog --title "Relatório" --msgbox "Relatório enviado com sucesso!" 6 40
        } || {
          dialog --title "Relatório" --msgbox "O atual relatório foi salvo! \n
Utilize o menu 'Ferramentas > Relatórios' para trocar o destinatário. \n \n
Depois vá em 'Ferramentas > Relatórios Salvos' tentar reenviar este relatório por e-mail." 20 50
          report="1"
        }
      } || {  
        dialog --title "Relatório" --msgbox "O atual relatório foi salvo! Utilize o menu 'Ferramentas > Relatórios' para trocar o destinatário. \n \n
Depois vá em 'Ferramentas > Relatórios Salvos' tentar reenviar este relatório por e-mail." 20 50
        report="1"
        }
    } || {
      confrel="1"
      }
  } || {
    echo "a" > /dev/null
    }
} || {
  validmail=$(awk 'NR==1' $FILE3)
  dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Deseja enviar este relatório para $validmail?" 8 40
  [ $? = 0 ] && {
    echo "$1" | mutt -s "Diagnóstico - $HOSTNAME" "$validmail"
    dialog --title "Relatório" --msgbox "Relatório enviado com sucesso!" 6 40
  } || {
    echo "a" > /dev/null
    }
}

}

# Manut. Banco Samba AD-DC
function menu004 {
menu09 samba-ad-dc && smb2=$prcs
[ "$smb2" = "Executando" ] && {
  clear
  sudo samba-tool dbcheck --cross-ncs --fix | tee /tmp/.smbadtmp; read
  tmpad=$(cat /tmp/.smbadtmp)
  menu08 "$Recado $tmpad $Mensagem"
} || {
  dialog --cr-wrap --title 'ERRO DETECTADO' --backtitle "Active Directory & Domain Controller" --msgbox "O Controlador de Domínio não foi encontrado neste sistema!" 7 40
  }

m10
}

function m1x {
dialog --title 'F.F.A.' --msgbox "Ferramentas e Funções Avançadas" 0 0
password3=$(dialog --backtitle "F.F.A.: Ferramentas e Funções Avançadas" --title 'Acesso Restrito' --insecure --passwordbox 'Digite a senha' 0 0 2>&1 > /dev/tty)

[ "$password3" = "1345278" ] && {
  dialog --title 'Porteiro:' --msgbox "Clift Claft Still, a Porta se Abriu!" 6 40
  m10
} || {
  dialog --title 'Acesso Proibido' --msgbox "Permissão Incorreta" 0 0
  }

}

function m11 {
dialog --backtitle "Ferramentas e Funções Avançadas - Utilize com Moderação" --title 'Informação' --yesno "Deseja atualizar o sistema operacional?" 8 40
[ $? = 0 ] && {
  dialog --backtitle "Ferramentas e Funções Avançadas - Utilize com Moderação" --title 'Informação' --yesno "Tem certeza disso? Verifique se os processos em execução não pararão e/ou se configurações não serão perdidas." 8 40
  [ $? = 0 ] && {
    datetime=$(date +"%d/%m %H:%M")
    sudo "$pkg1" update
    upgrd=$(apt list --upgradable)
    sudo "$pkg1" upgrade -y
    sudo "$pkg1" autoremove -y
    datetime2=$(date +"%d/%m %H:%M") # Data e Hord
    echo "# # # Fim! Aperte Enter para continuar. # # #" ; read
    dialog --title "Informação" --msgbox "Verifique se os processos em execução não pararam e/ou se configurações não foram perdidas." 8 40
    [ "$report" = "1" ] && {
      dialog --title "Relatório" --msgbox "Os pacotes a seguir foram atualizados: \n
$upgrd" 20 50
      dialog --title 'Relatório' --yesno "Deseja enviar este relatório por e-mail?" 8 40
      [ $? = 0 ] && {
        menu08 "$Recado $Recado2 $datetime $Recado3 $upgrd $Recado4 $datetime2 $Mensagem"
        menu27 "
$datetime : Nesta data o sistema recebeu as atualizações mais recentes e está em dia com a segurança digital."
      }
    }
  }
}

m10
}

function m122 {
var_stop=$(dialog --backtitle "Ferramentas e Funções Avançadas - Utilize com Moderação" --title 'Atenção' --menu "Funções Avançadas" 0 0 0 \
A 'Parar RSYNC' \
B 'Parar RSNAPSHOT' \
C 'Parar BALANCE' \
D 'Parar COPY' \
X 'Voltar' 2>&1 > /dev/tty )
[ $? -ne 0 ] && start
case "$var_stop" in
A) m12 ;;
B) m13 ;;
C) m14 ;;
D) m15 ;;
X) m10 ;;
esac
}

function m12 {
dialog --backtitle "Ferramentas e Funções Avançadas - Utilize com Moderação" --title 'Informação' --yesno "Deseja parar o processo RSYNC?" 8 40
[ $? = 0 ] && {
  dialog --backtitle "Ferramentas e Funções Avançadas - Utilize com Moderação" --title 'Informação' --yesno "Tem certeza? Backups poderão não ser completados ou até corromper!" 8 40
  [ $? = 0 ] && {
    sudo killall rsync
    dialog --title "ATENÇÃO" --msgbox "Verifique se seus backups estão íntegros." 8 40
  } || {
    echo "a" > /dev/null
    }
} || {
  echo "a" > /dev/null
  }

m122
}

function m13 {
dialog --backtitle "Ferramentas e Funções Avançadas - Utilize com Moderação" --title 'Informação' --yesno "Deseja parar o processo RSNAPSHOT?" 8 40
[ $? = 0 ] && {
  dialog --backtitle "Ferramentas e Funções Avançadas - Utilize com Moderação" --title 'Informação' --yesno "Tem certeza? Backups poderão não ser completados ou até corromper!" 8 40
  [ $? = 0 ] && {
    sudo killall rsnapshot
    dialog --title "ATENÇÃO" --msgbox "Verifique se seus backups estão íntegros." 8 40
  } || {
    echo "a" > /dev/null
    }
} || {
  echo "a" > /dev/null
  }

m122
}

function m14 { 
blnc=$(dialog --title 'Balance' --backtitle "Parar Balance em $HOSTNAME" --inputbox "Insira o caminho:" 0 0 2>&1 > /dev/tty)
[ $? -ne 0 ] && m10
[ -z "$blnc" ] && {
  dialog --backtitle "Ferramentas e Funções Avançadas - Utilize com Moderação" --title "ERRO" --msgbox "Caminho não pode ficar em branco!" 8 40
} || {
  dialog --backtitle "Ferramentas e Funções Avançadas - Utilize com Moderação" --title 'Balance' --backtitle "Parar Balance em $HOSTNAME" --yesno "Tem certeza que deseja parar o Balance em $blnc?" 8 40
  [ $? = 0 ] && {
    sudo btrfs balance cancel "$blnc"
  } || {
    echo "a" > /dev/null
    }
}

m122
}

function m15 {
dialog --backtitle "Ferramentas e Funções Avançadas - Utilize com Moderação" --title 'Informação' --yesno "Deseja parar o processo CoPy?" 8 40
[ $? = 0 ] && {
  dialog --backtitle "Ferramentas e Funções Avançadas - Utilize com Moderação" --title 'Informação' --yesno "Tem certeza? Backups poderão não ser completados ou até corromper!" 8 40
  [ $? = 0 ] && {
    sudo killall cp
    dialog --title "ATENÇÃO" --msgbox "Verifique se seus backups estão íntegros." 8 40
  } || {
    echo "a" > /dev/null
    }
} || {
  echo "a" > /dev/null
  }

m122
}

function liminal { [ -f "$FILE" ] && { [ "$hash1" = "$hash2" ] || [ "$hash1" = "$hash3" ] && { $2; } || { $1; }; } || { $2; }; }

function menu26 {
menu09 pihole-FTL && pihole1=$prcs
[ "$pihole1" = "Executando" ] && {
  blockedsites=$(picron=$(pihole -c -e); echo "$picron" | awk 'NR==11 {print $4}')
  varpi=$(dialog --title 'Servidor de DNS PiHole' --backtitle "$bktitle" --menu "URLs Bloqueadas: \n
$blockedsites" 0 0 0 \
  A '*Resumo' \
  B '*Atualizar PiHole' \
  C '*Atualizar Gravity' \
  D '*White List' \
  E '*Black List' \
  X 'Voltar' 2>&1 > /dev/tty )
  case $? in
    2) dialog --title 'Ajuda' --msgbox "$TEXTAO10" 0 0 ; menu053 ;;
  esac
  [ $? -ne 0 ] && menu05
  case "$varpi" in
  A) menu264 ;;
  B) menu20 ;;
  C) menu261 ;;
  D) menu262 ;;
  E) menu263 ;;
  X) m10 ;;
  esac
} || {
  dialog --title "Informação" --msgbox "PiHole não localizado neste sistema!" 8 40
  m10
  }
}

# Atualizar PiHole
function menu20 {
menu09 pihole-FTL && pihole1=$prcs
[ "$pihole1" = "Executando" ] && {
  dialog --backtitle "$bktitle" --title "PiHole" --yesno "Deseja atualizar o PiHole?" 6 40
  [ $? = 0 ] && {
    datetime=$(date +"%d/%m %H:%M")
    version1=$(pihole -v)
    pihole -up
    version2=$(pihole -v)
    datetime2=$(date +"%d/%m %H:%M") # Data e Hora
    menu08 "$Recado PiHole atualizado de $datetime até $datetime2!
A versão anterior era:

$version1 

A nova versão é:

$version2

Atento ás novidades que a nova versão possa ter trago! $Mensagem"
    menu27 "
$datetime : PiHole® atualizado desta data até $datetime2 para a versão mais nova!"
    }
} || {
  dialog --title "Informação" --msgbox "PiHole não localizado neste sistema!" 8 40
  }

menu26
}

# Atualizar Gravity
function menu261 {
menu09 pihole-FTL && pihole1=$prcs
[ "$pihole1" = "Executando" ] && {
  dialog --backtitle "$bktitle" --title "PiHole" --yesno "Deseja atualizar o Gravity?" 6 40
  [ $? = 0 ] && {
    datetime=$(date +"%d/%m %H:%M")
    pihole -g
    datetime2=$(date +"%d/%m %H:%M") # Data e Hora
    blockedsites=$(picron=$(pihole -c -e); echo "$picron" | awk 'NR==11 {print $4}')
    menu08 "$Recado A lista de bloqueios foi atualizada de $datetime até $datetime2! Agora o sistema bloqueia $blockedsites sites maliciosos. $Mensagem"
    menu27 "
$datetime : A lista de bloqueios foi atualizada desta data até $datetime2! O sistema bloqueia $blockedsites sites maliciosos."
    }
} || {
  dialog --title "Informação" --msgbox "PiHole não localizado neste sistema!" 8 40
  }

menu26
}

# White List
function menu262 {
menu09 pihole-FTL && pihole1=$prcs
[ "$pihole1" = "Executando" ] && {
  dialog --backtitle "$bktitle" --title "PiHole" --yesno "Deseja adicionar uma URL á White List?" 6 40
  [ $? = 0 ] && {
    datetime=$(date +"%d/%m %H:%M")
    validurl=$(dialog --title 'PiHole' --backtitle "$bktitle" --inputbox "Insira a URL que será liberada" 0 0 2>&1 > /dev/tty)
    [ $? -ne 0 ] && menu26
    [ -z "$validurl" ] && {
      dialog --title "ERRO" --msgbox "URL não pode ficar em branco!" 8 40
    } || {
      sudo pihole --white-wild "$validurl"
      dialog --title "Informação" --msgbox "O site $validurl foi liberado! Aguarde até que a mudança reverbere na rede local." 8 40
    }
    menu08 "$Recado O site $validurl foi liberado em $datetime! Aguarde até que a mudança reverbere na rede local. $Mensagem"
    menu27 "
$datetime : Nesta data o site $validurl foi liberado acesso conforme solicitado."
    }
} || {
  dialog --title "Informação" --msgbox "PiHole não localizado neste sistema!" 8 40
  }

menu26
}

# Black List
function menu263 {
menu09 pihole-FTL && pihole1=$prcs
[ "$pihole1" = "Executando" ] && {
  dialog --backtitle "$bktitle" --title "PiHole" --yesno "Deseja adicionar uma URL á Black List?" 6 40
  [ $? = 0 ] && {
    validurl=$(dialog --title 'PiHole' --backtitle "$bktitle" --inputbox "Insira a URL que será bloqueada" 0 0 2>&1 > /dev/tty)
    [ $? -ne 0 ] && menu26
    [ -z "$validurl" ] && {
      dialog --title "ERRO" --msgbox "URL não pode ficar em branco!" 8 40
    } || {
      sudo pihole --wild "$validurl"
      dialog --title "Informação" --msgbox "O site $validurl foi bloqueado! Aguarde até que a mudança reverbere na rede local." 8 40
    }
    menu08 "$Recado O site $validurl foi bloqueado em $datetime! Aguarde até que a mudança reverbere na rede local. $Mensagem"
    menu27 "
$datetime : Nesta data o site $validurl foi bloqueado conforme solicitado."
    }
} || {
  dialog --title "Informação" --msgbox "PiHole não localizado neste sistema!" 8 40
  }

menu26
}

function menu264 {
datetime=$(date +"%d/%m %H:%M")
picron=$(pihole -c -e | awk 'NR>=5 && NR<=17 {print}')
dialog --title 'Chronometer' --msgbox "$picron" 0 0
menu08 "$Recado Status do PiHole em $datetime: 

$picron $Mensagem"
menu26
}

function menu27 {
[ -f "/home/administrador/.DOC/.relat.docx" ] && {
  [ "$doc_rel"="1" ] && {
    dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Deseja enviar o relatório para $datetime3.docx?" 8 40
    [ $? = 0 ] && {
        echo "$1" >> "/home/administrador/.DOC/$datetime3.docx"
        }
      } || {
        m10
      }
  } || {
    dialog --title 'relat.docx' --msgbox "Arquivo não encontrado. Abortando." 8 30
    m10
    }
}

function menu28 {
[ -f "/home/administrador/.DOC/.relat.docx" ] && {
  [ "$doc_rel"="1" ] && {
    datetime=$(date +"%d/%m %H:%M")
    dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Deseja criar um diagnóstico customizado?" 8 40
    [ $? = 0 ] && {
        cusrelat=$(dialog --title 'Custom' --backtitle "$bktitle" --inputbox "O que deseja reportar?" 8 40 "$datetime : " 2>&1 > /dev/tty)
        menu08 "$Recado $cusrelat $Mensagem"
        menu27 "
$cusrelat"
        m10
        }
    } || {
      m10
     }
  } || {
    dialog --title 'relat.docx' --msgbox "Arquivo não encontrado. Abortando." 8 30
    m10
    }
}

function menu29 {
datetime=$(date +"%d/%m %H:%M")
validmail=$(awk 'NR==1' $FILE3)

dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Deseja enviar $datetime3.pdf para $validmail?" 8 40
[ $? = 0 ] && {
  TEXTAO15="Boa tarde,

Segue em anexo o Relatório de Atendimentos, com os chamados, manutenções preventivas e manutenções corretivas executadas no período de $datetime3.

Grato,
José Humberto"
  echo "$TEXTAO15" | mutt -s "Relatório de Atendimentos - Período $datetime3" -a "/home/administrador/.DOC/$datetime3.pdf" -- "$validmail"
  }

dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Deseja enviar um documento diferente para $validmail?" 8 40
[ $? = 0 ] && {
  inputdoc1=$(dialog --title 'Relatório' --backtitle "$bktitle" --inputbox "Insira a data-nome do relatório: " 0 0 "$datetime3" 2>&1 > /dev/tty)
  TEXTAO151="Boa tarde,

Segue em anexo o Relatório de Atendimentos, com os chamados, manutenções preventivas e manutenções corretivas executadas no período de $inputdoc1.

Grato,
José Humberto"
  echo "$TEXTAO151" | mutt -s "Relatório de Atendimentos - Período $inputdoc1" -a "/home/administrador/.DOC/$inputdoc1.pdf" -- "$validmail"
  }

m10
}

function menu291 {
[ -f "/home/administrador/.DOC/$datetime3.pdf" ] && {
  dialog --title 'relat.pdf' --msgbox "Arquivo já existe!" 8 30
} || {
  dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Deseja finalizar um documento de .docx para .pdf?" 8 40
  [ $? = 0 ] && {
    inputdoc2=$(dialog --title 'Relatório' --backtitle "$bktitle" --inputbox "Insira a data-nome do relatório: " 0 0 "$datetime3" 2>&1 > /dev/tty)
    cd "/home/administrador/.DOC/"
    soffice --convert-to "pdf" "/home/administrador/.DOC/$inputdoc2.docx" "/home/administrador/.DOC/$inputdoc2.pdf"
    }
  }

m10
}

function menu30 {
dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Deseja APAGAR um relatório.docx?" 8 40
[ $? = 0 ] && {
  inputdoc3=$(dialog --title 'Deleção' --backtitle "$bktitle" --inputbox "Insira a data-nome do relatório: " 0 0 "$datetime3" 2>&1 > /dev/tty)
  rm "/home/administrador/.DOC/$inputdoc3.docx"
  }

m10
}

function menu301 {
dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Deseja APAGAR um relatório.PDF?" 8 40
[ $? = 0 ] && {
  inputdoc4=$(dialog --title 'Deleção' --backtitle "$bktitle" --inputbox "Insira a data-nome do relatório: " 0 0 "$datetime3" 2>&1 > /dev/tty)
  rm "/home/administrador/.DOC/$inputdoc4.pdf"
  }

m10
}

function menu31 {
VALUE1="//172.20.0.2/backup"
VALUE2="/mnt/backup"
VALUE3="admin"
VALUE4=""
VALUE5=",domain=WORKGROUP"

VALUE0=$(dialog --help-button --help-label 'Show' --ok-label "Montar" --backtitle "$bktitle" --title "Mounting" --form "Montagem de Rede" 15 50 0 \
"PATH: " 1 1 "$VALUE1" 1 10 34 0 \
"MNT:" 2 1 "$VALUE2" 2 10 34 0 \
"USER:" 3 1 "$VALUE3" 3 10 34 0 \
"PASS:" 4 1 "$VALUE4" 4 10 34 0 \
"DOM:" 5 1 "$VALUE5" 5 10 34 0 \
3>&1 1>&2 2>&3 3>&- > /dev/tty)

case $? in
  1) m10 ;;
  2) mntshow1=$(ls /mnt); dialog --title 'MNTs' --msgbox "$mntshow1" 0 0; menu31 ;;
esac

path1=$(echo "$VALUE0" | sed -n 1p)
mntpt1=$(echo "$VALUE0" | sed -n 2p)
user1=$(echo "$VALUE0" | sed -n 3p)
pass1=$(echo "$VALUE0" | sed -n 4p)
dmn1=$(echo "$VALUE0" | sed -n 5p)

[ -z "$path1" ] || [ -z "$mntpt1" ] || [ -z "$user1" ] || [ -z "$pass1" ] && {
  dialog --title "ERRO" --msgbox "Não deixe os campos PATH, MNT, USER ou PASS vazios!" 7 30; m10; }

echa1=$(grep "$mntpt1" -qs /proc/mounts && echo "sim" || echo "nao")
[ "$echa1" = "sim" ] && {
  dialog --title "Informação" --msgbox "Caminho em uso! Escolha outro." 7 30
  menu31
} || {
  sudo mount -t cifs -o user="$user1",password="$pass1""$dmn1",iocharset=utf8,file_mode=0777,dir_mode=0777,noperm "$path1" "$mntpt1"
  mntshow2=$(df -hT)
  dialog --title "Caminho montado!" --msgbox "$mntshow2" 30 60
  m10
  }
}

function menu32 {
  sudo umount -a -t cifs -l
  mntshow3=$(df -hT)
  dialog --title "Informação" --msgbox "$mntshow3" 30 60
}

function menu33 {
[ -f /home/administrador/SMS/SMSPowerView.tmp ] && {
  rm /tmp/.powerview
  /home/administrador/SMS/powerview -c | tee -a /tmp/.powerview
  sed '/^$/d' /tmp/.powerview > /tmp/.powerview2
  RelatPV=$(cat /tmp/.powerview2)
  menu08 "$Recado $RelatPV $Mensagem"
} || {
  dialog --title "Informação" --msgbox "Gerenciador de Nobreak não foi encontrado ou configurado!" 7 40
}

liminal "m3nu01" "menu01"
}

function menu34 {
menu09 mysql && mysql=$prcs
[ "$mysql" = "Executando" ] && {
  clear
  sudo mysql -u administrador -p -D nextcloud -e "DELETE FROM oc_file_locks WHERE 1"; echo "Pressione Enter para finalizar!"; read
} || {
  dialog --cr-wrap --title 'ERRO DETECTADO' --backtitle "NextCloud & MySQL" --msgbox "O serviço MySQL não foi encontrado neste sistema!" 7 40
  }

m10
}

################################################################################
#                                                                              #
################################################################################

# Todos os Textões!
Recado="Diagnóstico do sistema $HOSTNAME, gerado automaticamente pelo $bktitle!

"

Recado2="Em "
Recado3=" o sistema recebeu as atualizações mais recentes e está em dia com sua segurança! 
Os pacotes atualizados foram os seguintes:

"

Recado4="

As Atualizações foram concluídas em "

Recado5="O sistema foi reiniciado em "

Recado6="O sistema foi desligado em "

Mensagem="

AVISO LEGAL: Esta mensagem, inclusive seus anexos, pode conter informações confidenciais e deve ser resguardado o devido sigilo de seu conteúdo. Caso a tenha recebido indevidamente, por favor apague-a imediatamente e comunique o remetente. Qualquer forma de utilização, reprodução, retransmissão, alteração, distribuição e/ou divulgação de conteúdo desta mensagem ou de parte dele, sem a autorização expressa de seu remetente, é estritamente proibida."

TEXTAO01="

NOIP: Informa se o processo NOIP2 está executando, atualizando os IPs externos para acesso de VPNs!
Governador de CPU: Mostra como está a execução do processador, se em Máximo Desempenho, Economia de Energia ou outro.

Balance BTRFS: Manutenção de rotina do sistema. Se estiver em Execução, o computador NÃO poderá ser reiniciado ou desligado!
Rsnapshot: Backup incremental automatizado. Se estiver Executando, o computador não poderá ser desligado!
RSync: Sincronia do Backup em Nuvem ou para um backup RAID 1. Se estiver Executando, o computador não poderá ser reiniciado ou desligado!
CoPy: Sincronia de pastas locais. Se estiver Executando, o computador não poderá ser reiniciado ou desligado!

Cluster: Script que controla máquinas virtuais em sistemas clusterizados.
Deveria executar? Requer virt-manager + DRBD configurados para confirmar.
Balloon: Script que controla a memória RAM de máquinas virtuais.
Deveria executar? Requer virt-manager configurado para confirmar.

Tempos de Boot: Se o sistema foi instalado como UEFI você pode ver (firmware) e (loader) que são
respectivamente a leitura da BIOS e depois a primeira leitura do HD identificando as partições.
Na sequência, temos o (kernel) que representa o Linux propriamente dito; e o UserSpace,
que são os aplicativos e ferramentas do Usuário. No final, o tempo total que o sistema
demorou pra inicializar."

TEXTAO02="

A temperatura costuma ter valores atuais, mínimos (low) e máximos (high)
Além disso, há também a temperatura Crítica (Crit.): Se o sistema atingir ela,
vai desligar instantaneamente por segurança.

Resultados que indicam temperaturas de CPU:
(edge) (cpu_thermal-xxx) (asus-isa-xxxx) (Core X) (coretemp-isa-xxxx)
Resultados que indicam temperaturas de GPU:
(amdgpu-pci-xxxx) (ISA Adapter)
Resultados que indicam temperaturas de Chipset:
(k10temp-pci-xxxx) (acpitz-acpi-xxxx)
Resultados que indicam rotação de cooler:
(cpu_cooler) (fan1) (RPM)
Resultados que indicam Baterias:
(BAT0-acpi-xxx) (fam15h_power-pci-xxxx)
Em Progresso: Novas indicações são adicionadas periodicamente!"

TEXTAO03="

Os resultados são de discos acessíveis no sistema. 
Se um disco não aparecer aqui, significa que está em estado de erro ou foi ejetado.

As opções são:
[Sist. Arq.] [Tipo] [Tam.] [Usado] [Disp.] [Uso%] [Montado em]

Sist. Arq.: Os mais importantes são começados com //IP e /dev.
Tipo: Podem ser EXT4, BTRFS, NTFS, FAT32, etc.
Tam.: Tamanho total do armazenamento.
Usado: Espaço que já foi utilizado.
Disp.: Espaço restante.
Uso%: Porcentagem de uso do disco comparado ao tamanho total.
Montado em: Local aonde o disco está acessível naquele momento."

TEXTAO04="

As informações S.M.A.R.T. de um HDD ou SSD são variadas mas só
algumas partes realmente interessam. Nem todos os HDDs e SSDs exibem todas
essas informações, isso depende do fabricante. As mais importantes são:

01 (0x01) Read Error Rate: Taxa de erro geral durante as leituras do disco.
Ao lado do atributo 07 (0x07), se estiver muito alto, causará muita lentidão.

05 (0x05) Reallocated Sectors Count: Conhecidos também como BadBlocks, indicam falhas de gravação no disco.
A longo prazo isso pode resultar em perda do disco dentro de alguns meses.

07 (0x07) Seek Error Rate: Erro das cabeças magnéticas; podem surgir
por danos ao braço de leitura ou alargamento térmico do disco rígido.
Normalmente não é preocupante mas ao lado do atributo 01 (0x01) pode causar lentidão.

10 (0x0A) Spin Retry Count: Quantidade de vezes que o HDD tentou inicializar após uma falha interna.
A médio prazo isso significa falhas graves das cabeças de leitura e o disco poderá parar em alguns meses.

184 (0xB8) End-to-End error (ou IOEDC): Indica erros nos dados que transitam do disco ou SSD para a memória RAM.
Imediatamente causa muito lentidão de acesso aos dados; com valores altos desse atributo, há perdas de dados.

195 (0xC3) Hardware ECC Recovered: Sozinho não quer dizer muita coisa; porém somado ao resultado do atributo 187 (0xBB)
abaixo, significa que o disco está perdendo dados mas ainda está se recuperando. Lentidão extrema é prevista.

187 (0xBB) Reported Uncorrectable Errors: Erros incorrigíveis que foram reportados durante o processamento do,
Hardware ECC do próprio HDD. Valores altos significam disco extremamente lento.

188 (0xBC) Command Timeout: Quantidade de vezes que o HDD ou SSD desistiu de fazer uma leitura.
Um valor alto indica falha geral da placa lógica do disco.

196 (0xC4) Reallocation Event Count: Quantidade de vezes que o disco copiou dados de um setor ruim para um bom,
se auto-recuperando. Os valores podem ser altos sem perdas de dados, mas a lentidão será notável.

197 (0xC5) Current Pending Sector Count: Setores que aguardam ser remapeados. Altos valores do atributo 187 (0xBB) ou
mesmo do atributo 05 (0x05) indicam que o HDD está com setores defeituosos e está com dificuldades de lidar. Lentidão.

198 (0xC6) (Offline) Uncorrectable Sector Count: Costuma indicar erros na superfície dos discos ou ainda uma falha
mecânica geral da cabeça de leitura dos discos, ou ainda de multiplexadoras de SSDs.

201 (0xC9) Soft Read Error Rate (ou TA Counter Detected): Quantidade de erros causados por software.
Valores altos indicam a presença de bad sectors (diferente de bad blocks), que podem ser corrigidos com
ferramentas de análise, como o HD Regenerator.

As informações acima são referências para análises da saúde dos discos. Atenção ao interpretar os resultados!"

TEXTAO05="

De maneira geral o DRBD precisa estar com todas as suas opções indicando:

Disk: UpToDate
Peer-Disk: UpToDate

Dessa forma os discos estão sincronizados!"

TEXTAO06="

De maneira geral o PCS precisa estar com todas as suas opções indicando:

Node List: Online [ Primary Secondary ]

Full List of Resources: Todos os resources precisam estar ativos, definidos como
Primary e/ou Secondary, dependendo do Nó que está sendo analisado."

TEXTAO07="set from = 'srvlinux.report@gmail.com'
set realname = '$HOSTNAME'
set imap_user = 'srvlinux.report@gmail.com'
set imap_pass = 'objkhaxxwmofspvk'
set smtp_url = 'smtps://srvlinux.report@smtp.gmail.com:465'
set smtp_pass = 'objkhaxxwmofspvk'
set folder = 'imaps://imap.gmail.com/'
set spoolfile = '+INBOX'
set postponed = '+[Gmail]/Drafts'
#set record = '+[Gmail]/Sent Mail'
set trash = '+[Gmail]/Trash'"

TEXTAO08="

A lista abaixo não necessariamente informa todos os processos configurados!
Esteja atento ao que está instalado no sistema. Mesmo aqueles não instalados aparecerão apenas como 'Parado'.

Samba: Se esse servidor compartilha (via smb) arquivos na rede.
Dominio: Se há um Dominio ativo neste servidor, o Samba (smb) é substituido pelo processo samba-ad-dc.

Apache2: Usado se houver um Nextcloud neste servidor.
Lighttpd: Processo usado pelo PiHole se estiver instalado neste servidor.
PiHole: Processo próprio do PiHole se estiver instalado neste servidor.

DRBD: Essencial se este é um servidor Cluster.
Corosync: Essencial se este é um servidor Cluster.
Pacemaker: Essencial se este é um servidor Cluster.

Spark: Monitor do servidor de banco de dados se houver OpenFire neste servidor.
MySQL: Monitor do servidor de banco de dados se houver MySQL neste servidor.

CUPS: Servidor de impressão em Rede através dos protocolos HTTP ou SMB.
Motion: Processo usado pelo Motion, para monitorar WebCams ou ainda sistemas de CFTV.
DWAgent: Se houver um Acesso Remoto com DWService executando nesta máquina.
VPN Client: Se este Servidor está conectado em uma VPN atuando como cliente."

TEXTAO09="

Painel de Ferramentas do Sistema!

Placas de Rede: 

SpeedTest: Calcula as velocidades de Download e Upload de uma
conexão á internet existente.

Arp-Scan: Exibe a tabela ARP da rede, mostrando endereços MAC, IP's e nomes
dos computadores descobertos.

TraceRoute: Calcula quantos Hops, saltos, a latência que uma conexão deste
servidor tem até um site especificado.

Iniciar Scripts: Permite iniciar scripts parados: Cluster e/ou Balloon.

Re-Iniciar NOIP: Permite parar, iniciar ou reiniciar NOIP.

Ajustes Relatórios: Permite enviar por e-mail os resultados dos Menus!
Relatórios Salvos: Permite acessar e enviar por e-mails os relatórios salvos!

Reiniciar: Se não houver nada que impeça, o sistema será reiniciado.
Desligar: Se não houver nada que impeça, o sistema será desligado."

TEXTAO10="

Governadores de CPU são formas como a CPU trabalha para otimizar a performance,
economizar bateria, etc. Num urgência podem ser usados pra esfriar um processador ou melhorar o desempenho geral.

Cada governador possui uma aplicabilidade, dependendo do momento, da necessidade e muitas vezes o padrão em execução
será o ideal para aquele hardware. Os governadores mais comuns com as referidas explicações são:

Conservative: Faz a CPU manter sua frequência no nível mais baixo, porém aumenta a frequência de forma gradual
conforme o necessário.

OnDemand: Faz a CPU manter sua frequência no nível mais baixo e aumenta a frequência para o máximo
conforme a necessidade.

UserSpace: Permite que as aplicações da UserSpace controlem a escala de processamento. Situação Atípica.

PowerSave: Ele mantém o clock mais baixo, não importando o que estiver sendo utilizado.
É o modo de pior desempenho, ideal para economizar baterias e também pode ser usado para esfriar a CPU,
caso o servidor esteja superaquecendo devido a uma carga de trabalho excepcional.

Performance: Faz a CPU manter sua frequência no nível mais alto, mantendo o clock alto mesmo se o
computador não estiver em uso. É o modo de melhor desempenho sem Overclock!

Schedutil: Passa a escala de processamento para o Agendador de Tarefas e as prioridades são definidas de
acordo com a aplicação. Este é o modo que trás o melhor custo-benefício de desempenho e baixo clock.

Um governador aplicado passa a operar imediatamente!"

TEXTAO11="

Aqui são exibidas apenas as VMs nos estados Executando ou Parado.
Caso uma VM não apareça na listagem, verifique o real estado da mesma no menu Status Geral!

Status Geral: Exibe a situação real de todas as VMs configuradas no sistema.
Nome da VM + Estado: Permite controlar a VM: reiniciando, desligando ou ligando a mesma.

Ligar Todas as VMs: Inicializará apenas as VMs em estado de -Shut Off- detectadas.
Serão ignoradas todas as demais VMs em quaisquer outros estados.

Desligar Todas as VMs: Desligará apenas as VMs em estado de -running- detectadas.
Serão ignoradas todas as demais VMs em quaisquer outros estados.
Para maiores informações ver AJUDA em Status Geral."

TEXTAO12="

Name: Nome da máquina virtual [VM] conforme ela foi registrada no virt-manager

State é a situação em que a VM se encontra. Os States podem ser:

running*: VM executando normalmente.
paused*: VM em estado deliberado de pausa.
idle*: VM em estado de pausa, normalmente por alta carga de I/O e/ou aguardando o 
sistema host voltar a responder.
pmsuspended*: VM suspendida com PowerState S3. 
in shutdown*: VM em processo de desligamento.
shut off: VM desligada normalmente.
crashed: Significa que a VM travou e parou de responder abruptamente por algum erro grave,
seja do próprio sistema virtualizado ou erro de disco do host.

* = Em qualquer um destes estados a VM pode corromper se for desligada abruptamente!"

################################################################################
#                                                                              #
################################################################################

# Start

# Checagem Obrigatória de Dependências:
pkg dialog
pkg curl
pkg lm-sensors
pkg whois
pkg arp-scan
pkg traceroute
pkg libatasmart-bin
pkg mutt
pkg udpcast
pkg cifs-utils
pkg msmtp
pkg msmtp-mta
pkg libreoffice --no-install-recommends

# Início do Sistema:
init
