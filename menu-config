#!/bin/bash

# functions
change_password(){
while true; do
	export NEWT_COLORS='root=,black roottext=lightgray,black title=black,lightgray';
	PASSWD1=$(whiptail --backtitle "${RELEASE}: User Password" --title "User: $USER" --passwordbox "Enter new password" --nocancel 8 78 3>&1 1>&2 2>&3)
	PASSWD2=$(whiptail --backtitle "${RELEASE}: User Password" --title "User: $USER" --passwordbox "Enter new password (again)" --nocancel 8 78 3>&1 1>&2 2>&3)
	if [ "$PASSWD1" = "$PASSWD2" ]; then
		PASSWORD="${PASSWD1}"
		export NEWT_COLORS='root=,black roottext=lightgray,black title=black,lightgray'
		if (whiptail --backtitle "${RELEASE}: User Password: Confirm" --title "Confirm" --yesno "    Set the new password?" 0 0); then
			echo "$PASSWORD" | sed 's/.*/\0\n\0/' | sudo passwd -q $USER 2> /dev/null
			whiptail --backtitle "${RELEASE}: User Password: Confirmation" --title "Confirmation" --msgbox "    Password changed successfully." 0 0
		else
			whiptail --title "Cancelled" --msgbox "    Hit enter to return to menu." 0 0
		fi
	else
		export NEWT_COLORS='root=,black roottext=lightgray,black title=black,lightgray'
		whiptail --backtitle "" --msgbox "    Passwords don't match? Try again." 0 0
		continue
	fi
	break
	clear -x
done
}

change_sudo(){
if [[ "$SUDOERS" == "true" ]]; then STATUS="enabled"; else STATUS="disabled"; fi
CONFIRM=`echo "${STATUS}" | sed -e "s/\b\(.\)/\u\1/g"`
US_QUESTION=`echo "${STATUS}" | sed -e "s/\b\(.\)/\u\1/g" | sed 's/d//g'`
export NEWT_COLORS='root=,black roottext=lightgray,black title=black,lightgray'
if (whiptail --backtitle "Sudo: $US_QUESTION Security" --title "Confirm" --yesno "    $US_QUESTION require password?" 0 0); then
	if [[ $SUDOERS == "true" ]]; then
		sudo rm -f /etc/sudoers.d/010_${USER}-nopasswd
	else
		echo "$USER ALL=(ALL) NOPASSWD: ALL" | sudo tee /etc/sudoers.d/010_${USER}-nopasswd
	fi
	whiptail --backtitle "Sudo: $CONFIRM Security" --title "Confirmation" --msgbox "    $CONFIRM successfully." 0 0;
else
	whiptail --title "Cancelled" --msgbox "    Hit enter to return to menu." 0 0;
fi
}

user_security(){
USERNAME=`echo "${USER}" | sed -e "s/\b\(.\)/\u\1/g"`
if [[ -f "/etc/sudoers.d/010_$USER-nopasswd" ]]; then
	SUDOERS="true"
	STATUS="disabled"
else
	SUDOERS="false"
	STATUS="enabled"
fi
while [ 1 ]
do
SECURITY=$(
export NEWT_COLORS='root=,black roottext=lightgray,black title=black,lightgray'
whiptail --backtitle "Security Settings: $USERNAME" --title "Choose" --menu "" --nocancel 0 0 0 \
	"1)" "Password          Change user password" \
	"2)" "Sudo              Require password (${STATUS})" \
	"E)" "Exit .." 3>&2 2>&1 1>&3
)
case $SECURITY in
	"1)")
		change_password
		;;
	"2)")
		change_sudo
		break
		;;
	"E)")
		clear -x
		break
		;;
	esac
done
}

change_hostname(){
CURRENT=`hostname`
export NEWT_COLORS='root=,black roottext=lightgray,black title=black,lightgray'
NEWHOST=$(whiptail --backtitle "${RELEASE}: Hostname" --title "Current: $CURRENT" --inputbox "Enter new hostname" --nocancel 8 78 3>&1 1>&2 2>&3)
HOSTNAME="${NEWHOST}"
export NEWT_COLORS='root=,black roottext=lightgray,black title=black,lightgray'
if (whiptail --backtitle "Hostname: Confirm" --title "Confirm" --yesno "    Apply new hostname? ${HOSTNAME}" 0 0); then
	sudo sh -c "echo '$HOSTNAME' > /etc/hostname"
	sudo sed -i "2s/.*/127.0.1.1	$HOSTNAME/" /etc/hosts
	if [[ `grep -w "Devuan" "/etc/os-release"` ]]; then
		sudo service hostname.sh --full-restart
		sudo service avahi-daemon restart
	else
		sudo hostnamectl set-hostname $HOSTNAME
		sudo systemctl restart avahi-daemon
	fi
	whiptail --backtitle "Hostname: Confirmation" --title "Confirmation" --msgbox "    ${HOSTNAME} applied successfully." 0 0
else
	whiptail --title "Cancelled" --msgbox "    Hit enter to return to menu." 0 0
fi
clear -x
}

# main menu
while [ 1 ]
do
CHOICE=$(
export NEWT_COLORS='root=,black roottext=lightgray,black title=black,lightgray'
whiptail --backtitle "${RELEASE}: System Settings" --title "Menu Config" --menu "" --nocancel 0 25 0 \
	"W)" "WiFi          Configurar rede WiFi" \
	"" "" \
	"1)" "Seguranca          Gestao de Seguranca do Usuario" \
	"2)" "Hostname          Trocar o hostname" \
	"3)" "Teclado          Trocar o layout do teclado" \
	"4)" "Localizacao           Mudar idioma" \
	"5)" "Timezone          Mudar regiao da data e hora" \
	"6)" "Governador          Mudar frequencia de CPU" \
	"Q)" "Quit .." 3>&2 2>&1 1>&3
)
case $CHOICE in
	"W)")
		if [[ `command -v nmtui` ]]; then sudo nmtui; else swh -m; fi
		;;
	"")
		;;
	"1)")
		user_security
		;;
	"2)")
		change_hostname
		;;
	"3)")
		sudo dpkg-reconfigure keyboard-configuration
		;;
	"4)")
		sudo dpkg-reconfigure locales
		;;
	"5)")
		sudo dpkg-reconfigure tzdata
		;;
	"6)")
		governor -m
		;;
	"")
		;;
	"Q)")
		echo "Program terminated."
		exit 0
		;;
	esac
done
