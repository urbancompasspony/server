#!/bin/bash

# For Ubuntu 22.04!
export NEEDRESTART_MODE=a
export DEBIAN_FRONTEND=noninteractive

export var1; export var2

mTITLE="Docker Orchestration"
bkTTITLE="Sistema Automatizado de Orquestração de Containers"

github="https://raw.githubusercontent.com/urbancompasspony/docker/main/"

function check {
  [ $(docker network ls | grep macvlan | awk '{print $2}') ] && { 
    lantest="sim" 
  } || {
    lantest="nao"
    }
 
  [ "$lantest" = "nao" ] && {
    dialog --title "MACVLAN" --yesno "Deseja criar uma rede macvlan?" 6 40
    [ $? = 0 ] && {
    
    gateway0=$(route -n | grep 'UG[ \t]' | awk '{print $2}')
    rede0=$(ls /sys/class/net | grep enp) 
    
    ip a
    
    echo ""
    echo "#########################################"
    echo "# Configurações pré-carregadas!         #"
    echo "# Pressione ENTER ao acabar a consulta. #"
    echo "#########################################"
    echo ""
    
    read
    
    VALUE1="$gateway0/24"; VALUE2="$gateway0"; VALUE3="$rede0"

    VALUE0=$(dialog --ok-label "Criar" --title "Nova Rede Bridge" --form "Subnet = x.x.0.0/24" 10 40 0 \
"Subnet  :" 1 1 "$VALUE1" 1 10 20 0 \
"Gateway :" 2 1 "$VALUE2" 2 10 20 0 \
"Interfc :" 3 1 "$VALUE3" 3 10 20 0 \
3>&1 1>&2 2>&3 3>&- > /dev/tty)

    [ $? -ne 0 ] && exit
    var1=$(echo "$VALUE0" | sed -n 1p)
    var2=$(echo "$VALUE0" | sed -n 2p)
    var3=$(echo "$VALUE0" | sed -n 3p)
    
    [ -z "$var1" ] || [ -z "$var2" ] && {
      dialog --title "ERRO" --msgbox "Não deixe nenhum campo vazio!" 8 40
      check
    } || {
      sudo docker network create -d macvlan --subnet="$var1" --gateway="$var2" -o parent="$var3" macvlan
      start
      }

      } || {
        echo "ATENÇÃO: Não há macvlan para os containers!"
        pullall
        }
    } || {
      start
      }

}

function start {
var0=$(dialog --title "$mTITLE" --backtitle "$bkTTITLE" --menu " " 0 0 0 \
1 'Essentials' \
2 'Servers' \
3 'Others' \
4 'Tools' \
5 'Docker Managers' \
6 '- Pull Only! -' \
X 'Sair' 2>&1 > /dev/tty )

case "$var0" in
1) essentials ; start ;;
2) servers ; start ;;
3) others ; start ;;
4) tools ; start ;;
5) managers ; start ;;
6) pullall ; start ;;
X) exit ;;
esac
}

function essentials {
var0=$(dialog --title "$mTITLE" --backtitle "$bkTTITLE" --menu " " 0 0 0 \
1 'PiHole' \
2 'Dominio' \
3 'Z MySQL' \
4 'ZA Spark [OpenFire]' \
5 'ZB1 NextCloud' \
6 'ZB2 Collabora' \
7 'SAMBA' \
8 'Pentest' \
X '<' 2>&1 > /dev/tty )

case "$var0" in
1) wget "$github"01-pihole -O /tmp/pihole; sudo bash /tmp/pihole ;;
2) wget "$github"02-domain -O /tmp/domain; sudo bash /tmp/domain ;;
3) wget "$github"04.0-mysql -O /tmp/mysql; sudo bash /tmp/mysql ;;
4) wget "$github"26-openfire -O /tmp/openfire; sudo bash /tmp/openfire ;;
5) wget "$github"04.2-nextcloud -O /tmp/nextcloud; sudo bash /tmp/nextcloud ;;
6) wget "$github"04.3-collabora -O /tmp/collabora; sudo bash /tmp/collabora ;;
7) wget "$github"06-samba -O /tmp/samba; sudo bash /tmp/samba ;;
8) wget "$github"09-pentest -O /tmp/pentest; sudo bash /tmp/pentest ;;
X) start ;;
esac
}

function tools {
var0=$(dialog --title "$mTITLE" --backtitle "$bkTTITLE" --menu " " 0 0 0 \
1 'AutoMigrate ADDC' \
2 'AutoExport SAMBA' \
3 'Backup ADDC' \
4 'Backup SAMBA' \
5 'LocalSpeedtest' \
X '<' 2>&1 > /dev/tty )

case "$var0" in
1) wget "$github"07.1-AutoMigrateADDC.sh -O /tmp/migrateaddc; sudo bash /tmp/migrateaddc ;;
2) wget "$github"08.1-AutoExport_Samba.sh -O /tmp/migratesamba; sudo bash /tmp/migratesamba ;;
3) wget "$github"07.2-BackupADDC.sh -O /tmp/backupaddc; sudo bash /tmp/backupaddc ;;
4) wget "$github"08.2-Backup_SAMBA -O /tmp/backupsmb; sudo bash /tmp/backupsmb ;;
5) wget "$github"16-speedtest -O /tmp/speedtest; sudo bash /tmp/speedtest ;;
X) start ;;
esac
}

function servers {
var0=$(dialog --title "$mTITLE" --backtitle "$bkTTITLE" --menu " " 0 0 0 \
1 'LAN Cache' \
2 'OracleDB XE' \
3 'YoutubeDL' \
4 'Transmission' \
5 'KeepAliveD 1' \
6 'KeepAliveD 2' \
7 'FileBrowser' \
8 'UniFi' \
X '<' 2>&1 > /dev/tty )

case "$var0" in
1) wget "$github"11-lancache -O /tmp/lancache; sudo bash /tmp/lancache ;;
2) wget "$github"12-oracle_xe -O /tmp/oracle; sudo bash /tmp/oracle ;;
3) wget "$github"17-youtubedl -O /tmp/youtube; sudo bash /tmp/youtube ;;
4) wget "$github"18-transmission -O /tmp/transmission; sudo bash /tmp/transmission ;;
5) wget "$github"20.1-keepalived -O /tmp/keep1; sudo bash /tmp/keep1 ;;
6) wget "$github"20.2-keepalived -O /tmp/keep2; sudo bash /tmp/keep2 ;;
7) wget "$github"22-filebrowser -O /tmp/filebrowser; sudo bash /tmp/filebrowser ;;
8) wget "$github"03-unifi -O /tmp/unifi; sudo bash /tmp/unifi ;;
X) start ;;
esac
}

function others {
var0=$(dialog --title "$mTITLE" --backtitle "$bkTTITLE" --menu " " 0 0 0 \
1 'CUPS' \
2 'HomeAssistant' \
3 'Apache Static' \
X '<' 2>&1 > /dev/tty )

case "$var0" in
1) wget "$github"10-cups -O /tmp/cups; sudo bash /tmp/cups ;;
2) wget "$github"19-homeassistant -O /tmp/home; sudo bash /tmp/home ;;
3) wget "$github"24-apache -O /tmp/apache; sudo bash /tmp/apache ;;
X) start ;;
esac
}

function managers {
var0=$(dialog --title "$mTITLE" --backtitle "$bkTTITLE" --menu " " 0 0 0 \
1 'Yacht' \
2 'Kuma' \
3 'Rancher' \
4 'Portainer' \
5 'Pottava' \
X '<' 2>&1 > /dev/tty )

case "$var0" in
1) wget "$github"14-yacht -O /tmp/yacht; sudo bash /tmp/yacht ;;
2) wget "$github"15-kuma -O /tmp/kuma; sudo bash /tmp/kuma ;;
3) wget "$github"21-rancher -O /tmp/rancher; sudo bash /tmp/rancher ;;
4) wget "$github"22-portainer -O /tmp/portainer; sudo bash /tmp/portainer ;;
5) wget "$github"23-pottava -O /tmp/pottava; sudo bash /tmp/pottava ;;
X) start ;;
esac
}

function pullall {
var0=$(dialog --title "$mTITLE" --backtitle "$bkTTITLE" --menu " " 0 0 0 \
1 'PiHole' \
2 'Dominio' \
3 'MySQL' \
4 'Nextcloud' \
5 'MariaDB' \
6 'Collabora' \
7 'SAMBA' \
8 'Pentest' \
9 'LocalSpeedtest' \
10 'LAN Cache' \
11 'OracleDB XE' \
12 'YoutubeDL' \
13 'Transmission' \
14 'KeepAliveD 1' \
15 'KeepAliveD 2' \
16 'FileBrowser' \
17 'UniFi' \
18 'CUPS' \
19 'HomeAssistant' \
20 'Apache2' \
21 'Yacht' \
22 'Kuma' \
23 'Rancher' \
24 'Portainer' \
25 'Pottava' \
26 'OpenFire [Spark]' \
X '<' 2>&1 > /dev/tty )

case "$var0" in
1) docker pull pihole/pihole:latest ;;
2) [ $(arch) = "x86_64" ] && { docker pull urbancompasspony/domain; } || { docker pull urbancompasspony/domain-arm; } ;;
3) docker pull mysql:8 ;;
4) docker pull nextcloud ;;
5) docker pull mariadb:latest ;;
6) docker pull collabora/code ;;
7) [ $(arch) = "x86_64" ] && { docker pull urbancompasspony/migrate-samba; } || { docker pull urbancompasspony/migrate-samba-arm; } ;;
8) echo "Not Found" ;;
9) docker pull openspeedtest/latest ;;
10) docker pull lancachenet/monolithic:latest ;;
11) echo "Not Found" ;;
12) docker pull nbr23/youtube-dl-server:latest ;;
13) echo "Not Found" ;;
14) echo "Not Found" ;;
15) echo "Not Found" ;;
16) echo "Not Found" ;;
17) docker pull lscr.io/linuxserver/unifi-controller:latest ;;
18) echo "Not Found" ;;
19) echo "Not Found" ;;
20) docker pull httpd:2.4 ;;
21) docker pull selfhostedpro/yacht ;;
22) docker pull louislam/uptime-kuma:1 ;;
23) docker pull rancher/server:stable ;;
24) docker pull portainer/portainer-ce ;;
25) docker pull pottava/docker-webui ;;
26) docker pull urbancompasspony/openfire:latest ;;
X) start ;;
esac
}

# Start
check
