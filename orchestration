#!/bin/bash

export NEEDRESTART_MODE=a
export DEBIAN_FRONTEND=noninteractive

export var1; export var2

mTITLE="Docker Orchestration"
bkTTITLE="Sistema Automatizado de Orquestração de Containers"

github="https://raw.githubusercontent.com/urbancompasspony/docker/main/"

function start {
  if ! var0=$(dialog --title "$mTITLE" --backtitle "$bkTTITLE" --menu "" 0 0 0 \
  1 'Modelo & Ferramentas' \
  2 'Somente Contrato' \
  3 'Serviços Gerais' \
  4 'Bancos de Dados' \
  5 'Outros' \
  X 'Sair' 2>&1 > /dev/tty ); then
    exit
  fi

  case "$var0" in
  1) modelstools ; start ;;
  2) contratos0 ; start ;;
  3) general ; start ;;
  4) database ; start ;;
  5) personal ; start ;;
  X) exit ;;
  esac
}

function contratos0 {
  if ! var0=$(dialog --title "$mTITLE" --backtitle "$bkTTITLE" --menu "" 0 0 0 \
  1 'File Browser' \
  2 'Homarr' \
  3 'PenTest' \
  4 'UniFi' \
  5 'GLPI' \
  6 'Reverse Proxy' \
  7 'OpenFire (Spark)' \
  8 'OnlyOffice' \
  9 'Tailscale CLIENT' \
  10 'QDir Stat' \
  11 'Sist2 Indexer' \
  12 'Network UPS Tools Gui (L)' \
  13 'SMS PowerViewer' \
  14 'Kuma' \
  X '<' 2>&1 > /dev/tty ); then
    return
  fi

  case "$var0" in
  1) wget "$github"28-filebrowser -O /tmp/filebrowser; sudo bash /tmp/filebrowser ;;
  2) wget "$github"60-homarr -O /tmp/homarr; sudo bash /tmp/homarr ;;
  3) wget "$github"09-pentest -O /tmp/pentest; sudo bash /tmp/pentest ;;
  4) wget "$github"03-unifi-net -O /tmp/unifi; sudo bash /tmp/unifi ;;
  5) wget "$github"40-glpi -O /tmp/glpi; sudo bash /tmp/glpi ;;
  6) wget "$github"33-reverseproxy -O /tmp/apacherp; sudo bash /tmp/apacherp ;;
  7) wget "$github"27-openfire -O /tmp/openfire; sudo bash /tmp/openfire ;;
  8) wget "$github"34-onlyoffice -O /tmp/ooffice; sudo bash /tmp/ooffice ;;
  9) wget "$github"13-tailscale -O /tmp/tailscale; sudo bash /tmp/tailscale ;;
  10) wget "$github"74-qdirstat -O /tmp/qdirstat; sudo bash /tmp/qdirstat ;;
  11) wget "$github"80-sist2 -O /tmp/sist2; sudo bash /tmp/sist2 ;;
  12) wget "$github"06-nut-gui -O /tmp/nut-gui; sudo bash /tmp/nut-gui ;;
  13) wget "$github"11-SMS-PV -O /tmp/SMS; sudo bash /tmp/SMS ;;
  14) wget "$github"15-kuma -O /tmp/kuma; sudo bash /tmp/kuma ;;
  X) return ;;
  esac
}

function modelstools {
  if ! var0=$(dialog --title "$mTITLE" --backtitle "$bkTTITLE" --menu "" 0 0 0 \
  1 'DashDot' \
  2 'Active Directory' \
  3 'MySpeed  Test WAN' \
  4 'OpenSpeedTest LAN' \
  5 'PiHole' \
  6 'XPRA VM MGR' \
  X '<' 2>&1 > /dev/tty ); then
    return
  fi

  case "$var0" in
  1) wget "$github"61-dashdot -O /tmp/dashdot; sudo bash /tmp/dashdot ;;
  2) wget "$github"02-domain -O /tmp/domain; sudo bash /tmp/domain ;;
  3) wget "$github"20-myspeed-tracker -O /tmp/myspeed; sudo bash /tmp/myspeed ;;
  4) wget "$github"16-openspeedtest -O /tmp/speedtest; sudo bash /tmp/speedtest ;;
  5) wget "$github"01-pihole -O /tmp/pihole; sudo bash /tmp/pihole ;;
  6) wget "$github"45-xpra-virt-manager -O /tmp/45-xpra-virt-manager; sudo bash /tmp/45-xpra-virt-manager ;;
  X) return ;;
  esac
}

function general {
  if ! var0=$(dialog --title "$mTITLE" --backtitle "$bkTTITLE" --menu "" 0 0 0 \
  1 'Ferdium (RAMBOX)' \
  2 'NextCloud' \
  3 'ntfy' \
  4 'Servidor Apache' \
  5 'Servidor CUPS' \
  6 'Servidor FTP' \
  7 'Syncthing CLIENT' \
  8 'Chromium Browser' \
  X '<' 2>&1 > /dev/tty ); then
    return
  fi

  case "$var0" in
  1) wget "$github"25-ferdium -O /tmp/ferdium; sudo bash /tmp/ferdium ;;
  2) wget "$github"26-nextcloud -O /tmp/nextcloud; sudo bash /tmp/nextcloud ;;
  3) wget "$github"30-ntfy_server -O /tmp/ntfy_server; sudo bash /tmp/ntfy_server ;;
  4) wget "$github"36-generic_apache -O /tmp/genericapache; sudo bash /tmp/genericapache ;;
  5) wget "$github"10-cups -O /tmp/cups; sudo bash /tmp/cups ;;
  6) wget "$github"37-ftp-server -O /tmp/ftp-server; sudo bash /tmp/ftp-server ;;
  7) wget "$github"42.0-syncthing -O /tmp/syncthing; sudo bash /tmp/syncthing ;;
  8) wget "$github"17-Chromium -O /tmp/Chromium; sudo bash /tmp/Chromium ;;
  X) return ;;
  esac
}

function database {
  if ! var0=$(dialog --title "$mTITLE" --backtitle "$bkTTITLE" --menu "" 0 0 0 \
  1 'MySQL' \
  2 'MariaDB' \
  3 'OracleXE 21C' \
  4 'ElasticSearch 7.17.22' \
  X '<' 2>&1 > /dev/tty ); then
    return
  fi

  case "$var0" in
  1) wget "$github"04-mysql -O /tmp/mysql; sudo bash /tmp/mysql ;;
  2) wget "$github"29-mariadb -O /tmp/mariadb; sudo bash /tmp/mariadb ;;
  3) wget "$github"05-oracle_xe -O /tmp/oracle_xe; sudo bash /tmp/oracle_xe ;;
  4) wget "$github"78-elasticsearch -O /tmp/elasticsearch; sudo bash /tmp/elasticsearch ;;
  X) return ;;
  esac
}

function personal {
  if ! var0=$(dialog --title "$mTITLE" --backtitle "$bkTTITLE" --menu "" 0 0 0 \
  1 'Luanti Server' \
  2 'SSH DW Backup (L)' \
  3 'Jellyfin' \
  4 'qBitTorrent' \
  5 'Dominio & CUPS (BETA)' \
  6 'Simple Chat Server' \
  7 'Honeygain' \
  X '<' 2>&1 > /dev/tty ); then
    return
  fi

  case "$var0" in
  1) wget "$github"12-luanti-server -O /tmp/luanti; sudo bash /tmp/luanti ;;
  2) wget "$github"38-ssh-dw -O /tmp/ssho; sudo bash /tmp/ssho ;;
  3) wget "$github"19-jellyfin -O /tmp/jellyfin; sudo bash /tmp/jellyfin ;;
  4) wget "$github"21-qbittorrent -O /tmp/qbittorrent; sudo bash /tmp/qbittorrent ;;
  5) wget "$github"58-domain-test -O /tmp/dtest; sudo bash /tmp/dtest ;;
  6) wget "$github"07-simple-web-chat -O /tmp/chatsimple; sudo bash /tmp/chatsimple ;;
  7) wget "$github"08-honeygain -O /tmp/honeygain; sudo bash /tmp/honeygain ;;
  X) return ;;
  esac
}

if ! command -v yq >/dev/null 2>&1; then
  clear; echo "yq não foi encontrado no sistema"; sleep 3
  return 1
fi

if ! docker network inspect macvlan &>/dev/null; then
    dialog --title "ERRO" --msgbox "A rede MACVLAN não existe! Crie uma antes de continuar." 6 40
    return 1
fi

start
