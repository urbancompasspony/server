#!/bin/bash

export var1; export var2

function check {
  [ $(docker network ls | grep macvlan | awk '{print $2}') ] && { 
    lantest="sim" 
  } || {
    lantest="nao"
    }
 
  [ "$lantest" = "nao" ] && {
    dialog --title "MACVLAN" --yesno "Deseja criar uma rede macvlan?" 6 40
    [ $? = 0 ] && {
    
    gateway0=$(route -n | grep 'UG[ \t]' | awk '{print $2}')
    rede0=$(ls /sys/class/net | grep enp) 
    
    ip a
    
    echo ""
    echo "#########################################"
    echo "# Configurações pré-carregadas!         #"
    echo "# Pressione ENTER ao acabar a consulta. #"
    echo "#########################################"
    echo ""
    
    read
    
    VALUE1="$gateway0/24"; VALUE2="$gateway0"; VALUE3="$rede0"

    VALUE0=$(dialog --ok-label "Criar" --title "Nova Rede Bridge" --form "Subnet = x.x.0.0/24" 10 40 0 \
"Subnet  :" 1 1 "$VALUE1" 1 10 20 0 \
"Gateway :" 2 1 "$VALUE2" 2 10 20 0 \
"Interfc :" 3 1 "$VALUE3" 3 10 20 0 \
3>&1 1>&2 2>&3 3>&- > /dev/tty)

    [ $? -ne 0 ] && exit
    var1=$(echo "$VALUE0" | sed -n 1p)
    var2=$(echo "$VALUE0" | sed -n 2p)
    var3=$(echo "$VALUE0" | sed -n 3p)
    
    [ -z "$var1" ] || [ -z "$var2" ] && {
      dialog --title "ERRO" --msgbox "Não deixe nenhum campo vazio!" 8 40
      check
    } || {
      sudo docker network create -d macvlan --subnet="$var1" --gateway="$var2" -o parent="$var3" macvlan
      start
      }

      } || {
        echo "ATENÇÃO: Não há macvlan para os containers!"
        sleep 3
        start
        }
      
    } || {
      start
      }

}

function start {
var0=$(dialog --title 'Docker Manager' --backtitle "Sistema Automatizado de Orquestração de Containers" --menu " " 0 0 0 \
1 '01 PiHole' \
2 '02 Dominio' \
3 '03 UniFi' \
4 '041 MySQL' \
5 '042 NextCloud' \
6 '05 Backup' \
7 '06 SAMBA' \
8 '07 AutoMigrate ADDC' \
9 '08 AutoExport SAMBA Shared Server' \
10 '09 Pentest' \
11 '10 CUPS' \
12 '11 LAN Cache' \
13 '12 OracleDB XE' \
14 '13 RSnapShots' \
15 '14 Yacht' \
16 '15 Kuma' \
17 '16 LocalSpeedtest' \
18 '17 YoutubeDL' \
19 '18 Transmission' \
20 '19 HomeAssistant' \
21 '20.1 KeepAliveD' \
22 '20.2 KeepAliveD' \
X 'Sair' 2>&1 > /dev/tty )

case "$var0" in
1) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/01-pihole | sudo bash ; start ;;
2) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/02-domain | sudo bash ; start ;;
3) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/03-unifi | sudo bash ; start ;;
4) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/04.1-mysql | sudo bash ; start ;;
5) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/04.2-nextcloud | sudo bash ; start ;;
6) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/05-backup | sudo bash ; start ;;
7) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/06-samba | sudo bash ; start ;;
8) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/07.1-AutoMigrateADDC.sh | sudo bash ; start ;;
9) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/08.1-AutoExport_Samba.sh | sudo bash ; start ;;
10) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/09-pentest | sudo bash ; start ;;
11) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/10-cups | sudo bash ; start ;;
12) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/11-lancache | sudo bash ; start ;;
13) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/12-oracle_xe | sudo bash ; start ;;
14) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/13-rsnapshot | sudo bash ; start ;;
15) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/14-yacht | sudo bash ; start ;;
16) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/15-kuma | sudo bash ; start ;;
17) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/16-speedtest | sudo bash ; start ;;
18) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/17-youtubedl | sudo bash ; start ;;
19) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/18-transmission | sudo bash ; start ;;
20) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/19-homeassistant | sudo bash ; start ;;
21) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/20.1-keepalived | sudo bash ; start ;;
22) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/20.2-keepalived | sudo bash ; start ;;
X) echo "Saindo..." && curl -sSL https://raw.githubusercontent.com/urbancompasspony/server/main/docker | sudo bash && break ;;
esac
}

# Start
check
