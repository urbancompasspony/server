#!/bin/bash

export var1; export var2

function check {
  [ $(docker network ls | grep macvlan | awk '{print $2}') ] && { 
    lantest="sim" 
  } || {
    lantest="nao"
    }
 
  [ "$lantest" = "nao" ] && {
    dialog --title "MACVLAN" --yesno "Deseja criar uma rede macvlan?" 6 40
    [ $? = 0 ] && {
    
    gateway0=$(route -n | grep 'UG[ \t]' | awk '{print $2}')
    rede0=$(ls /sys/class/net | grep enp) 
    
    ip a
    
    echo ""
    echo "#########################################"
    echo "# Configurações pré-carregadas!         #"
    echo "# Pressione ENTER ao acabar a consulta. #"
    echo "#########################################"
    echo ""
    
    read
    
    VALUE1="$gateway0/24"; VALUE2="$gateway0"; VALUE3="$rede0"

    VALUE0=$(dialog --ok-label "Criar" --title "Nova Rede Bridge" --form "Subnet = x.x.0.0/24" 10 40 0 \
"Subnet  :" 1 1 "$VALUE1" 1 10 20 0 \
"Gateway :" 2 1 "$VALUE2" 2 10 20 0 \
"Interfc :" 3 1 "$VALUE3" 3 10 20 0 \
3>&1 1>&2 2>&3 3>&- > /dev/tty)

    [ $? -ne 0 ] && exit
    var1=$(echo "$VALUE0" | sed -n 1p)
    var2=$(echo "$VALUE0" | sed -n 2p)
    var3=$(echo "$VALUE0" | sed -n 3p)
    
    [ -z "$var1" ] || [ -z "$var2" ] && {
      dialog --title "ERRO" --msgbox "Não deixe nenhum campo vazio!" 8 40
      check
    } || {
      sudo docker network create -d macvlan --subnet="$var1" --gateway="$var2" -o parent="$var3" macvlan
      start
      }

      } || {
        echo "ATENÇÃO: Não há macvlan para os containers!"
        sleep 3
        start
        }
      
    } || {
      start
      }

}

function start {
var0=$(dialog --title 'Docker Manager' --backtitle "Sistema Automatizado de Orquestração de Containers" --menu " " 0 0 0 \
1 'Essentials' \
2 'Tools' \
3 'Servers' \
4 'Others' \
5 'Docker Managers' \
X 'Sair' 2>&1 > /dev/tty )

case "$var0" in
1) essentials ; start ;;
2) tools ; start ;;
3) servers ; start ;;
4) others ; start ;;
5) managers ; start ;;
X) echo "Saindo..." && wget https://raw.githubusercontent.com/urbancompasspony/server/main/docker -O /tmp/docker; bash /tmp/docker && exit ;;
esac
}

function essentials {
var0=$(dialog --title 'Docker Manager' --backtitle "Sistema Automatizado de Orquestração de Containers" --menu " " 0 0 0 \
1 'PiHole' \
2 'Dominio' \
3 'MySQL' \
4 'NextCloud' \
5 'Backup' \
6 'SAMBA' \
7 'Pentest' \
8 'RSnapShots' \
X 'Voltar' 2>&1 > /dev/tty )

case "$var0" in
1) wget https://raw.githubusercontent.com/urbancompasspony/docker/main/01-pihole -O /tmp/pihole; echo $password sudo -S bash /tmp/pihole ;;
2) wget https://raw.githubusercontent.com/urbancompasspony/docker/main/02-domain -O /tmp/domain; echo $password sudo -S bash /tmp/domain ;;
3) wget https://raw.githubusercontent.com/urbancompasspony/docker/main/04.1-mysql -O /tmp/mysql; echo $password sudo -S bash /tmp/mysql ;;
4) wget https://raw.githubusercontent.com/urbancompasspony/docker/main/04.2-nextcloud -O /tmp/nextcloud; echo $password sudo -S bash /tmp/nextcloud ;;
5) wget https://raw.githubusercontent.com/urbancompasspony/docker/main/05-backup -O /tmp/backup; echo $password sudo -S bash /tmp/backup ;;
6) wget https://raw.githubusercontent.com/urbancompasspony/docker/main/06-samba -O /tmp/samba; echo $password sudo -S bash /tmp/samba ;;
7) wget https://raw.githubusercontent.com/urbancompasspony/docker/main/09-pentest -O /tmp/pentest; echo $password sudo -S bash /tmp/pentest ;;
8) wget https://raw.githubusercontent.com/urbancompasspony/docker/main/13-rsnapshot -O /tmp/rsnapshot; echo $password sudo -S bash /tmp/rsnapshot ;;
X) start ;;
esac
}

function tools {
var0=$(dialog --title 'Docker Manager' --backtitle "Sistema Automatizado de Orquestração de Containers" --menu " " 0 0 0 \
1 'AutoMigrate ADDC' \
2 'AutoExport SAMBA' \
3 'LocalSpeedtest' \
X 'Voltar' 2>&1 > /dev/tty )

case "$var0" in
1) wget https://raw.githubusercontent.com/urbancompasspony/docker/main/07.1-AutoMigrateADDC.sh -O /tmp/migrateaddc; echo $password sudo -S bash /tmp/migrateaddc ;;
2) wget https://raw.githubusercontent.com/urbancompasspony/docker/main/08.1-AutoExport_Samba.sh -O /tmp/migratesamba; echo $password sudo -S bash /tmp/migratesamba ;;
3) wget https://raw.githubusercontent.com/urbancompasspony/docker/main/16-speedtest -O /tmp/speedtest; echo $password sudo -S bash /tmp/speedtest ;;
X) start ;;
esac
}

function servers {
var0=$(dialog --title 'Docker Manager' --backtitle "Sistema Automatizado de Orquestração de Containers" --menu " " 0 0 0 \
1 'LAN Cache' \
2 'OracleDB XE' \
3 'YoutubeDL' \
4 'Transmission' \
5 'KeepAliveD 1' \
6 'KeepAliveD 2' \
7 'FileBrowser' \
X 'Voltar' 2>&1 > /dev/tty )

case "$var0" in
1) wget https://raw.githubusercontent.com/urbancompasspony/docker/main/11-lancache -O /tmp/lancache; echo $password sudo -S bash /tmp/lancache ;;
2) wget https://raw.githubusercontent.com/urbancompasspony/docker/main/12-oracle_xe -O /tmp/oracle; echo $password sudo -S bash /tmp/oracle ;;
3) wget https://raw.githubusercontent.com/urbancompasspony/docker/main/17-youtubedl -O /tmp/youtube; echo $password sudo -S bash /tmp/youtube ;;
4) wget https://raw.githubusercontent.com/urbancompasspony/docker/main/18-transmission -O /tmp/transmission; echo $password sudo -S bash /tmp/transmission ;;
5) wget https://raw.githubusercontent.com/urbancompasspony/docker/main/20.1-keepalived -O /tmp/keep1; echo $password sudo -S bash /tmp/keep1 ;;
6) wget https://raw.githubusercontent.com/urbancompasspony/docker/main/20.2-keepalived -O /tmp/keep2; echo $password sudo -S bash /tmp/keep2 ;;
7) wget https://raw.githubusercontent.com/urbancompasspony/docker/main/22-filebrowser -O /tmp/filebrowser; echo $password sudo -S bash /tmp/filebrowser ;;
X) start ;;
esac
}

function others {
var0=$(dialog --title 'Docker Manager' --backtitle "Sistema Automatizado de Orquestração de Containers" --menu " " 0 0 0 \
1 'UniFi' \
2 'CUPS' \
3 'HomeAssistant' \
X 'Voltar' 2>&1 > /dev/tty )

case "$var0" in
1) wget https://raw.githubusercontent.com/urbancompasspony/docker/main/03-unifi -O /tmp/unifi; echo $password sudo -S bash /tmp/unifi ;;
2) wget https://raw.githubusercontent.com/urbancompasspony/docker/main/10-cups -O /tmp/cups; echo $password sudo -S bash /tmp/cups ;;
3) wget https://raw.githubusercontent.com/urbancompasspony/docker/main/19-homeassistant -O /tmp/home; echo $password sudo -S bash /tmp/home ;;
X) start ;;
esac
}

function managers {
var0=$(dialog --title 'Docker Manager' --backtitle "Sistema Automatizado de Orquestração de Containers" --menu " " 0 0 0 \
1 'Yacht' \
2 'Kuma' \
3 'Rancher' \
4 'Portainer' \
5 'Pottava' \
X 'Voltar' 2>&1 > /dev/tty )

case "$var0" in
1) wget https://raw.githubusercontent.com/urbancompasspony/docker/main/14-yacht -O /tmp/yacht; echo $password sudo -S bash /tmp/yacht ;;
2) wget https://raw.githubusercontent.com/urbancompasspony/docker/main/15-kuma -O /tmp/kuma; echo $password sudo -S bash /tmp/kuma ;;
3) wget https://raw.githubusercontent.com/urbancompasspony/docker/main/21-rancher -O /tmp/rancher; echo $password sudo -S bash /tmp/rancher ;;
4) wget https://raw.githubusercontent.com/urbancompasspony/docker/main/22-portainer -O /tmp/portainer; echo $password sudo -S bash /tmp/portainer ;;
5) wget https://raw.githubusercontent.com/urbancompasspony/docker/main/23-pottava -O /tmp/pottava; echo $password sudo -S bash /tmp/pottava ;;
X) start ;;
esac
}

# Start
check
