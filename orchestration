#!/bin/bash

# NEXTCLOUD VERSION:
nv="25"

# For Ubuntu 22.04!
export NEEDRESTART_MODE=a
export DEBIAN_FRONTEND=noninteractive

export var1; export var2

mTITLE="Docker Orchestration"
bkTTITLE="Sistema Automatizado de Orquestração de Containers"

github="https://raw.githubusercontent.com/urbancompasspony/docker/main/"

function start {
var0=$(dialog --title "$mTITLE" --backtitle "$bkTTITLE" --menu " " 0 0 0 \
1 'Essentials' \
2 'Servers' \
3 'DataBases' \
4 'Others' \
5 'Pull Only!' \
6 'Tools' \
X 'Sair' 2>&1 > /dev/tty )

case "$var0" in
1) essentials ; start ;;
2) servers ; start ;;
3) database ; start ;;
4) others ; start ;;
5) pullall ; start ;;
6) tools ; start ;;
X) exit ;;
esac
}

function macvland {
  macvlanr=$(docker inspect macvlan 1>/dev/null 2>/dev/null && echo yes || echo no)
  [ "$macvlanr" = "no" ] && {
    clear
    echo "Macvlan não encontrado. Criando..."
    sleep 2

    var1="0"; var2="0"; var3="0"
    VALUE1="192.168.0.0"; VALUE2="192.168.0.1" ; VALUE3="enp2s0"

    VALUE0=$(dialog --help-button --help-label "Dica" --ok-label "Criar" --title "Criar novo MACVLAN" --form "MACVLAN for Containers" 10 40 0 \
"Subnet  :" 1 1 "$VALUE1" 1 11 30 0 \
"Gateway :" 2 1 "$VALUE2" 2 11 30 0 \
"Parent  :" 3 1 "$VALUE3" 3 11 30 0 \
3>&1 1>&2 2>&3 3>&- > /dev/tty)

    case $? in
      0) echo "." > /dev/null ;;
      1) exit ;;
      2) iphelp=$(ip -4 a); dialog --title 'Network, Parent, Gateway and Subnet!' --msgbox "$iphelp" 0 0 ;;
    esac

    var1=$(echo "$VALUE0" | sed -n 1p)
    var2=$(echo "$VALUE0" | sed -n 2p)
    var3=$(echo "$VALUE0" | sed -n 3p)

    [ "$var1" = "0" ] || [ "$var2" = "0" ] || [ "$var3" = "0" ] && {
      clear
      echo "Não deixe nenhum campo vazio!"
      macvland
    } || {
      docker network create -d macvlan --subnet="$var1"/24 --gateway="$var2" -o parent="$var3" macvlan
    }
  } || {
    echo "." > /dev/null
  }
}

function essentials {
var0=$(dialog --title "$mTITLE" --backtitle "$bkTTITLE" --menu " " 0 0 0 \
1 'PiHole (L/W)' \
2 'Dominio (W)' \
3 'NextCloud (W)' \
4 'WeTTY (L/W)' \
5 'Pentest (L/W)' \
6 'FTP Server (W)' \
7 'SMB Server (W)' \
X '<' 2>&1 > /dev/tty )

case "$var0" in
1) wget "$github"01-pihole -O /tmp/pihole; sudo bash /tmp/pihole ;;
2) wget "$github"02-domain -O /tmp/domain; sudo bash /tmp/domain ;;
3) wget "$github"26-nextcloud -O /tmp/nextcloud; sudo bash /tmp/nextcloud ;;
4) wget "$github"46-wetty -O /tmp/wetty; sudo bash /tmp/wetty ;;
5) wget "$github"09-pentest -O /tmp/pentest; sudo bash /tmp/pentest ;;
6) wget "$github"37-ftp-server -O /tmp/ftp-server; sudo bash /tmp/ftp-server ;;
7) wget "$github"06-samba -O /tmp/sambash; sudo bash /tmp/sambash ;;
X) start ;;
esac
}

function servers {
var0=$(dialog --title "$mTITLE" --backtitle "$bkTTITLE" --menu " " 0 0 0 \
1 'UniFi (W)' \
2 'OpenFire [+Spark] (W)' \
3 'ntfy (W)' \
4 'RustDesk (W)' \
5 'OnlyOffice Web (W)' \
6 'Apache2 Standalone (W)' \
7 'Apache2 Reverse Proxy (W)' \
8 'GLPI (W)' \
9 'Collabora Web (W)' \
X '<' 2>&1 > /dev/tty )

case "$var0" in
1) wget "$github"03-unifi -O /tmp/unifi; sudo bash /tmp/unifi ;;
2) wget "$github"27-openfire -O /tmp/openfire; sudo bash /tmp/openfire ;;
3) wget "$github"30-ntfy_server -O /tmp/ntfy_server; sudo bash /tmp/ntfy_server ;;
4) wget "$github"31-rustdesk -O /tmp/rustdesk; sudo bash /tmp/rustdesk ;;
5) wget "$github"34-onlyoffice -O /tmp/onlyoffice; sudo bash /tmp/onlyoffice ;;
6) wget "$github"36-generic_apache -O /tmp/genericapache; sudo bash /tmp/genericapache ;;
7) wget "$github"33-reverseproxy -O /tmp/apacherp; sudo bash /tmp/apacherp ;;
8) wget "$github"40-glpi -O /tmp/glpi; sudo bash /tmp/glpi ;;
9) wget "$github"25-collabora -O /tmp/collabora; sudo bash /tmp/collabora ;;
X) start ;;
esac
}

function database {
var0=$(dialog --title "$mTITLE" --backtitle "$bkTTITLE" --menu " " 0 0 0 \
1 'MySQL (W)' \
2 'MariaDB (W)' \
3 'OracleXE 21C (W)' \
X '<' 2>&1 > /dev/tty )

case "$var0" in
1) wget "$github"04-mysql -O /tmp/mysql; sudo bash /tmp/mysql ;;
2) wget "$github"29-mariadb -O /tmp/mariadb; sudo bash /tmp/mariadb ;;
3) wget "$github"05-oracle_xe -O /tmp/oracle_xe; sudo bash /tmp/oracle_xe ;;
X) start ;;
esac
}

function others {
var0=$(dialog --title "$mTITLE" --backtitle "$bkTTITLE" --menu " " 0 0 0 \
1 'OpenSpeedtest (W)' \
2 'SSH DW (L)' \
3 'Syncthing - Client (W)' \
4 'Syncthing Relay - Server (W)' \
5 'xpra virt-manager (L/W)' \
6 'No-IP (W)' \
7 'VDesktop Ubuntu 22.04 (L/W)' \
X '<' 2>&1 > /dev/tty )

case "$var0" in
1) wget "$github"16-openspeedtest -O /tmp/speedtest; sudo bash /tmp/speedtest ;;
2) wget "$github"38-ssh-dw -O /tmp/ssho; sudo bash /tmp/ssho ;;
3) wget "$github"42.0-syncthing -O /tmp/syncthing; sudo bash /tmp/syncthing ;;
4) wget "$github"42.1-syncrelay -O /tmp/syncrelay; sudo bash /tmp/syncrelay ;;
5) wget "$github"45-xpra-virt-manager -O /tmp/45-xpra-virt-manager; sudo bash /tmp/45-xpra-virt-manager ;;
6) wget "$github"41-noip -O /tmp/noip; sudo bash /tmp/noip ;;
7) wget "$github"44.0-xpra-ubuntu2204 -O /tmp/ubuntu2204; sudo bash /tmp/ubuntu2204 ;;
X) start ;;
esac
}

function tools {
var0=$(dialog --title "$mTITLE" --backtitle "$bkTTITLE" --menu " " 0 0 0 \
1 'AutoMigrate ADDC' \
2 'AutoExport SAMBA' \
3 'Backup ADDC' \
4 'Backup SAMBA' \
X '<' 2>&1 > /dev/tty )

case "$var0" in
1) wget "$github"07.1-AutoMigrateADDC.sh -O /tmp/migrateaddc; sudo bash /tmp/migrateaddc ;;
2) wget "$github"08.1-AutoExport_Samba.sh -O /tmp/migratesamba; sudo bash /tmp/migratesamba ;;
3) wget "$github"07.2-BackupADDC.sh -O /tmp/backupaddc; sudo bash /tmp/backupaddc ;;
4) wget "$github"08.2-Backup_SAMBA -O /tmp/backupsmb; sudo bash /tmp/backupsmb ;;
X) start ;;
esac
}

function pullall {
var0=$(dialog --title "$mTITLE" --backtitle "$bkTTITLE" --menu " " 0 0 0 \
1 'PiHole' \
2 'Dominio' \
3 'MySQL' \
4 'Nextcloud' \
5 'MariaDB' \
6 'Collabora' \
7 'SAMBA' \
8 'OpenSpeedTest' \
9 'UniFi' \
10 'Apache' \
11 'OpenFire' \
12 'ntfy' \
13 'RustDesk' \
14 'SSH DW' \
15 'ReverseProxy' \
16 'OracleXE 21C' \
17 'SSH DW' \
18 'G.L.P.I.' \
19 'NO-Ip' \
20 'Syncthing' \
21 'Syncthing Relay' \
22 'xpra Ubuntu 22.04 Gnome' \
23 'xpra virt-manager' \
X '<' 2>&1 > /dev/tty )

case "$var0" in
1) docker pull pihole/pihole:latest ;;
2) [ $(arch) = "x86_64" ] && { docker pull urbancompasspony/domain:latest; } || { docker pull urbancompasspony/domain-arm:latest; } ;;
3) docker pull mysql:8 ;;
4) docker pull nextcloud:"$nv" ;;
5) docker pull mariadb:latest ;;
6) docker pull collabora/code:latest ;;
7) [ $(arch) = "x86_64" ] && { docker pull urbancompasspony/migrate-samba:latest; } || { docker pull urbancompasspony/migrate-samba-arm:latest; } ;;
8) docker pull openspeedtest/latest:latest ;;
9) docker pull lscr.io/linuxserver/unifi-controller:latest ;;
10) docker pull httpd:2.4 ;;
11) docker pull urbancompasspony/openfire:latest ;;
12) docker pull binwiederhier/ntfy ;;
13) docker pull rustdesk/rustdesk-server ;;
14) docker pull urbancompasspony/ssh-dw:latest ;;
15) docker pull urbancompasspony/reverseproxy:latest ;;
16) docker pull urbancompasspony/centosoracle:latest ;;
17) docker pull urbancompasspony/ssh-dw:latest ;;
18) docker pull diouxx/glpi ;;
19) docker pull coppit/no-ip ;;
20) docker pull syncthing/syncthing:latest ;;
21) docker pull t4skforce/syncthing-relay:latest ;;
22) docker pull urbancompasspony/xpra-ubuntu:latest ;;
23) docker pull urbancompasspony/xpra-virt-manager:latest ;;
X) start ;;
esac
}

###############
# START HERE! #
###############

[ -f /srv/containers/scripts/myip ] && {
  macvland
  start
} || {
  IPMachine=$(hostname -I | awk '{print $1}')
  MyIPNF=$(dialog --title 'MyIP!' --backtitle "Sugestão: $IPMachine" --inputbox "MyIP não encontrado. \nQual o IP do Servidor?" 10 40 2>&1 > /dev/tty)
  sudo mkdir -p /srv/containers/scripts/config

  sudo touch /srv/containers/scripts/config/backupcont
  echo "source" > /srv/containers/scripts/config/backupcont
  echo "destiny" >> /srv/containers/scripts/config/backupcont
  echo "mountpoint" >> /srv/containers/scripts/config/backupcont
  echo "UUID" >> /srv/containers/scripts/config/backupcont

  wget "https://raw.githubusercontent.com/urbancompasspony/docker/main/Backup/01-Backup"
  cat 01-Backup | sudo tee /srv/containers/scripts/backupcont
  sudo rm -r 01-Backup

  sudo touch /srv/containers/scripts/myip
  echo "$MyIPNF" | sudo tee /srv/containers/scripts/myip

  macvland
  start
}
