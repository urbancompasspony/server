#!/bin/bash

# NEXTCLOUD VERSION:
nv="25"

# For Ubuntu 22.04!
export NEEDRESTART_MODE=a
export DEBIAN_FRONTEND=noninteractive

export var1; export var2

mTITLE="Docker Orchestration"
bkTTITLE="Sistema Automatizado de Orquestração de Containers"

github="https://raw.githubusercontent.com/urbancompasspony/docker/main/"

function start {
var0=$(dialog --title "$mTITLE" --backtitle "$bkTTITLE" --menu " " 0 0 0 \
1 'Essentials' \
2 'Servers' \
3 'DataBases' \
4 'Others' \
5 'Not Tested!' \
6 'Settings' \
X 'Sair' 2>&1 > /dev/tty )
case "$var0" in
1) essentials ; start ;;
2) servers ; start ;;
3) database ; start ;;
4) others ; start ;;
5) misc ; start ;;
6) clear ; curl -sSL https://raw.githubusercontent.com/urbancompasspony/server/main/docker-tools | bash ; start ;;
X) exit ;;
esac
}

function essentials {
var0=$(dialog --title "$mTITLE" --backtitle "$bkTTITLE" --menu " " 0 0 0 \
1 'PiHole (L/W)' \
2 'Dominio (W)' \
3 'Pentest (L/W)' \
4 'XPRA VMs (L/W)' \
5 'MySpeed: Tracker (W)' \
6 'Kuma Ping: Tracker (W)' \
7 'OpenSpeedTest (W)' \
8 'NextCloud (W)' \
9 'OnlyOffice (W)' \
10 'Apache2: ReverseProxy (W)' \
11 'Syncthing: Client (L/W)' \
X '<' 2>&1 > /dev/tty )
case "$var0" in
1) wget "$github"01-pihole -O /tmp/pihole; sudo bash /tmp/pihole ;;
2) wget "$github"02-domain -O /tmp/domain; sudo bash /tmp/domain ;;
3) wget "$github"09-pentest -O /tmp/pentest; sudo bash /tmp/pentest ;;
4) wget "$github"45-xpra-virt-manager -O /tmp/45-xpra-virt-manager; sudo bash /tmp/45-xpra-virt-manager ;;
5) wget "$github"20-myspeed-tracker -O /tmp/myspeed; sudo bash /tmp/myspeed ;;
6) wget "$github"15-kuma -O /tmp/kuma; sudo bash /tmp/kuma ;;
7) wget "$github"16-openspeedtest -O /tmp/speedtest; sudo bash /tmp/speedtest ;;
8) wget "$github"26-nextcloud -O /tmp/nextcloud; sudo bash /tmp/nextcloud ;;
9) wget "$github"34-onlyoffice -O /tmp/ooffice; sudo bash /tmp/ooffice ;;
10) wget "$github"33-reverseproxy -O /tmp/apacherp; sudo bash /tmp/apacherp ;;
11) wget "$github"42.0-syncthing -O /tmp/syncthing; sudo bash /tmp/syncthing ;;
X) echo "." > /dev/null ;;
esac
}

function servers {
var0=$(dialog --title "$mTITLE" --backtitle "$bkTTITLE" --menu " " 0 0 0 \
1 'UniFi (W)' \
2 'Spark Msg [OpenFire] (W)' \
3 'RustDesk (W)' \
4 'Apache2 Standalone (W)' \
5 'GLPI (W)' \
6 'ntfy (W)' \
7 'Portainer WebUI (L/W)' \
8 'Netboot PXE (W)' \
9 'WeTTY (L)' \
X '<' 2>&1 > /dev/tty )
case "$var0" in
1) wget "$github"03-unifi -O /tmp/unifi; sudo bash /tmp/unifi ;;
2) wget "$github"27-openfire -O /tmp/openfire; sudo bash /tmp/openfire ;;
3) wget "$github"31-rustdesk -O /tmp/rustdesk; sudo bash /tmp/rustdesk ;;
4) wget "$github"36-generic_apache -O /tmp/genericapache; sudo bash /tmp/genericapache ;;
5) wget "$github"40-glpi -O /tmp/glpi; sudo bash /tmp/glpi ;;
6) wget "$github"30-ntfy_server -O /tmp/ntfy_server; sudo bash /tmp/ntfy_server ;;
7) wget "$github"22-portainer-docker-ui -O /tmp/portainer; sudo bash /tmp/portainer ;;
8) wget "$github"23-netboot-xyz -O /tmp/netboot; sudo bash /tmp/netboot ;;
9) wget "$github"46-wetty -O /tmp/wetty; sudo bash /tmp/wetty ;;
X) echo "." > /dev/null ;;
esac
}

function others {
var0=$(dialog --title "$mTITLE" --backtitle "$bkTTITLE" --menu " " 0 0 0 \
1 'SSH DW: Backdoor (L)' \
2 'SMB Server Standalone (W)' \
3 'Windows VMs (L/W)' \
4 'FTP Server Standalone (W)' \
5 'CUPS Printer Standalone (W)' \
7 'Ollama: IA (L)' \
8 'Ollama: WebUI (L)' \
9 'StatPing-NG Tracker (W)' \
X '<' 2>&1 > /dev/tty )
case "$var0" in
1) wget "$github"38-ssh-dw -O /tmp/ssho; sudo bash /tmp/ssho ;;
2) wget "$github"06-samba -O /tmp/sambash; sudo bash /tmp/sambash ;;
3) wget "$github"17-windows -O /tmp/windows; sudo bash /tmp/windows ;;
4) wget "$github"37-ftp-server -O /tmp/ftp-server; sudo bash /tmp/ftp-server ;;
5) wget "$github"10-cups -O /tmp/cupsd; sudo bash /tmp/cupsd ;;
7) wget "$github"51-ollama-ia -O /tmp/ollamaia; sudo bash /tmp/ollamaia ;;
8) wget "$github"52-ollama-GUI -O /tmp/ollamaweb; sudo bash /tmp/ollamaweb ;;
9) wget "$github"50-statping-ng -O /tmp/statping; sudo bash /tmp/statping ;;
X) echo "." > /dev/null ;;
esac
}

function misc {
var0=$(dialog --title "$mTITLE" --backtitle "$bkTTITLE" --menu " " 0 0 0 \
1 'LAN Cache' \
2 'GitLab' \
3 'Pottava WebUI' \
4 'FileBrowser' \
5 'Tmate Server (L)' \
6 'Varnish' \
7 'macOS VM' \
8 'NO IP' \
9 'Registry' \
10 'XPRA (Ubuntu 2204)' \
11 'Zabbix' \
12 'TOR privoxy' \
X '<' 2>&1 > /dev/tty )
case "$var0" in
1) wget "$github"11-lancache -O /tmp/lancache; sudo bash /tmp/lancache ;;
2) wget "$github"12-gitlab -O /tmp/gitlab; sudo bash /tmp/gitlab ;;
3) wget "$github"21-pottava-docker-ui -O /tmp/pottava; sudo bash /tmp/pottava ;;
4) wget "$github"28-filebrowser -O /tmp/filebrowser; sudo bash /tmp/filebrowser ;;
5) wget "$github"18-tmate -O /tmp/tmate; sudo bash /tmp/tmate ;;
6) wget "$github"35-varnish -O /tmp/varnish; sudo bash /tmp/varnish ;;
7) wget "$github"39-macOS -O /tmp/macOS; sudo bash /tmp/macOS ;;
8) wget "$github"41-noip -O /tmp/noip; sudo bash /tmp/noip ;;
9) wget "$github"43-registry -O /tmp/registry; sudo bash /tmp/registry ;;
10) wget "$github"44.0-xpra-ubuntu2204 -O /tmp/ubuntu2204; sudo bash /tmp/ubuntu2204 ;;
11) wget "$github"47-zabbix -O /tmp/zabbix; sudo bash /tmp/zabbix ;;
12) wget "$github"53-tor-privoxy -O /tmp/privoxy; sudo bash /tmp/privoxy ;;
X) echo "." > /dev/null ;;
esac
}

function database {
var0=$(dialog --title "$mTITLE" --backtitle "$bkTTITLE" --menu " " 0 0 0 \
1 'MySQL (W)' \
2 'MariaDB (W)' \
3 'OracleXE 21C (W)' \
4 'Firebird (W)' \
5 'PHPMyAdmin (L)' \
X '<' 2>&1 > /dev/tty )
case "$var0" in
1) wget "$github"04-mysql -O /tmp/mysql; sudo bash /tmp/mysql ;;
2) wget "$github"29-mariadb -O /tmp/mariadb; sudo bash /tmp/mariadb ;;
3) wget "$github"05-oracle_xe -O /tmp/oracle_xe; sudo bash /tmp/oracle_xe ;;
4) wget "$github"49-firebird -O /tmp/firebird; sudo bash /tmp/firebird ;;
5) wget "$github"48-phpmyadmin -O /tmp/phpmyadmin; sudo bash /tmp/phpmyadmin ;;
X) echo "." > /dev/null ;;
esac
}

###############
# START HERE! #
###############

[ -f /srv/containers/scripts/myip ] && {
  macvland
  start
} || {
  IPMachine=$(hostname -I | awk '{print $1}')
  MyIPNF=$(dialog --title 'MyIP!' --backtitle "Sugestão: $IPMachine" --inputbox "MyIP não encontrado. \nQual o IP do Servidor?" 10 40 2>&1 > /dev/tty)
  sudo mkdir -p /srv/containers/scripts/config

  sudo touch /srv/containers/scripts/config/backupcont
  echo "source" > /srv/containers/scripts/config/backupcont
  echo "destiny" >> /srv/containers/scripts/config/backupcont
  echo "mountpoint" >> /srv/containers/scripts/config/backupcont
  echo "UUID" >> /srv/containers/scripts/config/backupcont

  wget "https://raw.githubusercontent.com/urbancompasspony/docker/main/Backup/01-Backup"
  cat 01-Backup | sudo tee /srv/containers/scripts/backupcont
  sudo rm -r 01-Backup

  wget "https://raw.githubusercontent.com/urbancompasspony/linux.cheat.sheet/main/rsnapshot.conf"
  cat rsnapshot.conf | sudo tee /srv/containers/scripts/rsnapshot
  sudo rm -r rsnapshot.conf

  sudo touch /srv/containers/scripts/myip
  echo "$MyIPNF" | sudo tee /srv/containers/scripts/myip

  macvland
  start
}
