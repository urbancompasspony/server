#!/bin/bash

function check {
  [ $(docker network ls | grep macvlan | awk '{print $2}') ] && { 
    lantest="sim" 
  } || {
    lantest="nao"
    }
 
  [ "$lantest" = "nao" ] && {
    dialog --title "MACVLAN" --yesno "Deseja criar a rede macvlan para container?" 6 40
    [ $? = 0 ] && {
    
      iplan=$(hostname -I | awk '{print $1}')
      
      [ $(ls /sys/class/net | grep enp) ] && {
        rede=$(ls /sys/class/net | grep enp)
        docker network create -d macvlan --subnet="$iplan"/24 --gateway="$iplan" -o parent="$rede" macvlan
      } || {
        [ $(ls /sys/class/net | grep eth) ] && {
          rede=$(ls /sys/class/net | grep eth)
          docker network create -d macvlan --subnet="$iplan"/24 --gateway="$iplan" -o parent="$rede" macvlan
        } || {
          echo "ATENÇÃO: Placa não identificada!"
          }
        }

    } || {
      echo "ATENÇÃO: Não há macvlan para os containers!"
      }
      
  } || {
    echo "Rede Container configurada."
    }
}

function start {
var0=$(dialog --title 'Docker Manager' --backtitle "Sistema Automatizado de Orquestração de Containers" --menu " " 0 0 0 \
A 'PiHole' \
B 'Dominio' \
C 'UniFi' \
D 'MySQL' \
E 'NextCloud' \
F 'Backup' \
G 'SAMBA' \
H 'CUPS' \
I 'Pentest' \
X 'Voltar' 2>&1 > /dev/tty )

case "$var0" in
A) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/01-pihole | bash ; start ;;
B) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/02-domain | bash ; start ;;
C) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/03-unifi | bash ; start ;;
D) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/04.1-mysql | bash ; start ;;
E) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/04.2-nextcloud | bash ; start ;;
F) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/05-backup | bash ; start ;;
G) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/06-samba | bash ; start ;;
H) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/10-cups | bash ; start ;;
I) curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/09-pentest | bash ; start ;;
X) echo "Saindo..." && curl -sSL https://raw.githubusercontent.com/urbancompasspony/server/main/docker | sudo bash && break ;;
esac
}

check
start
