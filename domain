#!/bin/bash

# For Ubuntu 22.04!
export NEEDRESTART_MODE=a
export DEBIAN_FRONTEND=noninteractive

# Variaveis Globais
export bktitle="Active Directory & Domain Controller"
export ttitle="Server Menu v3.0"

# Controlador de Dominio
function menu04 {
  var4=$(dialog --title "$ttitle" --backtitle "$bktitle" --menu " " 0 0 0 \
  A 'Gestao de Usuarios' \
  B 'Gestao de Grupos' \
  C 'Gestao de Computadores' \
  D 'Gestao de Pastas da Rede' \
  E 'Informacoes do Dominio' \
  F 'GPUpdate /Force' \
  G 'Manutencao' \
  X 'Sair' 2>&1 > /dev/tty )
  [ $? -ne 0 ] && exit
  case "$var4" in
  A) menu041 ;;
  B) menu042 ;;
  C) menu043 ;;
  D) validation ;;
  E) menuR ;;
  F) samba-gpupdate -U administrator --force --rsop ; read -p "Pressione Enter para continuar!" ; menu04 ;;
  G) manut ; menu04 ;;
  X) exit ;;
  esac
}

function manut {
  var4=$(dialog --title "$ttitle" --backtitle "$bktitle" --menu " " 0 0 0 \
  A 'dbcheck' \
  B 'dbcheck well-known-acls' \
  C 'GPO ACL Check' \
  D 'SysVol Check' \
  E 'SysVol Reset' \
  F 'Atualizar este Menu' \
  X 'Voltar' 2>&1 > /dev/tty )
  [ $? -ne 0 ] && exit
  case "$var4" in
  A) samba-tool dbcheck --cross-ncs --fix --yes ; read -p "Pressione Enter para continuar!" ; manut ;;
  B) samba-tool dbcheck --cross-ncs --reset-well-known-acls --fix --yes ; read -p "Pressione Enter para continuar!" ; manut ;;
  C) samba-tool gpo aclcheck -U Administrator ; read -p "Pressione Enter para continuar!" ; manut ;;
  D) samba-tool ntacl sysvolcheck -U administrator ; read -p "Pressione Enter para continuar!" ; manut ;;
  E) samba-tool ntacl sysvolreset -U Administrator ; read -p "Pressione Enter para continuar!" ; manut ;;
  F) wget https://raw.githubusercontent.com/urbancompasspony/server/main/domain -O /root/.init ; manut ;;
  X) menu04 ;;
  esac
}

function menu041 {
var41=$(dialog --title "$ttitle" --backtitle "$bktitle" --menu " " 0 0 0 \
A 'Criar Usuario' \
B 'Exibir todos os Usuarios' \
C 'Procurar Usuario' \
D 'Exibir Grupos de Usuario' \
E 'Adicionar Usuario a um Grupo' \
F 'Remover Usuario de um Grupo' \
G 'Bloquear Usuario' \
H 'Desbloquear Usuario' \
I 'Alterar Senha de um Usuario' \
J 'Alterar Politica de um Usuario' \
K 'Excluir Usuario' \
X 'Voltar' 2>&1 > /dev/tty )
[ $? -ne 0 ] && exit
case "$var41" in
A) menuD ;;
B) menuA ;;
C) menuP ;;
D) menuO ;;
E) menuJ ;;
F) menuL ;;
G) menuF ;;
H) menuG ;;
I) menuE ;;
J) menuN ;;
K) menuH ;;
X) menu04 ;;
esac
}

function menu042 {
var42=$(dialog --title "$ttitle" --backtitle "$bktitle" --menu " " 0 0 0 \
A 'Criar Grupo' \
B 'Exibir todos os Grupos' \
C 'Procurar Grupo' \
D 'Exibir Usuarios de um Grupo' \
E 'Excluir um Grupo' \
X 'Voltar' 2>&1 > /dev/tty )
[ $? -ne 0 ] && exit
case "$var42" in
A) menuI ;;
B) menuC ;;
C) menuQ ;;
D) menuK ;;
E) menuM ;;
X) menu04 ;;
esac
}

function menu043 {
var43=$(dialog --title "$ttitle" --backtitle "$bktitle" --menu " " 0 0 0 \
A 'Exibir todos os Computadores' \
X 'Voltar' 2>&1 > /dev/tty )
[ $? -ne 0 ] && exit
case "$var43" in
A) menuB ;;
X) menu04 ;;
esac
}

function menuA {
dialog --title "$ttitle" --backtitle "$bktitle" --msgbox "Pressione Enter para visualizar os Usuarios! Navegue com as setas para cima e para baixo. Para sair pressione 'q' !" 8 40
[ $? -ne 0 ] && menu041
usrlst=$(samba-tool user list)
echo "$usrlst" | less
menu041
}

function menuB {
dialog --title "$ttitle" --backtitle "$bktitle" --msgbox "Pressione Enter para visualizar os Computadores! Navegue com as setas para cima e para baixo. Para sair pressione 'q' !" 8 40
[ $? -ne 0 ] && menu043
cmplist=$(samba-tool computer list)
echo "$cmplist" | less
menu043
}

function menuC {
dialog --title "$ttitle" --backtitle "$bktitle" --msgbox "Pressione Enter para visualizar os Grupos! Navegue com as setas para cima e para baixo. Para sair pressione 'q' !" 8 40
[ $? -ne 0 ] && menu042
grplist=$(samba-tool group list)
echo "$grplist" | less
menu042
}

function menuD {
VALUE1="joao_naves"
VALUE2="Joao Naves"
VALUE3="1234567Ab"

VALUE0=$(dialog --ok-label "Criar"  --backtitle "$bktitle" --title "Adicionar Usuario" --form "Preencha todos os campos! Apague os modelos. \n
Navegue com as setas para cima e baixo." 15 50 0 \
"Usuario: " 1 1 "$VALUE1" 1 10 34 0 \
"Exibicao:" 2 1 "$VALUE2" 2 10 34 0 \
"Senha:" 3 1 "$VALUE3" 3 10 34 0 \
3>&1 1>&2 2>&3 3>&- > /dev/tty)
[ $? -ne 0 ] && menu041
validusr1=$(echo "$VALUE0" | sed -n 1p)
validsur1=$(echo "$VALUE0" | sed -n 2p)
validpss1=$(echo "$VALUE0" | sed -n 3p)
[ -z "$validpss1" ] || [ -z "$validusr1" ] || [ -z "$validsur1" ] && {
  dialog --title "ERRO" --msgbox "Nao deixe nenhum campo vazio!" 8 40
} || {
  repeated=$(samba-tool user list | grep -x "$validusr1")
  [ "$repeated" = "$validusr1" ] && {
    dialog --title "Informacao" --msgbox "O usuario $validusr1 ja existe!" 8 40
  } || {
    dialog --title 'Politica de Senha' --backtitle 'Configuracao de Senha' --yesno "$validusr1 deve trocar a senha ao logar? \n
Esta opcao sÃ³ pode ser definida agora. Se escolher Nao, devera usar o RSAT caso mude de ideia." 8 40
    [ $? = 0 ] && {
       samba-tool user create "$validusr1" "$validpss1" --surname="$validsur1" --must-change-at-next-login
      dialog --title 'Politica de Senha' --backtitle 'Configuracao de Senha' --yesno "A senha de $validusr nunca expira?" 0 0
      [ $? = 0 ] && {
         samba-tool user setexpiry "$validusr1" --noexpiry
        dialog --title "Informacao" --msgbox "A senha de $validusr1 nao expira!" 8 40
        dialog --title "Informacao" --msgbox "Usuario $validusr1 criado e configurado com sucesso!" 8 40
      } || {
        echo "a" > /dev/null
        }
    } || {
       samba-tool user create "$validusr1" "$validpss1" --surname="$validsur1"
      dialog --title 'Politica de Senha' --backtitle 'Configuracao de Senha' --yesno "A senha de $validusr nunca expira?" 0 0
      [ $? = 0 ] && {
         samba-tool user setexpiry "$validusr1" --noexpiry
        dialog --title "Informacao" --msgbox "A senha de $validusr1 nao expira!" 8 40
        dialog --title "Informacao" --msgbox "Usuario $validusr1 criado e configurado com sucesso!" 8 40
      } || {
        echo "a" > /dev/null
        }
    }
  }
}

menu041
}

function menuE {
validusr=$(dialog --title "$ttitle" --backtitle "$bktitle" --inputbox "Insira o nome de usuario" 0 0 2>&1 > /dev/tty)
[ -z "$validusr" ] && {
  dialog --title "ERROR" --msgbox "Usuario nao pode ficar em branco!" 7 25
} || {
  repeated=$(samba-tool user list | grep -x "$validusr")
  [ "$repeated" = "$validusr" ] && {
    validpss=$(dialog --title "$ttitle" --backtitle "Trocar a senha de usuario do Dominio em $HOSTNAME" --insecure --passwordbox 'Crie uma nova senha para o usuario' 0 0 2>&1 > /dev/tty )
    [ -z "$validpss" ] && {
      dialog --title "ERROR" --msgbox "Senha nao pode ficar em branco!" 7 25
    } || {
      samba-tool user setpassword "$validusr" --newpassword="$validpss"
      dialog --title "Informacao" --msgbox "Senha de $validusr trocada com sucesso!" 8 40
      }
  } || {
    dialog --title "ERROR" --msgbox "Usuario invalido!" 7 25
    }
}

menu041
}

function menuF {
validusr=$(dialog --title "$ttitle" --backtitle "$bktitle" --inputbox "Insira o nome de usuario" 0 0 2>&1 > /dev/tty)
[ -z "$validusr" ] && {
  dialog --title "ERRO" --msgbox "Usuario nao pode ficar em branco!" 8 40
} || {
  repeated=$(samba-tool user list | grep -x "$validusr")
  [ "$repeated" = "$validusr" ] && {
    samba-tool user disable "$validusr"
    dialog --title "Informacao" --msgbox "Usuario $validusr bloqueado com sucesso!" 7 25
  } || {
    dialog --title "ERROR" --msgbox "Usuario invalido!" 7 25
    }
}

menu041
}

function menuG {
validusr=$(dialog --title "$ttitle" --backtitle "$bktitle" --inputbox "Insira o nome de usuario" 0 0 2>&1 > /dev/tty)
[ -z "$validusr" ] && {
  dialog --title "ERRO" --msgbox "Usuario nao pode ficar em branco!" 8 40
} || {
  repeated=$(samba-tool user list | grep -x "$validusr")
  [ "$repeated" = "$validusr" ] && {
    samba-tool user enable "$validusr"
    dialog --title "Informacao" --msgbox "Usuario $validusr desbloqueado com sucesso!" 7 25
  } || {
    dialog --title "ERROR" --msgbox "Usuario invalido!" 7 25
    }
}

menu041
}

function menuH {
validusr=$(dialog --title "$ttitle" --backtitle "$bktitle" --inputbox "Insira o nome de usuario" 0 0 2>&1 > /dev/tty)
[ -z "$validusr" ] && {
  dialog --title "ERRO" --msgbox "Usuario nao pode ficar em branco!" 8 40
} || {
  repeated=$(samba-tool user list | grep -x "$validusr")
  [ "$repeated" = "$validusr" ] && {
    dialog --title 'Confirmacao' --backtitle 'Exclusao de Usuario' --yesno 'Deseja excluir este usuario?' 0 0
    [ $? = 0 ] && {
      samba-tool user delete "$validusr"
      dialog --title "Informacao" --msgbox "Usuario $validusr excluido com sucesso!" 7 25
    } || {
      echo "a" > /dev/null
      }
  } || {
    dialog --title "ERROR" --msgbox "Usuario invalido!" 7 25
  }
}

menu041
}

function menuI {
validgrp=$(dialog --title "$ttitle" --backtitle "$bktitle" --inputbox "Insira o nome do Grupo" 0 0 2>&1 > /dev/tty)
[ -z "$validgrp" ] && {
  dialog --title "ERRO" --msgbox "Grupo nao pode ficar em branco!" 8 40
} || {
  repeated=$(samba-tool group list | grep -x "$validgrp")
  [ "$repeated" = "$validgrp" ] && {
    dialog --title "Informacao" --msgbox "O grupo $validgrp ja existe!" 6 20
  } || {
    samba-tool group add "$validgrp"
    dialog --title "Informacao" --msgbox "Grupo $validgrp criado com sucesso!" 7 25
    }
}

menu042
}

function menuJ {
validusr=$(dialog --title "$ttitle" --backtitle "$bktitle" --inputbox "Insira o nome de Usuario" 0 0 2>&1 > /dev/tty)
[ -z "$validusr" ] && {
  dialog --title "ERRO" --msgbox "Usuario nao pode ficar em branco!" 8 40
} || {  
  validgrp=$(dialog --title "$ttitle" --backtitle "Adicionar Usuario a um Grupo em $HOSTNAME" --inputbox "Insira o nome do Grupo" 0 0 2>&1 > /dev/tty)
  [ -z "$validgrp" ] && {
    dialog --title "ERRO" --msgbox "Grupo nao pode ficar em branco!" 8 40
  } || {
    repeated=$(samba-tool user list | grep -x "$validusr")
    [ "$repeated" = "$validusr" ] && {
    repeated2=$(samba-tool group list | grep -x "$validgrp")
      [ "$repeated2" = "$validgrp" ] && {
        samba-tool group addmembers "$validgrp" "$validusr"
        dialog --title "Informacao" --msgbox "O usuario $validusr foi adicionado ao grupo $validgrp!" 8 40
      } || {
        dialog --title "ERROR" --msgbox "Grupo invalido!" 7 25
        }
    } || {
      dialog --title "ERROR" --msgbox "Usuario invalido!" 7 25
      }
  menu041
    }
  }
menu042
}

function menuK {
validgrp=$(dialog --title "$ttitle" --backtitle "$bktitle" --inputbox "Insira o nome do Grupo" 0 0 2>&1 > /dev/tty)
[ -z "$validgrp" ] && {
  dialog --title "ERRO" --msgbox "Grupo nao pode ficar em branco!" 8 40
} || {
  repeated=$(samba-tool group list | grep -x "$validgrp")
  [ "$repeated" = "$validgrp" ] && {
    dialog --title "$ttitle" --backtitle "Listagem de Membros" --msgbox "Pressione Enter para visualizar os Grupos! Navegue com as setas para cima e para baixo. Para sair pressione 'q' !" 0 0
    usrgrps=$(samba-tool group listmembers "$validgrp")
    echo "$usrgrps" | less
  } || {
    dialog --title "ERROR" --msgbox "Grupo invalido!" 7 25
  }
}

menu042
}

function menuL {
validusr=$(dialog --title "$ttitle" --backtitle "$bktitle" --inputbox "Insira o nome do Usuario" 0 0 2>&1 > /dev/tty)
[ -z "$validusr" ] && {
  dialog --title "ERRO" --msgbox "Usuario nao pode ficar em branco!" 8 40
} || {
  validgrp=$(dialog --title "$ttitle" --backtitle "Remover Usuario de um Grupo em $HOSTNAME" --inputbox "Insira o nome do Grupo" 0 0 2>&1 > /dev/tty)
  [ -z "$validgrp" ] && {
    dialog --title "ERRO" --msgbox "Grupo nao pode ficar em branco!" 8 40
  } || {
    repeated=$(samba-tool user list | grep -x "$validusr")
    [ "$repeated" = "$validusr" ] && {
      repeated2=$(samba-tool group list | grep -x "$validgrp")
      [ "$repeated2" = "$validgrp" ] && {
        samba-tool group removemembers "$validgrp" "$validusr"
        dialog --title "Informacao" --msgbox "O usuario $validusr foi removido do grupo $validgrp!" 8 40
      } || {
        dialog --title "ERROR" --msgbox "Grupo invalido!" 7 25
      }
    } || {
      dialog --title "ERROR" --msgbox "Usuario invalido!" 7 25
      }
  }
}

menu041
}

function menuM {
validgrp=$(dialog --title "$ttitle" --backtitle "$bktitle" --inputbox "Insira o nome do grupo" 0 0 2>&1 > /dev/tty)
[ -z "$validgrp" ] && {
  dialog --title "ERRO" --msgbox "Grupo nao pode ficar em branco!" 8 40
} || {
  repeated=$(samba-tool group list | grep -x "$validgrp")
  [ "$repeated" = "$validgrp" ] && {  
    dialog --title 'Confirmacao' --backtitle 'Exclusao de Grupo' --yesno "Deseja excluir o grupo $validgrp?" 0 0
    [ $? = 0 ] && {
      samba-tool group delete "$validgrp"
      dialog --title "Informacao" --msgbox "Grupo $validgrp excluido com sucesso!" 7 25
    } || {
      echo "a" > /dev/null
      }
  } || {
    dialog --title "ERROR" --msgbox "Grupo invalido!" 7 25
  }
}

menu042
}

function menuN {
validusr=$(dialog --title "$ttitle" --backtitle "$bktitle" --inputbox "Insira o nome de usuario" 0 0 2>&1 > /dev/tty)
[ -z "$validusr" ] && {
  dialog --title "ERRO" --msgbox "Usuario nao pode ficar em branco!" 8 40
} || {
  repeated=$(samba-tool user list | grep -x "$validusr")
  [ "$repeated" = "$validusr" ] && {
    dialog --title 'Politica de Senha' --backtitle 'Configuracao de Senha' --yesno "A senha de $validusr nao deve mais expirar?" 0 0
    [ $? = 0 ] && {
      samba-tool user setexpiry "$validusr" --noexpiry
      dialog --title "Informacao" --msgbox "A senha de $validusr nao expira!" 8 40
    } || {
      echo "a" > /dev/null
      }
  } || {
    dialog --title "ERROR" --msgbox "Usuario invalido!" 7 25
    }
}

menu041
}

function menuO {
validusr=$(dialog --title "$ttitle" --backtitle "$bktitle" --inputbox "Insira o nome de usuario" 0 0 2>&1 > /dev/tty)
[ -z "$validusr" ] && {
  dialog --title "ERRO" --msgbox "Usuario nao pode ficar em branco!" 8 40
} || {
  repeated=$(samba-tool user list | grep -x "$validusr")
  [ "$repeated" = "$validusr" ] && {
    dialog --title "$ttitle" --backtitle "Listagem de Grupos" --msgbox "Pressione Enter para visualizar os Grupos! Navegue com as setas para cima e para baixo. Para sair pressione 'q' !" 0 0
    grpsusr=$(samba-tool user getgroups "$validusr")
    echo "$grpsusr" | less
  } || {
    dialog --title "ERRO" --msgbox "Usuario invalido!" 8 40
    }
}

menu041
}

function menuP {
validusr1=$(dialog --title "$ttitle" --backtitle "$bktitle" --inputbox "Insira o nome de usuario. \n
Exemplo: joao_naves" 8 40 2>&1 > /dev/tty)
[ -z "$validusr1" ] && {
  dialog --title "ERRO" --msgbox "Usuario nao pode ficar em branco!" 8 40
} || {
  repeated2=$(samba-tool user list | grep -x "$validusr1")
  [ "$repeated2" = "$validusr1" ] && {
    dialog --title "Informacao" --msgbox "O usuario $validusr1 ja foi cadastrado!" 8 40
  } || {
    dialog --title "Informacao" --msgbox "O usuario $validusr1 nao foi encontrado." 8 40
    }
}

menu041
}

function menuQ {
validgrp1=$(dialog --title "$ttitle" --backtitle "$bktitle" --inputbox "Insira o nome de grupo" 0 0 2>&1 > /dev/tty)
[ $? -ne 0 ] && menu042

[ -z "$validgrp1" ] && {
  dialog --title "ERRO" --msgbox "Grupo nao pode ficar em branco!" 8 40
} || {
  repeated3=$(samba-tool group list | grep -x "$validgrp1")
  [ "$repeated3" = "$validgrp1" ] && {
    dialog --title "Informacao" --msgbox "O grupo $validgrp1 ja foi cadastrado!" 8 40
  } || {
    dialog --title "Informacao" --msgbox "O grupo $validgrp1 nao foi encontrado." 8 40
    }
}

menu042
}

function menuR {
smbv=$(samba --version)
domainv=$(samba-tool domain level show)
dialog --cr-wrap --title "Informaces encontradas" --backtitle "$bktitle" --msgbox "
Nome da Maquina: $HOSTNAME \n \n
Versao do SAMBA: $smbv \n \n
$domainv \n \n
" 0 0

menu04
}

# DOMAIN FOLDER MANAGER

function validation {
  result=$(grep -rnw /srv/containers/$NOMECONTAINER/etc/samba/smb.conf -e 'include' 2>/dev/null 1>/dev/null && echo sim || echo nao)
  [ $result = sim ] && {
    menu
  } || {
    clear
    dialog --title "ERRO" --msgbox "Sub-sistema INCLUDE nÃ£o encontrado para este Dominio! \n
O editor de pastas compartilhadas nÃ£o pÃ´de continuar. \n
Por favor, configure-o manualmente e tente novamente." 10 50
  }
}

function menu {
var0=$(dialog --title "DOMAIN Folder Control 1.0" --backtitle " " --menu " " 0 0 0 \
1 'Mostrar pastas configuradas' \
2 'Criar nova pasta compartilhada' \
3 'Deletar pasta compartilhada' \
4 'Revalidar Configuracoes' \
X '<' 2>&1 > /dev/tty )

case "$var0" in
1) list_all ; menu ;;
2) create ; menu ;;
3) delete ; menu ;;
4) revalidate ; menu ;;
X) exit ;;
esac
}

function list_all {
  [ -d "/etc/samba/smb.conf.d" ] && {
    listagem=$(ls -a /etc/samba/smb.conf.d/*)
    dialog --title "Lista de Configuracoes Existentes:" --msgbox "$listagem" 10 50
  } || {
    clear
    dialog --title "ERRO" --msgbox "Nenhum compartilhamento encontrado!" 7 30
  }
}

function create {
VALUE1="server"
VALUE2="custom_folder"
VALUE3="@supervisor"
VALUE4="yes"
VALUE5="yes"

  VALUE0=$(dialog --ok-label "Criar" --title "Compartilhamento" --form "Controlador de DomÃ­nio" 15 45 0 \
"ShrName :" 1 1 "$VALUE1" 1 10 34 0 \
"PathName:" 2 1 "$VALUE2" 2 10 34 0 \
"Grp Name:" 3 1 "$VALUE3" 3 10 34 0 \
"Writable:" 4 1 "$VALUE4" 4 10 34 0 \
"Browser :" 5 1 "$VALUE5" 5 10 34 0 \
3>&1 1>&2 2>&3 3>&- > /dev/tty)

  [ $? -ne 0 ] && exit

  var1=$(echo "$VALUE0" | sed -n 1p)
  var2=$(echo "$VALUE0" | sed -n 2p)
  var3=$(echo "$VALUE0" | sed -n 3p)
  var4=$(echo "$VALUE0" | sed -n 4p)
  var5=$(echo "$VALUE0" | sed -n 5p)

mkdir -p /mnt/$var2

tee /etc/samba/smb.conf.d/$var1.conf << EOF
[$var1]
path = $var2
valid users = $var3
admin users = $var3
writable = $var4
browsable = $var5
guest ok = no
create mask = 0777
force create mode = 0777
directory mask = 0777
force directory mode = 0777
EOF

ls /etc/samba/smb.conf.d/* | sed -e 's/^/include = /' > /etc/samba/includes.conf
dialog --title "Information" --msgbox "Para aplicar as mudancas saia deste container e revalide-o via Orchestration!" 7 45
}

function delete {
VALUE0=$(dialog --ok-label "Ok" --title "Compartilhamento" --form "Nome do Compartilhamento" 8 35 0 \
"ShrName:" 1 1 "$VALUE1" 1 11 30 0 \
3>&1 1>&2 2>&3 3>&- > /dev/tty)

    case $? in
      0) echo "." > /dev/null ;;
      1) exit ;;
    esac

    var1=$(echo "$VALUE0" | sed -n 1p)
    
    dialog --title 'Confirmacao' --backtitle 'Exclusao de Compartilhamento' --yesno 'Deseja excluir o compartilhamento?' 0 0
    [ $? = 0 ] && {
      rm /etc/samba/smb.conf.d/$var1.conf
      ls /etc/samba/smb.conf.d/* | sed -e 's/^/include = /' > /etc/samba/includes.conf
      dialog --title "Information" --msgbox "Para aplicar as mudancas saia deste container e revalide-o via Orchestration!" 7 45
    } || {
      echo "a" > /dev/null
      }
}

function revalidate {
  ls /etc/samba/smb.conf.d/* | sed -e 's/^/include = /' > /etc/samba/includes.conf
  dialog --title "Information" --msgbox "Para aplicar as mudancas saia deste container e revalide-o via Orchestration!" 7 45
}

# Start all!
menuR
