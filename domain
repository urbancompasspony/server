#!/bin/bash

# For Ubuntu 22.04!
export NEEDRESTART_MODE=a
export DEBIAN_FRONTEND=noninteractive

# Variaveis Globais
export bktitle="Active Directory and Domain Controller"
export ttitle="Server Menu v1.1"

# Controlador de Dominio
function menu04 {
  var4=$(dialog --title "$ttitle" --backtitle "$bktitle" --menu " " 0 0 0 \
  A 'Gestao de Usuarios' \
  B 'Gestao de Grupos' \
  C 'Gestao de Computadores' \
  D 'Informacoes do Dominio' \
  E 'Manutencao do Banco' \
  F 'Atualizar Menu' \
  X 'Sair' 2>&1 > /dev/tty )
  [ $? -ne 0 ] && exit
  case "$var4" in
  A) menu041 ;;
  B) menu042 ;;
  C) menu043 ;;
  D) menuR ;;
  E) samba-tool dbcheck --cross-ncs --fix ; menu04 ;;
  F) wget https://raw.githubusercontent.com/urbancompasspony/server/main/domain -O /root/.init ; menu04 ;;
  X) exit ;;
  esac
}

function menu041 {
var41=$(dialog --title "$ttitle" --backtitle "$bktitle" --menu " " 0 0 0 \
A 'Criar Usuario' \
B 'Exibir todos os Usuarios' \
C 'Procurar Usuario' \
D 'Exibir Grupos de Usuario' \
E 'Adicionar Usuario a um Grupo' \
F 'Remover Usuario de um Grupo' \
G 'Bloquear Usuario' \
H 'Desbloquear Usuario' \
I 'Alterar Senha de um Usuario' \
J 'Alterar Politica de um Usuario' \
K 'Excluir Usuario' \
X 'Voltar' 2>&1 > /dev/tty )
[ $? -ne 0 ] && exit
case "$var41" in
A) menuD ;;
B) menuA ;;
C) menuP ;;
D) menuO ;;
E) menuJ ;;
F) menuL ;;
G) menuF ;;
H) menuG ;;
I) menuE ;;
J) menuN ;;
K) menuH ;;
X) menu04 ;;
esac
}

function menu042 {
var42=$(dialog --title "$ttitle" --backtitle "$bktitle" --menu " " 0 0 0 \
A 'Criar Grupo' \
B 'Exibir todos os Grupos' \
C 'Procurar Grupo' \
D 'Exibir Usuarios de um Grupo' \
E 'Excluir um Grupo' \
X 'Voltar' 2>&1 > /dev/tty )
[ $? -ne 0 ] && exit
case "$var42" in
A) menuI ;;
B) menuC ;;
C) menuQ ;;
D) menuK ;;
E) menuM ;;
X) menu04 ;;
esac
}

function menu043 {
var43=$(dialog --title "$ttitle" --backtitle "$bktitle" --menu " " 0 0 0 \
A 'Exibir todos os Computadores' \
X 'Voltar' 2>&1 > /dev/tty )
[ $? -ne 0 ] && exit
case "$var43" in
A) menuB ;;
X) menu04 ;;
esac
}

function menuA {
dialog --title "$ttitle" --backtitle "$bktitle" --msgbox "Pressione Enter para visualizar os Usuarios! Navegue com as setas para cima e para baixo. Para sair pressione 'q' !" 8 40
[ $? -ne 0 ] && menu041
usrlst=$(samba-tool user list)
echo "$usrlst" | less
menu041
}

function menuB {
dialog --title "$ttitle" --backtitle "$bktitle" --msgbox "Pressione Enter para visualizar os Computadores! Navegue com as setas para cima e para baixo. Para sair pressione 'q' !" 8 40
[ $? -ne 0 ] && menu043
cmplist=$(samba-tool computer list)
echo "$cmplist" | less
menu043
}

function menuC {
dialog --title "$ttitle" --backtitle "$bktitle" --msgbox "Pressione Enter para visualizar os Grupos! Navegue com as setas para cima e para baixo. Para sair pressione 'q' !" 8 40
[ $? -ne 0 ] && menu042
grplist=$(samba-tool group list)
echo "$grplist" | less
menu042
}

function menuD {
VALUE1="joao_naves"
VALUE2="Joao Naves"
VALUE3="1234567Ab"

VALUE0=$(dialog --ok-label "Criar"  --backtitle "$bktitle" --title "Adicionar Usuario" --form "Preencha todos os campos! Apague os modelos. \n
Navegue com as setas para cima e baixo." 15 50 0 \
"Usuario: " 1 1 "$VALUE1" 1 10 34 0 \
"Exibicao:" 2 1 "$VALUE2" 2 10 34 0 \
"Senha:" 3 1 "$VALUE3" 3 10 34 0 \
3>&1 1>&2 2>&3 3>&- > /dev/tty)
[ $? -ne 0 ] && menu041
validusr1=$(echo "$VALUE0" | sed -n 1p)
validsur1=$(echo "$VALUE0" | sed -n 2p)
validpss1=$(echo "$VALUE0" | sed -n 3p)
[ -z "$validpss1" ] || [ -z "$validusr1" ] || [ -z "$validsur1" ] && {
  dialog --title "ERRO" --msgbox "Nao deixe nenhum campo vazio!" 8 40
} || {
  repeated=$(samba-tool user list | grep -x "$validusr1")
  [ "$repeated" = "$validusr1" ] && {
    dialog --title "Informacao" --msgbox "O usuario $validusr1 ja existe!" 8 40
  } || {
    dialog --title 'Politica de Senha' --backtitle 'Configuracao de Senha' --yesno "$validusr1 deve trocar a senha ao logar? \n
Esta opcao sÃ³ pode ser definida agora. Se escolher Nao, devera usar o RSAT caso mude de ideia." 8 40
    [ $? = 0 ] && {
       samba-tool user create "$validusr1" "$validpss1" --surname="$validsur1" --must-change-at-next-login
      dialog --title 'Politica de Senha' --backtitle 'Configuracao de Senha' --yesno "A senha de $validusr nunca expira?" 0 0
      [ $? = 0 ] && {
         samba-tool user setexpiry "$validusr1" --noexpiry
        dialog --title "Informacao" --msgbox "A senha de $validusr1 nao expira!" 8 40
        dialog --title "Informacao" --msgbox "Usuario $validusr1 criado e configurado com sucesso!" 8 40
      } || {
        echo "a" > /dev/null
        }
    } || {
       samba-tool user create "$validusr1" "$validpss1" --surname="$validsur1"
      dialog --title 'Politica de Senha' --backtitle 'Configuracao de Senha' --yesno "A senha de $validusr nunca expira?" 0 0
      [ $? = 0 ] && {
         samba-tool user setexpiry "$validusr1" --noexpiry
        dialog --title "Informacao" --msgbox "A senha de $validusr1 nao expira!" 8 40
        dialog --title "Informacao" --msgbox "Usuario $validusr1 criado e configurado com sucesso!" 8 40
      } || {
        echo "a" > /dev/null
        }
    }
  }
}

menu041
}

function menuE {
validusr=$(dialog --title "$ttitle" --backtitle "$bktitle" --inputbox "Insira o nome de usuario" 0 0 2>&1 > /dev/tty)
[ -z "$validusr" ] && {
  dialog --title "ERROR" --msgbox "Usuario nao pode ficar em branco!" 7 25
} || {
  repeated=$(samba-tool user list | grep -x "$validusr")
  [ "$repeated" = "$validusr" ] && {
    validpss=$(dialog --title "$ttitle" --backtitle "Trocar a senha de usuario do Dominio em $HOSTNAME" --insecure --passwordbox 'Crie uma nova senha para o usuario' 0 0 2>&1 > /dev/tty )
    [ -z "$validpss" ] && {
      dialog --title "ERROR" --msgbox "Senha nao pode ficar em branco!" 7 25
    } || {
      samba-tool user setpassword "$validusr" --newpassword="$validpss"
      dialog --title "Informacao" --msgbox "Senha de $validusr trocada com sucesso!" 8 40
      }
  } || {
    dialog --title "ERROR" --msgbox "Usuario invalido!" 7 25
    }
}

menu041
}

function menuF {
validusr=$(dialog --title "$ttitle" --backtitle "$bktitle" --inputbox "Insira o nome de usuario" 0 0 2>&1 > /dev/tty)
[ -z "$validusr" ] && {
  dialog --title "ERRO" --msgbox "Usuario nao pode ficar em branco!" 8 40
} || {
  repeated=$(samba-tool user list | grep -x "$validusr")
  [ "$repeated" = "$validusr" ] && {
    samba-tool user disable "$validusr"
    dialog --title "Informacao" --msgbox "Usuario $validusr bloqueado com sucesso!" 7 25
  } || {
    dialog --title "ERROR" --msgbox "Usuario invalido!" 7 25
    }
}

menu041
}

function menuG {
validusr=$(dialog --title "$ttitle" --backtitle "$bktitle" --inputbox "Insira o nome de usuario" 0 0 2>&1 > /dev/tty)
[ -z "$validusr" ] && {
  dialog --title "ERRO" --msgbox "Usuario nao pode ficar em branco!" 8 40
} || {
  repeated=$(samba-tool user list | grep -x "$validusr")
  [ "$repeated" = "$validusr" ] && {
    samba-tool user enable "$validusr"
    dialog --title "Informacao" --msgbox "Usuario $validusr desbloqueado com sucesso!" 7 25
  } || {
    dialog --title "ERROR" --msgbox "Usuario invalido!" 7 25
    }
}

menu041
}

function menuH {
validusr=$(dialog --title "$ttitle" --backtitle "$bktitle" --inputbox "Insira o nome de usuario" 0 0 2>&1 > /dev/tty)
[ -z "$validusr" ] && {
  dialog --title "ERRO" --msgbox "Usuario nao pode ficar em branco!" 8 40
} || {
  repeated=$(samba-tool user list | grep -x "$validusr")
  [ "$repeated" = "$validusr" ] && {
    dialog --title 'Confirmacao' --backtitle 'Exclusao de Usuario' --yesno 'Deseja excluir este usuario?' 0 0
    [ $? = 0 ] && {
      samba-tool user delete "$validusr"
      dialog --title "Informacao" --msgbox "Usuario $validusr excluido com sucesso!" 7 25
    } || {
      echo "a" > /dev/null
      }
  } || {
    dialog --title "ERROR" --msgbox "Usuario invalido!" 7 25
  }
}

menu041
}

function menuI {
validgrp=$(dialog --title "$ttitle" --backtitle "$bktitle" --inputbox "Insira o nome do Grupo" 0 0 2>&1 > /dev/tty)
[ -z "$validgrp" ] && {
  dialog --title "ERRO" --msgbox "Grupo nao pode ficar em branco!" 8 40
} || {
  repeated=$(samba-tool group list | grep -x "$validgrp")
  [ "$repeated" = "$validgrp" ] && {
    dialog --title "Informacao" --msgbox "O grupo $validgrp ja existe!" 6 20
  } || {
    samba-tool group add "$validgrp"
    dialog --title "Informacao" --msgbox "Grupo $validgrp criado com sucesso!" 7 25
    }
}

menu042
}

function menuJ {
validusr=$(dialog --title "$ttitle" --backtitle "$bktitle" --inputbox "Insira o nome de Usuario" 0 0 2>&1 > /dev/tty)
[ -z "$validusr" ] && {
  dialog --title "ERRO" --msgbox "Usuario nao pode ficar em branco!" 8 40
} || {  
  validgrp=$(dialog --title "$ttitle" --backtitle "Adicionar Usuario a um Grupo em $HOSTNAME" --inputbox "Insira o nome do Grupo" 0 0 2>&1 > /dev/tty)
  [ -z "$validgrp" ] && {
    dialog --title "ERRO" --msgbox "Grupo nao pode ficar em branco!" 8 40
  } || {
    repeated=$(samba-tool user list | grep -x "$validusr")
    [ "$repeated" = "$validusr" ] && {
    repeated2=$(samba-tool group list | grep -x "$validgrp")
      [ "$repeated2" = "$validgrp" ] && {
        samba-tool group addmembers "$validgrp" "$validusr"
        dialog --title "Informacao" --msgbox "O usuario $validusr foi adicionado ao grupo $validgrp!" 8 40
      } || {
        dialog --title "ERROR" --msgbox "Grupo invalido!" 7 25
        }
    } || {
      dialog --title "ERROR" --msgbox "Usuario invalido!" 7 25
      }
  menu041
    }
  }
menu042
}

function menuK {
validgrp=$(dialog --title "$ttitle" --backtitle "$bktitle" --inputbox "Insira o nome do Grupo" 0 0 2>&1 > /dev/tty)
[ -z "$validgrp" ] && {
  dialog --title "ERRO" --msgbox "Grupo nao pode ficar em branco!" 8 40
} || {
  repeated=$(samba-tool group list | grep -x "$validgrp")
  [ "$repeated" = "$validgrp" ] && {
    dialog --title "$ttitle" --backtitle "Listagem de Membros" --msgbox "Pressione Enter para visualizar os Grupos! Navegue com as setas para cima e para baixo. Para sair pressione 'q' !" 0 0
    usrgrps=$(samba-tool group listmembers "$validgrp")
    echo "$usrgrps" | less
  } || {
    dialog --title "ERROR" --msgbox "Grupo invalido!" 7 25
  }
}

menu042
}

function menuL {
validusr=$(dialog --title "$ttitle" --backtitle "$bktitle" --inputbox "Insira o nome do Usuario" 0 0 2>&1 > /dev/tty)
[ -z "$validusr" ] && {
  dialog --title "ERRO" --msgbox "Usuario nao pode ficar em branco!" 8 40
} || {
  validgrp=$(dialog --title "$ttitle" --backtitle "Remover Usuario de um Grupo em $HOSTNAME" --inputbox "Insira o nome do Grupo" 0 0 2>&1 > /dev/tty)
  [ -z "$validgrp" ] && {
    dialog --title "ERRO" --msgbox "Grupo nao pode ficar em branco!" 8 40
  } || {
    repeated=$(samba-tool user list | grep -x "$validusr")
    [ "$repeated" = "$validusr" ] && {
      repeated2=$(samba-tool group list | grep -x "$validgrp")
      [ "$repeated2" = "$validgrp" ] && {
        samba-tool group removemembers "$validgrp" "$validusr"
        dialog --title "Informacao" --msgbox "O usuario $validusr foi removido do grupo $validgrp!" 8 40
      } || {
        dialog --title "ERROR" --msgbox "Grupo invalido!" 7 25
      }
    } || {
      dialog --title "ERROR" --msgbox "Usuario invalido!" 7 25
      }
  }
}

menu041
}

function menuM {
validgrp=$(dialog --title "$ttitle" --backtitle "$bktitle" --inputbox "Insira o nome do grupo" 0 0 2>&1 > /dev/tty)
[ -z "$validgrp" ] && {
  dialog --title "ERRO" --msgbox "Grupo nao pode ficar em branco!" 8 40
} || {
  repeated=$(samba-tool group list | grep -x "$validgrp")
  [ "$repeated" = "$validgrp" ] && {  
    dialog --title 'Confirmacao' --backtitle 'Exclusao de Grupo' --yesno "Deseja excluir o grupo $validgrp?" 0 0
    [ $? = 0 ] && {
      samba-tool group delete "$validgrp"
      dialog --title "Informacao" --msgbox "Grupo $validgrp excluido com sucesso!" 7 25
    } || {
      echo "a" > /dev/null
      }
  } || {
    dialog --title "ERROR" --msgbox "Grupo invalido!" 7 25
  }
}

menu042
}

function menuN {
validusr=$(dialog --title "$ttitle" --backtitle "$bktitle" --inputbox "Insira o nome de usuario" 0 0 2>&1 > /dev/tty)
[ -z "$validusr" ] && {
  dialog --title "ERRO" --msgbox "Usuario nao pode ficar em branco!" 8 40
} || {
  repeated=$(samba-tool user list | grep -x "$validusr")
  [ "$repeated" = "$validusr" ] && {
    dialog --title 'Politica de Senha' --backtitle 'Configuracao de Senha' --yesno "A senha de $validusr nao deve mais expirar?" 0 0
    [ $? = 0 ] && {
      samba-tool user setexpiry "$validusr" --noexpiry
      dialog --title "Informacao" --msgbox "A senha de $validusr nao expira!" 8 40
    } || {
      echo "a" > /dev/null
      }
  } || {
    dialog --title "ERROR" --msgbox "Usuario invalido!" 7 25
    }
}

menu041
}

function menuO {
validusr=$(dialog --title "$ttitle" --backtitle "$bktitle" --inputbox "Insira o nome de usuario" 0 0 2>&1 > /dev/tty)
[ -z "$validusr" ] && {
  dialog --title "ERRO" --msgbox "Usuario nao pode ficar em branco!" 8 40
} || {
  repeated=$(samba-tool user list | grep -x "$validusr")
  [ "$repeated" = "$validusr" ] && {
    dialog --title "$ttitle" --backtitle "Listagem de Grupos" --msgbox "Pressione Enter para visualizar os Grupos! Navegue com as setas para cima e para baixo. Para sair pressione 'q' !" 0 0
    grpsusr=$(samba-tool user getgroups "$validusr")
    echo "$grpsusr" | less
  } || {
    dialog --title "ERRO" --msgbox "Usuario invalido!" 8 40
    }
}

menu041
}

function menuP {
validusr1=$(dialog --title "$ttitle" --backtitle "$bktitle" --inputbox "Insira o nome de usuario. \n
Exemplo: joao_naves" 8 40 2>&1 > /dev/tty)
[ -z "$validusr1" ] && {
  dialog --title "ERRO" --msgbox "Usuario nao pode ficar em branco!" 8 40
} || {
  repeated2=$(samba-tool user list | grep -x "$validusr1")
  [ "$repeated2" = "$validusr1" ] && {
    dialog --title "Informacao" --msgbox "O usuario $validusr1 ja foi cadastrado!" 8 40
  } || {
    dialog --title "Informacao" --msgbox "O usuario $validusr1 nao foi encontrado." 8 40
    }
}

menu041
}

function menuQ {
validgrp1=$(dialog --title "$ttitle" --backtitle "$bktitle" --inputbox "Insira o nome de grupo" 0 0 2>&1 > /dev/tty)
[ $? -ne 0 ] && menu042

[ -z "$validgrp1" ] && {
  dialog --title "ERRO" --msgbox "Grupo nao pode ficar em branco!" 8 40
} || {
  repeated3=$(samba-tool group list | grep -x "$validgrp1")
  [ "$repeated3" = "$validgrp1" ] && {
    dialog --title "Informacao" --msgbox "O grupo $validgrp1 ja foi cadastrado!" 8 40
  } || {
    dialog --title "Informacao" --msgbox "O grupo $validgrp1 nao foi encontrado." 8 40
    }
}

menu042
}

function menuR {
smbv=$(samba --version)
domainv=$(samba-tool domain level show)
dialog --cr-wrap --title "Informaces encontradas" --backtitle "$bktitle" --msgbox "
Nome da Maquina: $HOSTNAME \n \n
Versao do SAMBA: $smbv \n \n
$domainv \n \n
" 0 0

menu04
}

# Start all!
menuR
