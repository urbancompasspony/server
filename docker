#!/bin/bash



function check {
  [ $(which docker 2>/dev/null) ] && {  
    menu022 "1p" && nomeA=$cont0 && contA=$sts && IPLocalA=$IPLocal
    menu022 "2p" && nomeB=$cont0 && contB=$sts && IPLocalB=$IPLocal
    menu022 "3p" && nomeC=$cont0 && contC=$sts && IPLocalC=$IPLocal
    menu022 "4p" && nomeD=$cont0 && contD=$sts && IPLocalD=$IPLocal
    menu022 "5p" && nomeE=$cont0 && contE=$sts && IPLocalE=$IPLocal
    menu022 "6p" && nomeF=$cont0 && contF=$sts && IPLocalF=$IPLocal
    menu022 "7p" && nomeG=$cont0 && contG=$sts && IPLocalG=$IPLocal
    menu022 "8p" && nomeH=$cont0 && contH=$sts && IPLocalH=$IPLocal
    menu022 "9p" && nomeI=$cont0 && contI=$sts && IPLocalI=$IPLocal
    menu022 "10p" && nomeJ=$cont0 && contJ=$sts && IPLocalJ=$IPLocal
    menu022 "11p" && nomeK=$cont0 && contK=$sts && IPLocalK=$IPLocal
    menu022 "12p" && nomeL=$cont0 && contL=$sts && IPLocalL=$IPLocal
    menu022 "13p" && nomeM=$cont0 && contM=$sts && IPLocalM=$IPLocal
    menu022 "14p" && nomeN=$cont0 && contN=$sts && IPLocalN=$IPLocal
    menu022 "15p" && nomeO=$cont0 && contO=$sts && IPLocalO=$IPLocal
  } || {
    dialog --cr-wrap --title 'ERRO DETECTADO' --backtitle "$bktitle" --msgbox "O Docker não foi encontrado neste sistema ou você não possui as permissões de acesso!" 7 50
  }
}

function menu01 {
  menuxy=$(dialog --ok-label 'Ajustar' --backtitle "Bem-Vindo ao Gestor de Containers!" --title "Gestão de VMs" --menu "Gestão de Containers"  0 0 0 \
"$nomeA" "$IPLocalA" \
"$nomeB" "$IPLocalB" \
"$nomeC" "$IPLocalC" \
"$nomeD" "$IPLocalD" \
"$nomeE" "$IPLocalE" \
"$nomeF" "$IPLocalF" \
"$nomeG" "$IPLocalG" \
"$nomeH" "$IPLocalH" \
"$nomeI" "$IPLocalI" \
"$nomeJ" "$IPLocalJ" \
"$nomeK" "$IPLocalK" \
"$nomeL" "$IPLocalL" \
"$nomeM" "$IPLocalM" \
"$nomeN" "$IPLocalN" \
"$nomeO" "$IPLocalO" \
"X Voltar" "" 2>&1 > /dev/tty )

  [ $? -ne 0 ] && exit
  
  case "$menuxy" in
  "$nomeA") chkcnt="$contA"; nmcnt="$nomeA"; menu02 ;;
  "$nomeB") chkcnt="$contB"; nmcnt="$nomeB"; menu02 ;;
  "$nomeC") chkcnt="$contC"; nmcnt="$nomeC"; menu02 ;;
  "$nomeD") chkcnt="$contD"; nmcnt="$nomeD"; menu02 ;;
  "$nomeE") chkcnt="$contE"; nmcnt="$nomeE"; menu02 ;;
  "$nomeF") chkcnt="$contF"; nmcnt="$nomeF"; menu02 ;;
  "$nomeG") chkcnt="$contG"; nmcnt="$nomeG"; menu02 ;;
  "$nomeH") chkcnt="$contH"; nmcnt="$nomeH"; menu02 ;;
  "$nomeI") chkcnt="$contI"; nmcnt="$nomeI"; menu02 ;;
  "$nomeJ") chkcnt="$contJ"; nmcnt="$nomeJ"; menu02 ;;
  "$nomeK") chkcnt="$contK"; nmcnt="$nomeK"; menu02 ;;
  "$nomeL") chkcnt="$contL"; nmcnt="$nomeL"; menu02 ;;
  "$nomeM") chkcnt="$contM"; nmcnt="$nomeM"; menu02 ;;
  "$nomeN") chkcnt="$contN"; nmcnt="$nomeN"; menu02 ;;
  "$nomeO") chkcnt="$contO"; nmcnt="$nomeO"; menu02 ;;
  "X Voltar") exit ;;
  esac
}

function menu02 {
[ "$chkcnt" = "Executando" ] && {
  dialog --title "$nmcnt" --yesno "Deseja reiniciar o container $nmcnt?" 6 40
  [ $? = 0 ] && {
    docker restart "$nmcnt"
    dialog --title "$nmcnt" --msgbox "O container $nmcnt foi reiniciado!" 6 40
  } || {
    dialog --title "$nmcnt" --yesno "Deseja desligar o container $nmcnt?" 6 40
    [ $? = 0 ] && {
      docker stop "$nmcnt"
      dialog --title "$nmcnt" --msgbox "O container $nmcnt foi desligado!" 6 40
    } || {
      dialog --title "$nmcnt" --yesno "Deseja desligar FORÇADAMENTE o container $nmcnt?" 6 40
      [ $? = 0 ] && {
        docker kill "$nmcnt"
        dialog --title "$nmcnt" --msgbox "O container $nmcnt foi desligado de forma forçada!" 6 40
      } || {
        echo "a" > /dev/null
        }
    }
  }
} || {
  [ "$chkcnt" = "- - -" ] && {
    dialog --title "$nmcnt" --msgbox "O container $nmcnt não existe!" 6 40
  } || {
    [ "$chkcnt" = "Parado" ] && {
      dialog --title "$nmcnt" --yesno "Deseja tentar ligar o container $nmcnt?" 6 40
      [ $? = 0 ] && {
        docker start "$nmcnt"
        dialog --title "$nmcnt" --msgbox "Verifique se o container $nmcnt iniciou!" 6 40
      } || {
        echo "a" > /dev/null
        }
    }
  }
}

menu01
}

function menu022 {

  # Default
  cont0="None"
  sts="- - -"
  IPLocal="- - -"

  testcont=$(docker ps -aq --no-trunc | sed -n "$1")
  
  [ "$testcont" = "" ] || {
    cont0=$(docker inspect --format='{{.Name}}' "$testcont" | cut -c2-)
    [ "$cont0" = "" ] && {
    echo "0" > /dev/null
    } || {
    cont1=$(docker inspect $cont0 | grep running | awk {'print $2'} | cut -c 2,3,4,5,6,7,8)
    cont2=$(docker inspect $cont0 | grep exited | awk {'print $2'} | cut -c 2,3,4,5,6,7)
      [ "$cont1" = "running" ] && {
        menu03 "$cont0"
        sts="Executando"
      } || {
        [ "$cont2" = "exited" ] && {
          IPLocal="- - -"
          sts="Parado"
        } || {
          echo "0" > /dev/null
        }
      }
    }    
  }  
}

function menu03 {
  IPLocal=$(docker inspect $1 | grep '"IPAddress"' | tail -n 1 | awk '{print $2}')
}

check
menu01

exit 1
