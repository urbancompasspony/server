#!/bin/bash

# # # # # # #  #
# SRV MGR Menu #
# # # # # # #  # 

# For Ubuntu!
export pty=True
export NEEDRESTART_MODE=a
export DEBIAN_FRONTEND=noninteractive

# Hash
hash1="68b329da9893e34099c7d8ad5cb9c940"
hash2="c357311ed3a47a08b423e1b42ec5c130"

# Versão:
version="v3.5"

# ------------------------------------------------------------------------------

# PASSWORD
function init {
password=$(dialog --backtitle "Server Manager $version" --title " " --insecure --passwordbox "Digite a senha!" 0 0 2>&1 > /dev/tty)
hash0=$(echo "$password" | md5sum | awk '{print $1}')
  [ $? -ne 0 ] && exit
  [ -z "$password" ] && {
      dialog --title "ERROR" --msgbox "É necessário digitar uma senha para continuar." 6 40
      clear
  } || {
    [ "$hash0" = "$hash1" ] && {
      start
    } || {
      [ "$hash0" = "$hash2" ] && {
        startocult
      } || {
        clear
        dialog --title "ERROR" --msgbox "Senha incorreta. \nTente novamente!" 6 30
        timeout=$((timeout+1)); sleep $timeout
        init
      }
    }
  }
}

hash1="fe5dfdd991450623c39efc7705e47ad5"

function start {
var0=$(dialog --title "Escolha um sub menu" --backtitle "Bem-Vindo ao Server Manager $version!" --menu " " 0 0 0 \
A 'Orchestra' \
B 'Managers' \
C 'Manut. & Relat.' \
D 'Settings' \
E 'Atualizar Bashrc' \
X 'Sair' 2>&1 > /dev/tty )
case "$var0" in
A) clear ; echo "Por favor, insira a senha do usuário $USER!" ; curl -sSL https://raw.githubusercontent.com/urbancompasspony/server/main/orchestration | sudo bash ; start ;;
B) managers ; start ;;
C) clear ; echo "Por favor, insira a senha do usuário $USER!" ; curl -sSL https://raw.githubusercontent.com/urbancompasspony/server/main/auto_relatorio | sudo bash ; start ;;
D) clear ; echo "Por favor, insira a senha do usuário $USER!" ; curl -sSL https://raw.githubusercontent.com/urbancompasspony/server/main/tools | sudo bash ; start ;;
E) curl -sSL https://raw.githubusercontent.com/urbancompasspony/bashrc/main/install.sh | bash ; start ;;
X) exit ;;
esac
}

function startocult {
  managers ; startocult
}

function managers {
var0=$(dialog --title ' ' --backtitle "Managers" --menu " " 0 0 0 \
A 'VM Manager (TUI)' \
B 'Docker Manager (TUI)' \
C 'Active Directory' \
D 'Start Desktop' \
X 'Sair' 2>&1 > /dev/tty )
case "$var0" in
A) curl -sSL https://raw.githubusercontent.com/urbancompasspony/server/main/vm_machine | bash ; managers ;;
B) curl -sSL https://raw.githubusercontent.com/urbancompasspony/server/main/docker | bash ; managers ;;
C) clear ; docker exec -it domain /root/.init ; exit ;;
D) clear ; dialog --title "Informação" --msgbox "Digite startx para entrar no modo Desktop!" 7 50 ; exit ;;
X) exit ;;
esac
}

hash1="e4439267203fb5277d347e6cd6e440b5"

function reb00t {
  dialog --title 'Reiniciar' --backtitle "Reinício" --yesno 'Deseja reiniciar este sistema?' 0 0
  [ $? = 0 ] && {
    sudo reboot
  } || {
    echo "." >/dev/null
  }
}

hash1="7c6126d9cc35fccb0c8a3a42147ea85f"

function shutd0 {
  dialog --title 'Desligar' --backtitle "Desligamento" --yesno 'Deseja desligar este sistema?' 0 0
  [ $? = 0 ] && {
    sudo shutdown -h now
  } || {
    echo "." >/dev/null
  }
}

# ------------------------------------------------------------------------------

[ "$EUID" -ne 0 ] || {
  echo "Não execute esse script com sudo! Saindo..."
  exit
  }

# Checagem Obrigatória de Dependências:
[ -f /home/$USER/.installed ] || {
  [ -f /usr/bin/pacman ] && {
    clear
    echo ""
    echo -e "\033[39;5mPor favor, insira a senha do usuário $USER\033[0m"
    echo ""
    curl -sSL https://raw.githubusercontent.com/urbancompasspony/bashrc/main/install.sh | bash
    . .bashrc
    sudo pacman -Syu dialog
    touch /home/$USER/.installed
    init
  } || {
    clear
    echo ""
    echo -e "\033[39;5mPor favor, insira a senha do usuário $USER\033[0m"
    echo ""

    curl -sSL https://raw.githubusercontent.com/urbancompasspony/bashrc/main/install.sh | bash
    . .bashrc    
    sudo apt update
    sudo apt install sshpass dialog curl lm-sensors arp-scan traceroute libatasmart-bin udpcast cifs-utils smbclient
    touch /home/$USER/.installed
    init
    }
} && {
  init
}

exit 1
