#!/bin/bash

# For Ubuntu!
export NEEDRESTART_MODE=a
export DEBIAN_FRONTEND=noninteractive

# Hash
#me
hash1="68b329da9893e34099c7d8ad5cb9c940"
#common
hash2="c357311ed3a47a08b423e1b42ec5c130"
#bits
hash3="091ba2e12e1dde612c5091e0b6fd24c4"

# Versão:
version="v5.3 - 11.07.2025"

# ------------------------------------------------------------------------------

# PASSWORD
function init {
  if ! password=$(dialog --backtitle "Ubuntu Server Manager - by José Humberto" --title "Digite a senha!" --insecure --passwordbox "" 7 30 2>&1 > /dev/tty); then
    exit
  fi

  hash0=$(echo "$password" | md5sum | awk '{print $1}')

  if [ -z "$password" ]; then
    dialog --title "ERROR" --msgbox "É necessário digitar uma senha para continuar." 6 40
    clear
  elif [ "$hash0" = "$hash1" ]; then
    start
  elif [ "$hash0" = "$hash2" ]; then
    startocult
  elif [ "$hash0" = "$hash3" ]; then
    start
  else
    clear
    dialog --title "ERROR" --msgbox "Senha incorreta. \nTente novamente!" 6 30
    timeout=$((timeout+1)); sleep $timeout
    init
  fi
}

hash1="fe5dfdd991450623c39efc7705e47ad5"

function start {
  if ! var0=$(dialog --title "SUPERVISOR" --backtitle "Bem-Vindo ao USM $version" --ok-label "Acessar" --cancel-label "Sair" --menu " " 0 0 0 \
  1 'Docker Orchestration' \
  2 'Docker Maintenance' \
  3 'AutoConfig pfSense (VM)' \
  4 'Netplan AutoSetup' \
  5 'Install DWService' \
  6 'Install Tailscale' \
  7 'Install DWService ARM' \
  X 'Sair' 2>&1 > /dev/tty ); then
    exit
  fi
  
  case "$var0" in
  1) clear ; echo "Por favor, insira a senha do usuário $USER!" ; curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/refs/heads/main/Scripts/orchestration | sudo bash ; start ;;
  2) clear ; curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/refs/heads/main/Scripts/docker-tools | bash ; start ;;
  3) curl -sSL https://raw.githubusercontent.com/urbancompasspony/server/main/auto_pfsense | sudo bash ; start ;;
  4) curl -sSL https://raw.githubusercontent.com/urbancompasspony/server/refs/heads/main/netplanconfig | sudo bash ; start ;;
  5) dwservice0 ; start ;;
  6) tailscaled0 ; start ;;
  7) dwgeneric0 ; start ;;
  X) exit ;;
  esac
}

function startocult {
  managers ; startocult
}

function managers {
  if ! var0=$(dialog --title 'Suporte ao Servidor' --backtitle "Bem-Vindo ao USM $version" --ok-label "Acessar" --cancel-label "Sair" --menu " " 0 0 0 \
  1 'Informacoes do Servidor' \
  2 'Iniciar Area de Trabalho (local apenas)' \
  3 'Gerir o Active Directory (se existir)' \
  4 'Ferramentas Diversas' \
  5 'Diagnóstico do Sistema' \
  6 'Continuidade do Negocio (CdN)' \
  7 'Reiniciar Servidor' \
  8 'Desligar Servidor' \
  X 'Sair' 2>&1 > /dev/tty ); then
    exit
  fi

  case "$var0" in
  1) allinfoz0 ; managers ;;
  2) desktop00 ; managers ;;
  3) domain00 ; managers ;;
  4) curl -sSL https://raw.githubusercontent.com/urbancompasspony/server/main/tools | tee /home/administrador/.t00lz >/dev/null ; chmod +x /home/administrador/.t00lz ; clear ; bash /home/administrador/.t00lz ; managers ;;
  5) check_diag_con ; managers ;;
  6) curl -sSL https://raw.githubusercontent.com/urbancompasspony/server/refs/heads/main/CDN/00-Base | tee /home/administrador/.base >/dev/null ; chmod +x /home/administrador/.base ; clear ; bash /home/administrador/.base ; managers ;;
  7) reb00t ; managers ;;
  8) shutd0 ; managers ;;
  X) exit ;;
  esac
}

function check_diag_con {
  clear

  if [ -z "$DIAG_UPDATE_CHECKED" ]; then
    export DIAG_UPDATE_CHECKED=1
    curl -sSL https://raw.githubusercontent.com/urbancompasspony/server/refs/heads/main/Diagnostics/install.sh | sudo bash
  fi

  sudo bash /usr/local/bin/diagnostic-system.sh
}

function allinfoz0 {
  if [ -f /srv/system.yaml ]; then
    YAML_FILE="/srv/system.yaml"

    meuipwan=$(dig @resolver4.opendns.com myip.opendns.com +short)
    meugateway=$(ip route get 1.1.1.1 | grep -oP 'via \K\S+')
    meuiplan=$(ip route get 1.1.1.1 | grep -oP 'src \K\S+')
    minhasubnet="${meugateway%.*}.0"

    info1=$(yq -r '.Informacoes' "$YAML_FILE")
    info2=$(yq -r '.Hardware.Tipo' "$YAML_FILE")
    info3=$(yq -r '.Hardware.Placa' "$YAML_FILE")

    # --------------------------------------
    dialog_text="Informacoes do Servidor:

$info1

IP WAN: $meuipwan
IP LAN Atual: $meuiplan
Gateway Identificado: $meugateway
Subnet Identificada: $minhasubnet

Hardware:
Placa: $info2
Tipo: $info3"
    # --------------------------------------

    dialog --title "VISUALIZANDO DADOS" --backtitle "" --msgbox "Pressione OK abaixo para visualizar os resultados! \n\nNavegue com as setas para cima e para baixo. \n\nPara sair pressione 'q' !" 12 40
    clear; echo "$dialog_text" | less
    clear
  else
    dialog --title 'ATENCAO' --msgbox "Servidor fora de estrutura.\nModelo M identificado.\n\nEstruture este servidor para o Modelo CDN para ler todas as informacoes!" 9 50
  fi
}

function desktop00 {
  if pstree -s $$ | grep sshd 1>&2 >/dev/null; then
    clear; echo ""; echo "Voce esta tentando acessar o desktop remotamente. Use esse menu la na tela local do servidor!"
  else
    desktop01
  fi
  sleep 3
}

function desktop01 {
  if [ -f /usr/bin/labwc ]; then
    labwc
    return
  else
    startx
    return
  fi
}

hash1="e4439267203fb5277d347e6cd6e440b5"

function reb00t {
  if dialog --title 'Reiniciar' --backtitle "Reinicio" --yesno 'Deseja reiniciar este sistema?' 0 0; then
    sudo reboot
  fi
}

hash1="7c6126d9cc35fccb0c8a3a42147ea85f"

function shutd0 {
  if dialog --title 'Desligar' --backtitle "Desligamento" --yesno 'Deseja desligar este sistema?' 0 0; then
    sudo shutdown -h now
  fi
}

function wayland00 {
  clear
  sudo apt update
  sudo apt install openbox wayland-utils labwc obconf -y
  mkdir -p /home/administrador/.config/labwc
  rsync -aHAXv --numeric-ids --sparse /etc/xdg/openbox/ .config/labwc/
  curl -sSL https://raw.githubusercontent.com/urbancompasspony/linux.cheat.sheet/main/Wayland/LabWC/menu.xml | tee .config/labwc/menu.xml >/dev/null
}

function domain00 {
  if docker ps -a | grep dominio 1>&2 >/dev/null; then

  URLAQUI="https://raw.githubusercontent.com/urbancompasspony/docker/refs/heads/main/rsat-webui-samba/auto-upgrade_yaml_based.sh"
    if ! curl -fsSL --connect-timeout 5 "$URLAQUI" -o "$TMP_BASHRC"; then
      echo "Erro: Sem conexão com a internet ou URL inacessível."
      rm -f "$TMP_BASHRC"
    else
      if [ -z "$DOM_UPDATE_CHECKED" ]; then
        export DOM_UPDATE_CHECKED=1
        curl -sSL $URLAQUI | sudo bash
      fi
    fi

    docker exec -it dominio /root/.init
    return
  else
    clear; echo ""; echo "Nenhum Controlador de Dominio encontrado neste sistema!"; echo ""; sleep 3
  fi
}

function tailscaled0 {
  if [ $HOSTNAME = "ubuntu-server" ]; then
    clear; echo "TROQUE O HOSTNAME DESTE SERVIDOR!"
    sleep 3
    return
  else
    curl -fsSL https://tailscale.com/install.sh | sh
    sudo tailscale up
  fi
}

function dwservice0 {
  clear
  curl -sSL https://www.dwservice.net/download/dwagent_x86.sh | tee /home/administrador/dwagent_x86.sh >/dev/null
  chmod +x /home/administrador/dwagent_x86.sh
  sudo bash /home/administrador/dwagent_x86.sh
}

function dwgeneric0 {
  clear
  curl -sSL https://www.dwservice.net/download/dwagent_generic.sh | tee /home/administrador/dwagent_generic.sh >/dev/null
  chmod +x /home/administrador/dwagent_generic.sh
  sudo bash /home/administrador/dwagent_generic.sh
}

# ===================================================================================================================================== #

if ! [ "$EUID" -ne 0 ]; then
  echo "Não execute esse script com sudo! Saindo..."
  exit
fi

# Atualiza o bashrc só se tiver internet e verifica 1x a cada sessão!
if [ -z "$BASHRC_UPDATE_CHECKED" ]; then
  export BASHRC_UPDATE_CHECKED=1
  curl -sSL https://raw.githubusercontent.com/urbancompasspony/bashrc/main/install.sh | bash
fi

init

exit 1
