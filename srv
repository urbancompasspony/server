#!/bin/bash

# # # # # # # # # # #
# SRV MGR Menu v0.1 #
# # # # # # # # # # # 

# For Ubuntu!
export pty=True
export NEEDRESTART_MODE=a
export DEBIAN_FRONTEND=noninteractive

# Hash
hash1="68b329da9893e34099c7d8ad5cb9c940"

# Versão:
version="v1.0"

# ------------------------------------------------------------------------------

# PASSWORD
function init {
timeout=1
password=$(dialog --backtitle "Server Manager $version" --title " " --insecure --passwordbox "Digite a senha!" 0 0 2>&1 > /dev/tty)
hash0=$(echo "$password" | md5sum | awk '{print $1}')
  [ -z "$password" ] && {
    clear
    echo ""
    echo "É necessário digitar uma senha para continuar. Saindo..."
    echo ""
  } || {
    [ "$hash0" = "$hash1" ] && {
      start
    } || {
      echo "Senha incorreta. Tente novamente!"
      sleep $timeout; timeout=$timeout+1
      init
      }
  }
}

hash1="fe5dfdd991450623c39efc7705e47ad5"

function start {
var0=$(dialog --title ' ' --backtitle "Bem-Vindo ao Server Manager $version!" --menu " " 0 0 0 \
A 'Linite' \
B 'DWAgent [x86]' \
C 'DWAgent [ARM]' \
D 'Active Directory' \
E 'Desktop' \
F 'Orchestra' \
G 'Settings' \
H 'LazyDocker' \
I 'Reboot Server' \
J 'Shutdown Server' \
X 'Sair' 2>&1 > /dev/tty )

case "$var0" in

A) curl -sSL https://raw.githubusercontent.com/urbancompasspony/linite/main/linite | sudo bash ; start ;;
B) wget https://www.dwservice.net/download/dwagent_x86.sh -O /home/$USER/dwagent_x86.sh ; start ;;
C) wget https://www.dwservice.net/download/dwagent_generic.sh -O /home/$USER/dwagent_generic.sh ; start ;;
D) clear ; echo "Digite domain para entrar no painel de controle do AD-DC SAMBA4!" ; sleep 5 ;;
E) clear ; echo "Digite startx para entrar no modo Desktop!" ; sleep 5 ;;
F) curl -sSL https://raw.githubusercontent.com/urbancompasspony/server/main/orchestration | bash ; start ;;
G) curl -sSL https://raw.githubusercontent.com/urbancompasspony/server/main/tools | sudo bash ; start ;;
H) lazydocker ;;
I) reb00t ;;
J) shutd0 ;;
X) exit ;;
esac
}

function domainlocal01 {
  [ $(which docker 2>/dev/null) ] && {
    docker ps -a | grep dominio 1> /dev/null && {
      docker exec dominio bash
    } || {
      domainlocal02
    }
  } || {
    domainlocal02
  }
}

function domainlocal02 {
sambastatus=$(ps aux | grep "domain" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
  [ "$sambastatus" = "Executando" ] && {
    curl -sSL https://raw.githubusercontent.com/urbancompasspony/server/main/domain | sudo bash
  } || {
    dialog --cr-wrap --title 'Atenção!' --backtitle "$bktitle" --msgbox "Nenhum Controlador de Domínio localizado." 8 40
    }
}

hash1="e4439267203fb5277d347e6cd6e440b5"

function reb00t {
  dialog --title 'Reiniciar' --backtitle "Reinício" --yesno 'Deseja reiniciar este sistema?' 0 0
  [ $? = 0 ] && {
    sudo reboot
  } || {
    start
  }
}

hash1="576200e78f0ab25b437dc7372ae920d9"

function shutd0 {
  dialog --title 'Desligar' --backtitle "Desligamento" --yesno 'Deseja desligar este sistema?' 0 0
  [ $? = 0 ] && {
    sudo shutdown -h now
  } || {
    start
  }
}

# ------------------------------------------------------------------------------

# Password
hash="e4439267203fb5277d347e6cd6e440b5"

[ "$EUID" -ne 0 ] || {
  echo "Não execute esse script com sudo! Saindo..."
  exit
  }

# Checagem Obrigatória de Dependências:
[ -f /home/$USER/.installed ] || {
  [ -f /usr/bin/pacman ] && {
    clear
    echo "Por favor, insira a senha do usuário $USER!"
    echo ""
    curl -sSL https://raw.githubusercontent.com/urbancompasspony/bashrc/main/install.sh | bash
    . .bashrc
    sudo pacman -Syu dialog
    touch /home/$USER/.installed
    init
  } || {
    clear
    echo "Por favor, insira a senha do usuário $USER!"
    echo ""
    curl -sSL https://raw.githubusercontent.com/urbancompasspony/bashrc/main/install.sh | bash
    . .bashrc    
    sudo apt update
    sudo apt install sshpass dialog curl lm-sensors arp-scan traceroute libatasmart-bin udpcast cifs-utils
    touch /home/$USER/.installed
    init
    }
} && {
  init
}

exit 1
