#!/bin/bash

# ============================================================================ #
#########################                                                      #
# Universal Server Menu # ==================================================== #
#########################                                                      #
#                                                           ####################
# ========================================================= # By José Humberto #
#                                                           ####################
# ============================================================================ #

# Versionamento: v1.9.4.0
# 1.x: Mudanças drásticas, geralmente recursos novos e menus principais.
# x.9: Mudanças pequenas, implementação de novas ferramentas.
# rc-1: Correções de bugs de ferramentas ou menus
#[ $? -ne 0 ] && menu02

# Variáveis Globais
export bktitle="USM: Universal Server Menu v2.4"
export processname=0; export validmail=0; export process=0; export status=0; export pkg=0
export password=0; export password1=0; export password2=0; export password3=0
export report=0

# Checagem de Dependências
function pkg {
REQUIRED_PKG="$1"
PKG_OK=$(dpkg-query -W --showformat='${Status}\n' $REQUIRED_PKG|grep "install ok installed")
echo "Verificando pelo pacote $REQUIRED_PKG:" $PKG_OK
if [ "" = "$PKG_OK" ]; then
  echo "$REQUIRED_PKG não encontrado. Instalando... Digite sua senha!"
  sudo apt update; sudo apt install $REQUIRED_PKG -y
  mkdir -p ~/.mutt/cache/headers && mkdir ~/.mutt/cache/bodies && touch ~/.mutt/certificates && touch ~/.mutt/muttrc
  echo -e "$TEXTAO07" > ~/.mutt/muttrc
fi
}

# PASSWORD
function init {
password=$(dialog --backtitle "$bktitle" --title 'Acesso ao Server Menu' --insecure --passwordbox 'Digite sua senha de Administrador!' 0 0 2>&1 > /dev/tty)
if [ -z "$password" ]; then
  clear
  echo "É necessário digitar sua senha para continuar. Saindo..."
  echo "Para voltar, digite 'menu' "
else
  start
fi
}

# SISTEMA
function start {
#while true; do
  datetime=`date +"%d/%m %H:%M"` # Data e Hora
  var1=$(dialog --backtitle "$bktitle" --title 'Menu Principal' --menu " "  0 0 8 \
  A 'Status Geral' \
  B 'Máquinas Virtuais' \
  C 'Processos' \
  D 'Active Directory' \
  E 'Ferramentas' \
  F 'Avançado' \
  X 'SAIR' 2>&1 > /dev/tty )
[ $? -ne 0 ] && start
case "$var1" in
  A) menu01 ;;
  B) menu02 ;;
  C) menu03 ;;
  D) menu04 ;;
  E) menu05 ;;
  F) m10 ;;
  X) echo "Saindo... Para voltar, digite 'menu'!" && exit ;;
esac
#done
}

##########
# STATUS # #------------------------------------------------------------------ #
##########

function menu01 {
var2=$(dialog --title 'Status' --backtitle "S T A T U S" --menu " " 0 0 0 \
A 'Sistema' \
B 'Temperatura' \
C 'Armazenamento' \
D 'S.M.A.R.T.' \
E 'Cluster: DRBD' \
F 'Cluster: PCS' \
X 'Voltar' 2>&1 > /dev/tty )
[ $? -ne 0 ] && start
case "$var2" in
A) menu11 ;;
B) menu12 ;;
C) menu13 ;;
D) menu14 ;;
E) menu15 ;;
F) menu16 ;;
X) start ;;
esac
}

# Status de Sistema
function menu11 {
ip=`hostname -I | awk '{print $1}'`
ip2=`dig @resolver4.opendns.com myip.opendns.com +short`
uptime=`uptime | awk {'print $3 $4 $5'}`
datetime=`date +"%d/%m %H:%M"`
governor=`cat /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor || echo "Indisponível em Máquina Virtual!"`
bbalance=`ps aux | grep "btrfs balance start" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado"`
rrsnap=`ps aux | grep "rsnapshot" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado"`
rsync1=`ps aux | grep "rsync" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado"`
xorg=`ls /tmp/.X11-unix | wc -l`

TEXTMAIL="Nome da Máquina: $HOSTNAME
Data e Hora Local: $datetime

IP Local  : $ip
IP Externo: $ip2

UpTime: $uptime
XOrgs em Execução: $xorg

Balance BTRFS: $bbalance
RSnapshot: $rrsnap
RSync: $rsync1

Governador de CPU: $governor"

dialog --cr-wrap --help-button --help-label 'Ajuda' --title "Informações encontradas" --backtitle "Informações do Sistema" --msgbox "$TEXTMAIL" 0 0
case $? in
  2) dialog --title 'Ajuda com Significados de Status' --msgbox "$TEXTAO01" 0 0 ; menu11 ;;
esac
[ $? -ne 0 ] && start
menu08 "$Recado $TEXTMAIL $TEXTAO01 $Mensagem"

start
}

# Processos de Sistema
function menu03 {
menu09 smbd && smb1=$prcs
menu09 samba-ad-dc && smb2=$prcs
menu09 apache2 && apache=$prcs
menu09 lighttpd && lighttp=$prcs
menu09 pihole-FTL && pihole=$prcs
menu09 drbd && drbd1=$prcs
menu09 corosync && corosync1=$prcs
menu09 pacemaker && pacemaker1=$prcs
menu09 openfire && spark=$prcs
menu09 mysqld && mysql=$prcs
menu09 cups1 cups && cups1=$prcs
menu09 motion && motion1=$prcs
menu09 dwagent && dwagent1=$prcs

vpn=`ip a | grep tun 1> /dev/null && echo "Executando" || echo "Parado ou Ausente"`

menuxx=$(dialog --ok-label 'Ajustar' --help-button --help-label 'Ajuda' --backtitle "Processos Ativos, Parados ou Ausentes" --title 'Processos de Sistema' --menu " "  0 0 0 \
A "Samba      : $smb1"  \
B "Dominio    : $smb2" \
C "Apache2    : $apache" \
D "Lighttpd   : $lighttp" \
E "PiHole     : $pihole" \
F "DRBD       : $drbd1" \
G "Corosync   : $corosync1" \
H "Pacemaker  : $pacemaker1" \
I "Spark      : $spark" \
J "MySQL      : $mysql" \
K "CUPS       : $cups1" \
L "Motion     : $motion1" \
M "DWAgent    : $dwagent1" \
N "VPN Client : $vpn" \
X "Voltar" 2>&1 > /dev/tty )
case $? in
  2) dialog --title 'Ajuda com Significados de Status' --msgbox "$TEXTAO08" 0 0 ; menu03 ;;
esac
[ $? -ne 0 ] && start
case "$menuxx" in
A) status="$smb1"; processname="Samba"; process="smbd"; menu031 ;;
B) status="$smb2"; processname="Dominio"; process="samba-ad-dc"; menu031 ;;
C) status="$apache"; processname="Apache2"; process="apache2"; menu031 ;;
D) status="$lighttp"; processname="Lighttp"; process="lighttp"; menu031 ;;
E) status="$pihole"; processname="PiHole"; process="pihole-FTL"; menu031 ;;
F) dialog --title 'Operação Não Permitida!' --msgbox "Utilize o gerenciamento padrão para lidar com o DRBD" 8 40; menu031 ;;
G) dialog --title 'Operação Não Permitida!' --msgbox "Utilize o gerenciamento padrão para lidar com o Corosync" 8 40; menu031 ;;
H) dialog --title 'Operação Não Permitida!' --msgbox "Utilize o gerenciamento padrão para lidar com o Pacemaker" 8 40; menu031 ;;
I) status="$spark"; processname="Spark"; process="openfire"; menu031 ;;
J) status="$mysql"; processname="MySQL"; process="mysql"; menu031 ;;
K) status="$cups1"; processname="CUPS"; process="cups"; menu031 ;;
L) status="$motion1"; processname="Motion"; process="motion"; menu031 ;;
M) status="$dwagent1"; processname="DWAgent"; process="dwagent"; menu031 ;;
N) status="$vpn"; processname="VPN Client"; process="openvpn"; menu031 ;;
X) start ;;
esac
#status="$drbd1"; processname="DRBD"; process="drbd"; menu031 ;;
#status="$corosync1"; processname="Corosync"; process="corosync"; menu031 ;;
#status="$pacemaker1"; processname="Pacemaker"; process="pacemaker"; menu031 ;;
}

function menu031 {
if [ "$status" = "Executando" ]; then
  dialog --title "$processname" --yesno "Deseja reiniciar o processo $processname ?" 6 40
  if [ $? = 0 ]; then
    echo "$password" | sudo -S systemctl restart "$process"
    dialog --title "$processname" --msgbox "O processo $processname foi reiniciado!" 6 40
  else
    dialog --title "$processname" --yesno "Deseja parar o processo $processname ?" 6 40
    if [ $? = 0 ]; then
    echo "$password" | sudo -S systemctl stop "$process"
    dialog --title "$processname" --msgbox "O processo $processname foi parado!" 6 40
    fi
  fi
else
  dialog --title "$processname" --yesno "Deseja tentar iniciar o processo $processname ?" 6 40
  if [ $? = 0 ]; then
    echo "$password" | sudo -S systemctl start "$process"
    dialog --title "$processname" --msgbox "Verifique se o $processname iniciou." 6 40
  fi
fi

menu03
}

# Status de Processos
function menu09 {
  prcs=`echo "$password" | sudo -S systemctl is-active --quiet $1 && echo "Executando" || echo "Parado ou Ausente"`
}

# Status Temperatura
function menu12 {
sensors0=`sensors || echo "Incompatível em Máquina Virtual!"`
dialog --cr-wrap --help-button --help-label 'Ajuda' --backtitle 'Temperatura, Potencia e Rotação de Cooler(s) [Se disponível!]' --msgbox "$sensors0" 0 0
case $? in
  2) dialog --title 'Ajuda com Significados de Status' --msgbox "$TEXTAO02" 0 0 ; menu12 ;;
esac
[ $? -ne 0 ] && menu01
if [ "$sensors1" = "Incompatível em Máquina Virtual!" ]; then
  dialog --title "Erro ao emitir relatório" --msgbox "Sistema incompatível!" 0 0
else
  menu08 "$Recado $sensors0 $TEXTAO02 $Mensagem"
fi

menu01
}

# Status de Consumo dos Discos
function menu13 {
sdisks=`df -Th`
dialog --cr-wrap --help-button --help-label 'Ajuda' --title "Discos encontrados" --backtitle "Status do Armazenamento" --msgbox "$sdisks" 0 0
case $? in
  2) dialog --title 'Ajuda' --msgbox "$TEXTAO03" 0 0; menu13 ;;
esac
[ $? -ne 0 ] && menu01
menu08 "$Recado $sdisks $TEXTAO03 $Mensagem"
menu01
}

# LibATASmart-bin!
function menu14 {
menu140 "sda" && dump1=$skd && dumpst1=$stssd
menu140 "sdb" && dump2=$skd && dumpst2=$stssd
menu140 "sdc" && dump3=$skd && dumpst3=$stssd
menu140 "sdd" && dump4=$skd && dumpst4=$stssd
menu140 "sde" && dump5=$skd && dumpst5=$stssd
menu140 "sdf" && dump6=$skd && dumpst6=$stssd
menu140 "sdg" && dump7=$skd && dumpst7=$stssd
menu140 "sdh" && dump8=$skd && dumpst8=$stssd
menu140 "sdi" && dump9=$skd && dumpst9=$stssd
menusk=$(dialog --help-button --help-label 'Ajuda' --backtitle "Análise de Atributos SMART!" --title "S.M.A.R.T." --menu ""  0 0 0 \
"/dev/sda" "$dumpst1" \
"/dev/sdb" "$dumpst2" \
"/dev/sdc" "$dumpst3" \
"/dev/sdd" "$dumpst4" \
"/dev/sde" "$dumpst5" \
"/dev/sdf" "$dumpst6" \
"/dev/sdg" "$dumpst7" \
"/dev/sdh" "$dumpst8" \
"/dev/sdi" "$dumpst9" \
Voltar "" 2>&1 > /dev/tty )
case $? in
  2) dialog --title "Definições de SMART!" --msgbox "$TEXTAO04" 0 0 ; menu14 ;;
esac
[ $? -ne 0 ] && start
case "$menusk" in
"/dev/sda") menu141 "sda" "$dump1" ; menu14 ;;
"/dev/sdb") menu141 "sdb" "$dump2" ; menu14 ;;
"/dev/sdc") menu141 "sdc" "$dump3" ; menu14 ;;
"/dev/sdd") menu141 "sdd" "$dump4" ; menu14 ;;
"/dev/sde") menu141 "sde" "$dump5" ; menu14 ;;
"/dev/sdf") menu141 "sdf" "$dump6" ; menu14 ;;
"/dev/sdg") menu141 "sdg" "$dump7" ; menu14 ;;
"/dev/sdh") menu141 "sdh" "$dump8" ; menu14 ;;
"/dev/sdi") menu141 "sdi" "$dump9" ; menu14 ;;
Voltar) menu01 ;;
esac
}

function menu140 {
stssd=`ls /dev/$1 1> /dev/null 2> /dev/null && echo "Presente" || echo "Ausente"`
if [ "$stssd" = "Presente" ]; then
  skd=`echo "$password" | sudo -S skdump /dev/$1 | grep -A40 -P 'ID#' | awk '{print $1,$2,$6}'`
else
  skd=`echo "Disco ausente!"`
fi
}

function menu141 {
dialog --cr-wrap --backtitle /dev/$1 --msgbox "$2" 0 0
menu08 "$Recado $2 $TEXTAO04 $Mensagem"
menu14
}

function menu15 {
menu09 drbd && drbd1=$prcs
if [ "$drbd1" = "Executando" ]; then
  sdrbd=`echo "$password" | sudo -S drbdadm status`
  dialog --cr-wrap --help-button --help-label 'Ajuda' --title "DRBD" --backtitle "Status do DRBD" --msgbox "$sdrbd" 0 0
  case $? in
    2) dialog --title 'Ajuda' --msgbox "$TEXTAO05" 0 0; menu15 ;;
  esac
  [ $? -ne 0 ] && start
  menu08 "$Recado $sdrbd $TEXTAO05 $Mensagem"
else
  dialog --title "ERROR" --msgbox "O DRBD não está em execução ou não foi localizado neste sistema!" 8 40
fi

menu01
}

function menu16 {
menu09 corosync && corosync1=$prcs
menu09 pacemaker && pacemaker1=$prcs
if [ "$corosync1" = "Executando" ] && [ "$pacemaker1" = "Executando" ]; then 
  spcs=`echo "$password" | sudo -S pcs status`
  dialog --cr-wrap --help-button --help-label 'Ajuda' --title "PCS" --backtitle "Status do Pacemaker/Corosync" --msgbox "$spcs" 0 0
  case $? in
    2) dialog --title 'Ajuda' --msgbox "$TEXTAO06" 0 0; menu16 ;;
  esac
  [ $? -ne 0 ] && start
  menu08 "$Recado $spcs $TEXTAO06 $Mensagem"
else
  dialog --title "ERROR" --msgbox "O Pacemaker/Corosync não estão em execução ou não foram localizados neste sistema!" 8 40
fi

menu01
}

# Ferramentas do Sistema
function menu05 {
var6=$(dialog --help-button --help-label 'Ajuda' --title 'Ferramentas' --backtitle "F E R R A M E N T A S" --menu " " 0 0 0 \
A 'SpeedTest' \
B 'Arp-Scan' \
C 'WhoIs' \
D 'TraceRoute' \
E 'Governador de CPU' \
F 'Relatórios' \
G 'Reiniciar' \
H 'Desligar' \
X 'Voltar' 2>&1 > /dev/tty )
case $? in
  2) dialog --title 'Ajuda' --msgbox "$TEXTAO09" 0 0 ; menu05 ;;
esac
[ $? -ne 0 ] && start
case "$var6" in
A) menu050 ;;
B) menu0501 ;;
C) menu051 ;;
D) menu052 ;;
E) menu053 ;;
F) menu054 ;;
G) menu06 ;;
H) menu07 ;;
X) start ;;
esac
}

# SpeedTest
function menu050 {
dialog --title 'SpeedTest' --backtitle "Velocimetro Internet!" --msgbox "Pressione Enter para iniciar o teste e aguarde!" 0 0
speedy=`curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python3 -`
dialog --title 'SpeedTest' --backtitle "Velocimetro Internet!" --msgbox "$speedy" 0 0
menu08 "$speedy"
menu05
}

# Arp-Scan
function menu0501 {
dialog --title 'Arp-Scan' --backtitle "Listagem de Tabela ARP da Rede LAN" --msgbox "Pressione Enter para iniciar o teste e aguarde!" 0 0
arpscn=`echo "$password" | sudo -S arp-scan -l`
dialog --title 'Arp-Scan' --backtitle "Listagem de Tabela ARP da Rede LAN" --msgbox "$arpscan" 0 0
menu08 "$arpscn"
menu05
}

#WhoIS
function menu051 {
site=$(dialog --title 'WhoIs' --backtitle "Identificar de Propriedade de um WebSite" --inputbox "Digite o site que deseja localizar informações. Use o seguinte modelo: exemplo.com.br" 10 40 2>&1 > /dev/tty)
dialog --title "WhoIs" --msgbox "Pressione Enter para iniciar o teste e aguarde!" 0 0
wis=`whois "$site"`
dialog --title "WhoIs" --msgbox "$wis" 0 0
menu08 "$wis"
menu05
}

# Traceroute
function menu052 {
site=$(dialog --title 'TraceRoute' --backtitle "Identificador de hops/saltos que um computador efetua até acessar um site especificado." --inputbox "Digite o site que deseja analisar os Saltos. Use o seguinte modelo: \n
exemplo.com.br \n
A identificação estará concluída quando um (END) surgir no final." 14 40 2>&1 > /dev/tty)
dialog --title "Traceroute" --msgbox "Pressione Enter para iniciar o teste e aguarde!" 0 0
trot=`traceroute "$site"`
dialog --title "Traceroute" --msgbox "$trot" 0 0
menu08 "$trot"
menu05
}

# Governador de CPU
function menu053 {
governor1=`cat /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor || echo "Indisponível em Máquina Virtual!"`
governor2=`cat /sys/devices/system/cpu/cpu1/cpufreq/scaling_available_governors || echo "Indisponível em Máquina Virtual!"`
var3=$(dialog --help-button --help-label 'Ajuda' --title 'Governador de CPU' --backtitle "Troca do Governador de CPU" --menu "Governador de CPU Atual: \n
$governor1" 0 0 0 \
A 'Conservative' \
B 'OnDemand' \
C 'UserSpace' \
D 'PowerSave' \
E 'Performance' \
F 'Schedutil' \
X 'Voltar' 2>&1 > /dev/tty )
case $? in
  2) dialog --title 'Ajuda' --msgbox "$TEXTAO10" 0 0 ; menu053 ;;
esac
[ $? -ne 0 ] && menu05
case "$var3" in
A) menu10 conservative ;;
B) menu10 ondemand ;;
C) menu10 userspace ;;
D) menu10 powersave ;;
E) menu10 performance ;;
F) menu10 schedutil ;;
X) menu05 ;;
esac
}

function menu054 {
pong=`ping google.com -c 1 1> /dev/null 2> /dev/null && echo "ok" || echo "notok"`
if [ "$pong" = "notok" ]; then
  dialog --cr-wrap --title "Erro na Rede" --backtitle "Erro detectado" --msgbox "O sistema não pode se comunicar com a rede local! Verifique sua conexão e tente novamente mais tarde." 8 40
  start
else
  if [ "$report" = "0" ]; then
    dialog --title 'Confirmação' --backtitle 'Relatórios' --yesno "Deseja habilitar a emissão de relatórios?" 8 40
    if [ $? = 0 ]; then  
      validmail=$(dialog --title "Inserir Destinatário" --backtitle "Definir E-mail" --inputbox "Insira o e-mail para o qual deseja enviar os relatórios gerados! \n \n
Pode ser mais de um, bastando separá-los com vírgula e espaço. Exemplo: user@mail.com, user2@mail.com" 15 40 2>&1 > /dev/tty)
      if [ -z "$validmail" ]; then
        dialog --cr-wrap --title "Erro no E-mail!" --backtitle "Erro detectado" --msgbox "Digite um e-mail válido!" 0 0
      fi
      report="1"
    fi
  else
    dialog --title 'Confirmação' --backtitle 'Relatórios' --yesno "Deseja trocar o e-mail de emissão de relatórios?" 8 40
    if [ $? = 0 ]; then
      validmail=$(dialog --title " " --backtitle "Definir E-mail" --inputbox "Insira o e-mail para o qual deseja enviar os relatórios gerados!" 9 40 2>&1 > /dev/tty)
    fi
    dialog --title "Confirmação" --backtitle "Relatórios" --yesno "Deseja desativar a emissão de relatórios?" 8 40
    if [ $? = 0 ]; then
      report="0"
    fi
  fi
fi

menu05
}

# Governador de CPU 2
function menu10 {
governor2=`cat /sys/devices/system/cpu/cpu1/cpufreq/scaling_available_governors`
govr=$(echo "$password" | sudo -S echo $1 | sudo -S tee /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor 2> /dev/null 1> /dev/null && echo "si" || echo "no")
if [ "$govr" = "si" ]; then
  dialog --cr-wrap --title "Bem sucedido!" --backtitle "Troca de Governador" --msgbox "Governador trocado com sucesso!" 0 0 ; menu053
else
  dialog --cr-wrap --title "ERRO" --backtitle "Troca de Governador" --msgbox "Seu sistema não suporta o governador escolhido. Detectamos estes governadores abaixo como suportados: \n \n
> $governor2 < \n \n
Mais informações em AJUDA!" 0 0 ; menu053
fi
}

# Máquinas Virtuais

function menu02 {
if [[ $(which virt-manager 2>/dev/null) ]]; then
  menu022 "1p" && vm1=$vms && vm11=$sts
  menu022 "2p" && vm2=$vms && vm12=$sts
  menu022 "3p" && vm3=$vms && vm13=$sts
  menu022 "4p" && vm4=$vms && vm14=$sts
  menu022 "5p" && vm5=$vms && vm15=$sts
  menu022 "6p" && vm6=$vms && vm16=$sts
  menu022 "7p" && vm7=$vms && vm17=$sts
  menu022 "8p" && vm8=$vms && vm18=$sts
  menu022 "9p" && vm9=$vms && vm19=$sts
  menu022 "10p" && vm10=$vms && vm110=$sts

  menuxy=$(dialog --ok-label 'Ajustar' --help-button --help-label 'Ajuda' --backtitle "Virt-Manager detectado. Bem-Vindo ao Gestor de Máquinas Virtuais!" --title "Gestão de VMs" --menu "Gestão de Máquinas Virtuais"  0 0 0 \
  Status "Geral" \
  "$vm1" "$vm11" \
  "$vm2" "$vm12" \
  "$vm3" "$vm13" \
  "$vm4" "$vm14" \
  "$vm5" "$vm15" \
  "$vm6" "$vm16" \
  "$vm7" "$vm17" \
  "$vm8" "$vm18" \
  "$vm9" "$vm19" \
  "$vm10" "$vm110" \
  Iniciar "Todas!" \
  Parar "Todas!" \
  Voltar " " 2>&1 > /dev/tty )

  case $? in
    2) dialog --title "Ajuda" --msgbox "$TEXTAO11" 0 0 ; menu02 ;;
  esac
  
  [ $? -ne 0 ] && start
  
  case "$menuxy" in
  Status) menu025 ;;
  "$vm1") chkvm="$vm11"; nmvm="$vm1"; menu021 ;;
  "$vm2") chkvm="$vm12"; nmvm="$vm2"; menu021 ;;
  "$vm3") chkvm="$vm13"; nmvm="$vm3"; menu021 ;;
  "$vm4") chkvm="$vm14"; nmvm="$vm4"; menu021 ;;
  "$vm5") chkvm="$vm15"; nmvm="$vm5"; menu021 ;;
  "$vm6") chkvm="$vm16"; nmvm="$vm6"; menu021 ;;
  "$vm7") chkvm="$vm17"; nmvm="$vm7"; menu021 ;;
  "$vm8") chkvm="$vm18"; nmvm="$vm8"; menu021 ;;
  "$vm9") chkvm="$vm19"; nmvm="$vm9"; menu021 ;;
  "$vm10") chkvm="$vm110"; nmvm="$vm10"; menu021 ;;
  Iniciar) menu023 ;;
  Parar) menu024 ;;
  Voltar) start ;;
  esac
else
  dialog --cr-wrap --title 'ERRO DETECTADO' --backtitle 'FERRAMENTAS DE MÁQUINA VIRTUAL' --msgbox "O VirtManager não foi encontrado neste sistema ou você não possui as permissões para acessá-lo!" 7 50
  start
fi
}

function menu021 {
if [ "$chkvm" = "Executando" ]; then
  dialog --title "$nmvm" --yesno "Deseja reiniciar a VM $nmvm?" 6 40
  if [ $? = 0 ]; then
    virsh reboot "$nmvm"
    dialog --title "$nmvm" --msgbox "A VM $nmvm foi reiniciada!" 6 40
  else
    dialog --title "$nmvm" --yesno "Deseja desligar a VM $nmvm?" 6 40
    if [ $? = 0 ]; then
      virsh shutdown "$nmvm"
      dialog --title "$nmvm" --msgbox "A VM $nmvm foi desligada!" 6 40
    else
      dialog --title "$nmvm" --yesno "Deseja desligar FORÇADAMENTE a VM $nmvm?" 6 40
      if [ $? = 0 ]; then
        virsh destroy "$nmvm"
        dialog --title "$nmvm" --msgbox "A VM $nmvm foi desligada de forma forçada!" 6 40
      fi
    fi
  fi
else
  if [ "$chkvm" = "- - -" ]; then
    dialog --title "$nmvm" --msgbox "A VM $nmvm não existe!" 6 40
  else
    if [ "$chkvm" = "Parado" ]; then
      dialog --title "$nmvm" --yesno "Deseja tentar ligar a VM $nmvm?" 6 40
      if [ $? = 0 ]; then
        virsh start "$nmvm"
        dialog --title "$nmvm" --msgbox "Verifique se a VM $nmvm iniciou!" 6 40
      fi
    fi
  fi
fi

menu02
}

# Status das VMs
function menu022 {
vms=`virsh list | grep running | sed -n "$1" | awk '{print $2}'`
if [ "$vms" = "" ]; then
  vms=`virsh list --all | grep "shut off" | sed -n "$1" | awk '{print $2}'`
  sts=`echo "Parado"`
  if [ "$vms" = "" ]; then
    vms=`echo "- - -"`
    sts=`echo "- - -"`
  fi
else
  sts=`echo "Executando"`
fi
}

function menu023 {
dialog --title 'Confirmação' --backtitle 'Confirmação de Início de Todas as VMs!' --yesno "Deseja inicializar todas as VMs?" 0 0
[ $? -ne 0 ] && menu02
if [ $? = 0 ]; then
  for i in $(virsh list --all | grep "shut off" | awk '{print $2}')
  do
    virsh start $i
    dialog --title 'Status:' --msgbox "VM $i Iniciada!" 0 0
  done
fi

menu02
}

function menu024 {
dialog --title 'Confirmação' --backtitle 'Confirmação de Desligamento de Todas as VMs!' --yesno "Deseja desligar todas as VMs?" 0 0
[ $? -ne 0 ] && menu02
if [ $? = 0 ]; then
  for i in $(virsh list | grep running | awk '{print $2}')
  do
    virsh shutdown $i
    dialog --title 'Status:' --msgbox "VM $1 desligada!" 0 0
  done
fi

menu02
}

# Status de Máquinas Virtuais
function menu025 {
virtmgr0=`virsh list --all`
dialog --cr-wrap --help-button --help-label 'Ajuda' --title "Maquinas Virtuais encontradas:" --backtitle "Status do VirtManager" --msgbox "$virtmgr0" 0 0
case $? in
  2) dialog --title 'Ajuda' --msgbox "$TEXTAO12" 0 0 ; menu025 ;;
esac
[ $? -ne 0 ] && start

menu02
}

# Reinicio
function menu06 {
bbalance=`ps aux | grep "btrfs balance start" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado"`
rrsnap=`ps aux | grep "rsnapshot" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado"`
rsync1=`ps aux | grep "rsync" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado"`
if [ "$bbalance" = "Executando" ] || [ "$rrsnap" = "Executando" ] || [ "$rsync1" = "Executando" ]; then
  dialog --cr-wrap --title 'ERRO AO REINICIAR' --backtitle 'ERRO AO TENTAR REINICIAR.' --msgbox "Reinício bloqueado! \n
Favor verificar o Status do Sistema ou tente novamente mais tarde." 0 0
else
  dialog --title 'Reiniciar' --backtitle 'R E I N I C I A R' --yesno 'Deseja reiniciar este sistema?' 0 0
  if [ $? = 0 ]; then
    echo "$password" | sudo -S reboot
  fi
fi

menu05
}

# Desligamento
function menu07 {
rrsnap=`ps aux | grep "rsnapshot" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado"`
rsync1=`ps aux | grep "rsync" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado"`
bbalance=`ps aux | grep "btrfs balance start" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado"`
if [ "$bbalance" = "Executando" ] || [ "$rrsnap" = "Executando" ] || [ "$rsync1" = "Executando" ]; then
  dialog --cr-wrap --title 'ERRO AO DESLIGAR' --backtitle 'ERRO AO TENTAR DESLIGAR.' --msgbox "Desligamento bloqueado! \n
Favor verificar o Status do Sistema ou tente novamente mais tarde." 0 0
else
  dialog --title 'Desligar' --backtitle 'D E S L I G A R' --yesno 'Deseja desligar este sistema?' 0 0
  if [ $? = 0 ]; then
    echo "$password" | sudo -S shutdown -h now
  fi
fi

menu05
}

# Encaminhar relatórios por Email!
function menu08 {
if [ "$report" = "1" ]; then
  dialog --title 'Confirmação' --backtitle 'Relatório de Sistema' --yesno "Deseja enviar este relatório para $validmail?" 8 40
  if [ $? = 0 ]; then
    echo "$1" | mutt -s "Relatório - $HOSTNAME" "$validmail"
    dialog --title "Relatório" --msgbox "Relatório enviado com sucesso!" 6 40
  fi
fi
}

################################################################################
#                                                                              #
################################################################################

# Controlador de Dominio
function menu04 {
menu09 samba-ad-dc && smb2=$prcs

if [ "$smb2" = "Executando" ]; then
  var4=$(dialog --title 'Bem-Vindo!' --backtitle "Active Directory & Domain Controller" --menu " " 0 0 0 \
  A 'Gestão de Usuários' \
  B 'Gestão de Grupos' \
  C 'Gestão de Computadores' \
  D 'Informações do Domínio' \
  X 'Voltar' 2>&1 > /dev/tty )
  [ $? -ne 0 ] && start
  case "$var4" in

  A) menu041 ;;
  B) menu042 ;;
  C) menu043 ;;
  D) menuR ;;
  X) echo "a" ;;
  esac
else
  dialog --cr-wrap --title 'ERRO DETECTADO' --backtitle 'FERRAMENTAS DO ACTIVE DIRECTORY' --msgbox "O Controlador de Domínio não foi encontrado neste sistema ou você não tem as permissões adequadas para acessar as ferramentas!" 7 50
fi

start
}

function menu041 {
var41=$(dialog --title 'Bem-Vindo!' --backtitle "Active Directory & Domain Controller" --menu " " 0 0 0 \
A 'Criar Usuário' \
B 'Exibir todos os Usuários' \
C 'Procurar Usuário' \
D 'Exibir Grupos de Usuário' \
E 'Adicionar Usuário a um Grupo' \
F 'Remover Usuário de um Grupo' \
G 'Bloquear Usuário' \
H 'Desbloquear Usuário' \
I 'Alterar Senha de um Usuário' \
J 'Alterar Politica de um Usuário' \
K 'Excluir Usuário' \
X 'Voltar' 2>&1 > /dev/tty )
[ $? -ne 0 ] && start
case "$var41" in
A) menuD ;;
B) menuA ;;
C) menuP ;;
D) menuO ;;
E) menuJ ;;
F) menuL ;;
G) menuF ;;
H) menuG ;;
I) menuE ;;
J) menuN ;;
K) menuH ;;
X) menu04 ;;
esac
}

function menu042 {
var42=$(dialog --title 'Bem-Vindo!' --backtitle "Active Directory & Domain Controller" --menu " " 0 0 0 \
A 'Criar Grupo' \
B 'Exibir todos os Grupos' \
C 'Procurar Grupo' \
D 'Exibir Usuários de um Grupo' \
E 'Excluir um Grupo' \
X 'Voltar' 2>&1 > /dev/tty )
[ $? -ne 0 ] && start
case "$var42" in
A) menuI ;;
B) menuC ;;
C) menuQ ;;
D) menuK ;;
E) menuM ;;
X) menu04 ;;
esac
}

function menu043 {
var43=$(dialog --title 'Bem-Vindo!' --backtitle "Active Directory & Domain Controller" --menu " " 0 0 0 \
A 'Exibir todos os Computadores' \
X 'Voltar' 2>&1 > /dev/tty )
[ $? -ne 0 ] && start
case "$var43" in
A) menuB ;;
X) menu04 ;;
esac
}

function menuA {
dialog --title 'AD-DC' --backtitle "Listagem de Todos os Usuários existentes." --msgbox "Pressione Enter para visualizar os Usuários! Navegue com as setas para cima e para baixo. Para sair pressione 'q' !" 8 40
[ $? -ne 0 ] && menu041
usrlst=`echo "$password" | sudo -S samba-tool user list`
echo "$usrlst" | less
menu08 "$Recado $usrlst $Mensagem"
menu041
}

function menuB {
dialog --title 'AD-DC' --backtitle "Listagem de Todos os Computadores existentes." --msgbox "Pressione Enter para visualizar os Computadores! Navegue com as setas para cima e para baixo. Para sair pressione 'q' !" 8 40
[ $? -ne 0 ] && menu043
cmplist=`echo "$password" | sudo -S samba-tool computer list`
echo "$cmplist" | less
menu08 "$Recado $complist $Mensagem"
menu043
}

function menuC {
dialog --title 'AD-DC' --backtitle "Listagem de Todos os Grupos existentes." --msgbox "Pressione Enter para visualizar os Grupos! Navegue com as setas para cima e para baixo. Para sair pressione 'q' !" 8 40
[ $? -ne 0 ] && menu042
grplist=`echo "$password" | sudo -S samba-tool group list`
echo "$grplist" | less
menu08 "$Recado $grplist $Mensagem"
menu042
}

function menuD {
VALUE1="joao_naves"
VALUE2="João Naves"
VALUE3="1234567Ab"

VALUE0=$(dialog --ok-label "Criar"  --backtitle "Criar um novo usuário do Domínio em $HOSTNAME" --title "Adicionar Usuário" --form "Preencha todos os campos! Apague os modelos. \n
Navegue com as setas para cima e baixo." 15 50 0 \
"Usuário: " 1 1 "$VALUE1" 1 10 34 0 \
"Exibição:" 2 1 "$VALUE2" 2 10 34 0 \
"Senha:" 3 1 "$VALUE3" 3 10 34 0 \
3>&1 1>&2 2>&3 3>&- > /dev/tty)

[ $? -ne 0 ] && menu041

validusr1=$(echo "$VALUE0" | sed -n 1p)
validsur1=$(echo "$VALUE0" | sed -n 2p)
validpss1=$(echo "$VALUE0" | sed -n 3p)

if [ -z "$validpss1" ] || [ -z "$validusr1" ] || [ -z "$validsur1" ]; then
  dialog --title "ERRO" --msgbox "Não deixe nenhum campo vazio!" 6 20
else
  repeated=$(echo "$password" | sudo -S samba-tool user list | grep "$validusr1")
  if [ "$repeated" = "$validusr1" ]; then
    dialog --title "Informação" --msgbox "O usuário $validusr1 já existe!" 6 20
  else
    dialog --title 'Politica de Senha' --backtitle 'Configuração de Senha' --yesno "$validusr1 deve trocar a senha ao logar? \n
Esta opção só pode ser definida agora. Se escolher Não, deverá usar o RSAT caso mude de ideia." 8 40
    [ $? -ne 0 ] && menu041
    if [ $? = 0 ]; then
      echo "$password" | sudo -S sudo samba-tool user create "$validusr1" "$validpss1" --surname="$validsur1" --must-change-at-next-login
      dialog --title 'Politica de Senha' --backtitle 'Configuração de Senha' --yesno "A senha de $validusr nunca expira?" 0 0
      [ $? -ne 0 ] && menu041
      if [ $? = 0 ]; then
        echo "$password" | sudo -S sudo samba-tool user setexpiry "$validusr1" --noexpiry
        dialog --title "Informação" --msgbox "A senha de $validusr1 não expira!" 8 40
        dialog --title "Informação" --msgbox "Usuário $validusr1 criado e configurado com sucesso!" 8 40
      fi
    else
      echo "$password" | sudo -S sudo samba-tool user create "$validusr1" "$validpss1" --surname="$validsur1"
      dialog --title 'Politica de Senha' --backtitle 'Configuração de Senha' --yesno "A senha de $validusr nunca expira?" 0 0
      [ $? -ne 0 ] && menu041
      if [ $? = 0 ]; then
        echo "$password" | sudo -S sudo samba-tool user setexpiry "$validusr1" --noexpiry
        dialog --title "Informação" --msgbox "A senha de $validusr1 não expira!" 8 40
        dialog --title "Informação" --msgbox "Usuário $validusr1 criado e configurado com sucesso!" 8 40
      fi
    fi    
  fi
fi

menu041
}

function menuE {
validusr=$(dialog --title 'AD-DC' --backtitle "Trocar a senha de usuário do Domínio em $HOSTNAME" --inputbox "Insira o nome de usuário" 0 0 2>&1 > /dev/tty)
[ $? -ne 0 ] && menu041
if [ -z "$validusr" ]; then
  dialog --title "ERROR" --msgbox "Usuário não pode ficar em branco!" 7 25
else
  repeated=$(echo "$password" | sudo -S samba-tool user list | grep "$validusr")
  if [ "$repeated" = "$validusr" ]; then
    validpss=$(dialog --title 'AD-DC' --backtitle "Criar um novo usuário do Domínio em $HOSTNAME" --insecure --passwordbox 'Crie uma nova senha para o usuário' 0 0 2>&1 > /dev/tty )
    [ $? -ne 0 ] && menu041
    if [ -z "$validpss" ]; then
      dialog --title "ERROR" --msgbox "Senha não pode ficar em branco!" 7 25
    else
      echo "$password" | sudo -S samba-tool user setpassword "$validusr" --newpassword="$validpss"
      dialog --title "Informação" --msgbox "Senha de $validusr trocada com sucesso!" 8 40
    fi
  else
    dialog --title "ERROR" --msgbox "Usuário inválido!" 7 25
  fi
fi

menu041
}

function menuF {
validusr=$(dialog --title 'AD-DC' --backtitle "Bloquear usuário do Domínio em $HOSTNAME" --inputbox "Insira o nome de usuário" 0 0 2>&1 > /dev/tty)
[ $? -ne 0 ] && menu041
if [ -z "$validusr" ]; then
  dialog --title "ERRO" --msgbox "Usuário não pode ficar em branco!" 8 40
else
  repeated=$(echo "$password" | sudo -S samba-tool user list | grep "$validusr")
  if [ "$repeated" = "$validusr" ]; then
    echo "$password" | sudo -S samba-tool user disable "$validusr"
    dialog --title "Informação" --msgbox "Usuário $validusr bloqueado com sucesso!" 7 25
  else
    dialog --title "ERROR" --msgbox "Usuário inválido!" 7 25
  fi
fi

menu041
}

function menuG {
validusr=$(dialog --title 'AD-DC' --backtitle "Desbloquear usuário do Domínio em $HOSTNAME" --inputbox "Insira o nome de usuário" 0 0 2>&1 > /dev/tty)
[ $? -ne 0 ] && menu041
if [ -z "$validusr" ]; then
  dialog --title "ERRO" --msgbox "Usuário não pode ficar em branco!" 8 40
else
  repeated=$(echo "$password" | sudo -S samba-tool user list | grep "$validusr")
  if [ "$repeated" = "$validusr" ]; then
    echo "$password" | sudo -S samba-tool user enable "$validusr"
    dialog --title "Informação" --msgbox "Usuário $validusr desbloqueado com sucesso!" 7 25
  else
    dialog --title "ERROR" --msgbox "Usuário inválido!" 7 25
  fi
fi

menu041
}

function menuH {
validusr=$(dialog --title 'AD-DC' --backtitle "Excluir usuário do Domínio em $HOSTNAME" --inputbox "Insira o nome de usuário" 0 0 2>&1 > /dev/tty)
[ $? -ne 0 ] && menu041
if [ -z "$validusr" ]; then
  dialog --title "ERRO" --msgbox "Usuário não pode ficar em branco!" 8 40
else
  repeated=$(echo "$password" | sudo -S samba-tool user list | grep "$validusr")
  if [ "$repeated" = "$validusr" ]; then
    dialog --title 'Confirmação' --backtitle 'Exclusão de Usuário' --yesno 'Deseja excluir este usuário?' 0 0
    if [ $? = 0 ]; then
      echo "$password" | sudo -S samba-tool user delete "$validusr"
      dialog --title "Informação" --msgbox "Usuário $validusr excluído com sucesso!" 7 25
    fi
  else
    dialog --title "ERROR" --msgbox "Usuário inválido!" 7 25
  fi
fi

menu041
}

function menuI {
validgrp=$(dialog --title 'AD-DC' --backtitle "Criar um Grupo em $HOSTNAME" --inputbox "Insira o nome do Grupo" 0 0 2>&1 > /dev/tty)
[ $? -ne 0 ] && menu042
if [ -z "$validgrp" ]; then
  dialog --title "ERRO" --msgbox "Grupo não pode ficar em branco!" 8 40
else
  repeated=$(echo "$password" | sudo -S samba-tool group list | grep "$validgrp")
  if [ "$repeated" = "$validgrp" ]; then
    dialog --title "Informação" --msgbox "O grupo $validgrp já existe!" 6 20
  else
    echo "$password" | sudo -S samba-tool group add "$validgrp"
    dialog --title "Informação" --msgbox "Grupo $validgrp criado com sucesso!" 7 25
  fi
fi

menu042
}

function menuJ {
validusr=$(dialog --title 'AD-DC' --backtitle "Adicionar Usuário a um Grupo em $HOSTNAME" --inputbox "Insira o nome de Usuário" 0 0 2>&1 > /dev/tty)
[ $? -ne 0 ] && menu041
if [ -z "$validusr" ]; then
  dialog --title "ERRO" --msgbox "Usuário não pode ficar em branco!" 8 40
else  
  validgrp=$(dialog --title 'AD-DC' --backtitle "Adicionar Usuário a um Grupo em $HOSTNAME" --inputbox "Insira o nome do Grupo" 0 0 2>&1 > /dev/tty)
  [ $? -ne 0 ] && menu041
  if [ -z "$validgrp" ]; then
    dialog --title "ERRO" --msgbox "Grupo não pode ficar em branco!" 8 40
  else
    repeated=$(echo "$password" | sudo -S samba-tool user list | grep "$validusr")
    if [ "$repeated" = "$validusr" ]; then
    repeated2=$(echo "$password" | sudo -S samba-tool group list | grep "$validgrp")
      if [ "$repeated2" = "$validgrp" ]; then
        echo "$password" | sudo -S samba-tool group addmembers "$validgrp" "$validusr"
        dialog --title "Informação" --msgbox "O usuário $validusr foi adicionado ao grupo $validgrp!" 8 40
      else
        dialog --title "ERROR" --msgbox "Grupo inválido!" 7 25
      fi
    else
      dialog --title "ERROR" --msgbox "Usuário inválido!" 7 25
    fi
  fi    
fi

menu041
}

function menuK {
validgrp=$(dialog --title 'AD-DC' --backtitle "Exibir Usuários de um grupo em $HOSTNAME" --inputbox "Insira o nome do Grupo" 0 0 2>&1 > /dev/tty)
[ $? -ne 0 ] && menu042
if [ -z "$validgrp" ]; then
  dialog --title "ERRO" --msgbox "Grupo não pode ficar em branco!" 8 40
else
  repeated=$(echo "$password" | sudo -S samba-tool group list | grep "$validgrp")
  if [ "$repeated" = "$validgrp" ]; then
    dialog --title 'AD-DC' --backtitle "Listagem de Membros" --msgbox "Pressione Enter para visualizar os Grupos! Navegue com as setas para cima e para baixo. Para sair pressione 'q' !" 0 0
    usrgrps=`echo "$password" | sudo -S samba-tool group listmembers "$validgrp"`
    echo "$usrgrps" | less
  else
    dialog --title "ERROR" --msgbox "Grupo inválido!" 7 25
  fi
fi

menu08 "$Recado $usrgrps $Mensagem"
menu042
}

function menuL {
validusr=$(dialog --title 'AD-DC' --backtitle "Remover Usuário de um Grupo em $HOSTNAME" --inputbox "Insira o nome do Usuário" 0 0 2>&1 > /dev/tty)
[ $? -ne 0 ] && menu041
if [ -z "$validusr" ]; then
  dialog --title "ERRO" --msgbox "Usuário não pode ficar em branco!" 8 40
else
  validgrp=$(dialog --title 'AD-DC' --backtitle "Remover Usuário de um Grupo em $HOSTNAME" --inputbox "Insira o nome do Grupo" 0 0 2>&1 > /dev/tty)
  [ $? -ne 0 ] && menu041
  if [ -z "$validgrp" ]; then
    dialog --title "ERRO" --msgbox "Grupo não pode ficar em branco!" 8 40
  else
    repeated=$(echo "$password" | sudo -S samba-tool user list | grep "$validusr")
    if [ "$repeated" = "$validusr" ]; then
      repeated2=$(echo "$password" | sudo -S samba-tool group list | grep "$validgrp")
      if [ "$repeated2" = "$validgrp" ]; then
        echo "$password" | sudo -S samba-tool group removemembers "$validgrp" "$validusr"
        dialog --title "Informação" --msgbox "O usuário $validusr foi removido do grupo $validgrp!" 8 40
      else
        dialog --title "ERROR" --msgbox "Grupo inválido!" 7 25
      fi
    else
      dialog --title "ERROR" --msgbox "Usuário inválido!" 7 25
    fi
  fi
fi

menu041
}

function menuM {
validgrp=$(dialog --title 'AD-DC' --backtitle "Excluir grupo do Domínio em $HOSTNAME" --inputbox "Insira o nome do grupo" 0 0 2>&1 > /dev/tty)
[ $? -ne 0 ] && menu042
if [ -z "$validgrp" ]; then
  dialog --title "ERRO" --msgbox "Grupo não pode ficar em branco!" 8 40
else
  repeated=$(echo "$password" | sudo -S samba-tool group list | grep "$validgrp")
  if [ "$repeated" = "$validgrp" ]; then  
    dialog --title 'Confirmação' --backtitle 'Exclusão de Grupo' --yesno "Deseja excluir o grupo $validgrp?" 0 0
    if [ $? = 0 ]; then
      echo "$password" | sudo -S samba-tool group delete "$validgrp"
      dialog --title "Informação" --msgbox "Grupo $validgrp excluído com sucesso!" 7 25
    fi
  else
    dialog --title "ERROR" --msgbox "Grupo inválido!" 7 25
  fi
fi

menu042
}

function menuN {
validusr=$(dialog --title 'AD-DC' --backtitle "Alterar Política de Senha" --inputbox "Insira o nome de usuário" 0 0 2>&1 > /dev/tty)
[ $? -ne 0 ] && menu041
if [ -z "$validusr" ]; then
  dialog --title "ERRO" --msgbox "Usuário não pode ficar em branco!" 8 40
else
  repeated=$(echo "$password" | sudo -S samba-tool user list | grep "$validusr")
  if [ "$repeated" = "$validusr" ]; then
    dialog --title 'Politica de Senha' --backtitle 'Configuração de Senha' --yesno "A senha de $validusr não deve mais expirar?" 0 0
    if [ $? = 0 ]; then
      echo "$password" | sudo -S sudo samba-tool user setexpiry "$validusr" --noexpiry
      dialog --title "Informação" --msgbox "A senha de $validusr não expira!" 8 40
    fi
  else
    dialog --title "ERROR" --msgbox "Usuário inválido!" 7 25
  fi
fi

menu041
}

function menuO {
validusr=$(dialog --title 'AD-DC' --backtitle "Exibir grupos de um usuário em $HOSTNAME" --inputbox "Insira o nome de usuário" 0 0 2>&1 > /dev/tty)
[ $? -ne 0 ] && menu041
if [ -z "$validusr" ]; then
  dialog --title "ERRO" --msgbox "Usuário não pode ficar em branco!" 8 40
else
  repeated=$(echo "$password" | sudo -S samba-tool user list | grep "$validusr")
  if [ "$repeated" = "$validusr" ]; then
    dialog --title 'AD-DC' --backtitle "Listagem de Grupos" --msgbox "Pressione Enter para visualizar os Grupos! Navegue com as setas para cima e para baixo. Para sair pressione 'q' !" 0 0
    grpsusr=`echo "$password" | sudo -S samba-tool user getgroups "$validusr"`
    echo "$grpsusr" | less
  else
    dialog --title "ERRO" --msgbox "Usuário inválido!" 8 40
  fi
fi

menu08 "$Recado $grpsusr $Mensagem"
menu041
}

function menuP {
validusr1=$(dialog --title 'AD-DC' --backtitle "Busca se um usuário existe no Domínio em $HOSTNAME" --inputbox "Insira o nome de usuário. \n
Exemplo: joao_naves" 8 40 2>&1 > /dev/tty)
[ $? -ne 0 ] && menu041
if [ -z "$validusr1" ]; then
  dialog --title "ERRO" --msgbox "Usuário não pode ficar em branco!" 8 40
else
  repeated2=$(echo "$password" | sudo -S samba-tool user list | grep "$validusr1")
  if [ "$repeated2" = "$validusr1" ]; then
    dialog --title "Informação" --msgbox "O usuário $validusr1 já foi cadastrado!" 8 40
  else
    dialog --title "Informação" --msgbox "O usuário $validusr1 não foi encontrado." 8 40
  fi
fi

menu041
}

function menuQ {
validgrp1=$(dialog --title 'AD-DC' --backtitle "Busca se o grupo existe no Domínio em $HOSTNAME" --inputbox "Insira o nome de grupo" 0 0 2>&1 > /dev/tty)
[ $? -ne 0 ] && menu042
if [ -z "$validgrp1" ]; then
  dialog --title "ERRO" --msgbox "Grupo não pode ficar em branco!" 8 40
else
  repeated3=$(echo "$password" | sudo -S samba-tool group list | grep "$validgrp1")
  if [ "$repeated3" = "$validgrp1" ]; then
    dialog --title "Informação" --msgbox "O grupo $validgrp1 já foi cadastrado!" 8 40
  else
    dialog --title "Informação" --msgbox "O grupo $validgrp1 não foi encontrado." 8 40
  fi
fi

menu042
}

function menuR {
smbv=`samba --version`
domainv=`echo "$password" | sudo -S samba-tool domain level show`
dialog --cr-wrap --help-button --help-label 'Ajuda' --title "Informações encontradas" --backtitle "Informações do Domínio" --msgbox "
Nome da Máquina: $HOSTNAME \n \n
Versão do SAMBA: $smbv \n \n
Nível do Domínio: $domainv \n
" 0 0
case $? in
  2) dialog --title 'Ajuda com Significados' --msgbox "$TEXTAO13" 0 0 ; menuR ;;
esac
[ $? -ne 0 ] && menu04
menu04
}

################################################################################
#                                                                              #
################################################################################

function m1x {
dialog --title 'F.F.A.' --msgbox "Ferramentas e Funções Avançadas" 0 0
password3=$(dialog --backtitle "F.F.A.: Ferramentas e Funções Avançadas" --title 'Acesso Restrito' --insecure --passwordbox 'Digite a senha' 0 0 2>&1 > /dev/tty)
[ $? -ne 0 ] && start
if [ "$password3" = "1345278" ]; then
  dialog --title 'Porteiro:' --msgbox "Clift Claft Still, a Porta se Abriu!" 6 40
  m10
else
  dialog --title 'Acesso Proibido' --msgbox "Permissão Incorreta" 0 0
fi
}

function m10 {
var10=$(dialog --backtitle "Ferramentas e Funções Avançadas - Utilize com Moderação" --title 'Atenção' --menu "Funções Avançadas" 0 0 0 \
A 'Atualizar o Sistema' \
B 'Parar Rsync' \
C 'Parar RSnapshot' \
D 'Parar Balance' \
X 'Voltar' 2>&1 > /dev/tty )
[ $? -ne 0 ] && start
case "$var10" in
A) m11 ;;
B) m12 ;;
C) m13 ;;
D) dialog --title " " --msgbox "Indisponível no momento" 0 0 ; m10 ;;
X) start ;;
esac
}

function m11 {
dialog --title 'Informação' --yesno "Deseja atualizar o sistema operacional?" 8 40
if [ $? = 0 ]; then
  dialog --title 'Informação' --yesno "Tem certeza? Verifique se os processos em execução não pararão e/ou se configurações não serão perdidas." 8 40
  if [ $? = 0 ]; then
    echo "$password" | sudo -S apt update && echo "$password" | sudo -S apt upgrade -y 
    echo "# # # Fim! Aperte Enter para continuar. # # #" ; read
    dialog --title " " --msgbox "Verifique se os processos em execução não pararam e/ou se configurações não foram perdidas." 8 40
  fi
fi

m10
}

function m12 {
dialog --title 'Informação' --yesno "Deseja parar o processo RSYNC?" 8 40
if [ $? = 0 ]; then
  dialog --title 'Informação' --yesno "Tem certeza? Backups poderão não ser completados ou até corromper!" 8 40
  if [ $? = 0 ]; then
    echo "$password" | sudo -S killall rsync
    dialog --title "ATENÇÃO" --msgbox "Verifique se seus backups estão íntegros." 8 40
  fi
fi

m10
}

function m13 {
dialog --title 'Informação' --yesno "Deseja parar o processo RSNAPSHOT?" 8 40
if [ $? = 0 ]; then
  dialog --title 'Informação' --yesno "Tem certeza? Backups poderão não ser completados ou até corromper!" 8 40
  if [ $? = 0 ]; then
    echo "$password" | sudo -S killall rsnapshot
    dialog --title "ATENÇÃO" --msgbox "Verifique se seus backups estão íntegros." 8 40
  fi
fi

m10
}

function m14 { 
  echo "fim?"
}

################################################################################
#                                                                              #
################################################################################

# Todos os Textões!

Recado="Relatório gerado automaticamente pelo sistema Universal Server Menu!

"
Mensagem="

AVISO LEGAL: Esta mensagem, inclusive seus anexos, pode conter informações confidenciais e deve ser resguardado o devido sigilo de seu conteúdo. Caso a tenha recebido indevidamente, por favor apague-a imediatamente e comunique o remetente. Qualquer forma de utilização, reprodução, retransmissão, alteração, distribuição e/ou divulgação de conteúdo desta mensagem ou de parte dele, sem a autorização expressa de seu remetente, é estritamente proibida."

TEXTAO01=" Nome da Máquina: O nome registrado no sistema, hostname.
Data e Hora Local: Data e Hora de referência para logs e eventos.

IP Local: Geralmente é o IP Fixado localmente ou no servidor DHCP.
IP Externo: Se houver acesso externo, monitora qual o IP Externo coletado naquele momento.

Uptime: Mostra a quantos dias, horas e/ou minutos o servidor está ligado.
XOrgs em Execução: Para sistemas sem interface de usuário mas que permitem executar aplicações Xinit.

Balance BTRFS: Manutenção de rotina do sistema. Se estiver em Execução, o computador NÃO poderá ser desligado!
Rsnapshot: Backup incremental automatizado. Se estiver Executando, o computador não poderá ser desligado!
RSync: Sincronia do Backup em Nuvem ou para um backup RAID 1. Se estiver Executando, o computador não poderá ser desligado!

Governador de CPU: Mostra como está a execução do processador, se em Máximo Desempenho, Economia de Energia ou outro."

TEXTAO02="A temperatura costuma ter valores atuais, mínimos (low) e máximos (high)
Além disso, há também a temperatura Crítica (Crit.): Se o sistema atingir ela,
vai desligar instantaneamente por segurança.

Resultados que indicam temperaturas de CPU:
(edge) (cpu_thermal-xxx) (asus-isa-xxxx) (Core X) (coretemp-isa-xxxx)
Resultados que indicam temperaturas de GPU:
(amdgpu-pci-xxxx) (ISA Adapter)
Resultados que indicam temperaturas de Chipset:
(k10temp-pci-xxxx) (acpitz-acpi-xxxx)
Resultados que indicam rotação de cooler:
(cpu_cooler) (fan1) (RPM)
Resultados que indicam Baterias:
(BAT0-acpi-xxx) (fam15h_power-pci-xxxx)
Em Progresso: Novas indicações são adicionadas periodicamente!"

TEXTAO03="Os resultados são de discos acessíveis no sistema. 
Se um disco não aparecer aqui, significa que está em estado de erro ou foi ejetado.

As opções são:
[Sist. Arq.] [Tipo] [Tam.] [Usado] [Disp.] [Uso%] [Montado em]

Aonde:

Sist. Arq.: Os mais importantes são começados com //IP e /dev.
Tipo: Podem ser EXT4, BTRFS, NTFS, FAT32, etc.
Tam.: Tamanho total do armazenamento.
Usado: Espaço que já foi utilizado.
Disp.: Espaço restante.
Uso%: Porcentagem de uso do disco comparado ao tamanho total.
Montado em: Local aonde o disco está acessível naquele momento."

TEXTAO04="

As informações S.M.A.R.T. de um HDD ou SSD são variadas mas só
algumas partes realmente interessam. Nem todos os HDDs e SSDs exibem todas
essas informações, isso depende do fabricante. As mais importantes são:

01 (0x01) Read Error Rate: Taxa de erro geral durante as leituras do disco.
Ao lado do atributo 07 (0x07), se estiver muito alto, causará muita lentidão.

05 (0x05) Reallocated Sectors Count: Conhecidos também como BadBlocks, indicam falhas de gravação no disco.
A longo prazo isso pode resultar em perda do disco dentro de alguns meses.

07 (0x07) Seek Error Rate: Erro das cabeças magnéticas; podem surgir
por danos ao braço de leitura ou alargamento térmico do disco rígido.
Normalmente não é preocupante mas ao lado do atributo 01 (0x01) pode causar lentidão.

10 (0x0A) Spin Retry Count: Quantidade de vezes que o HDD tentou inicializar após uma falha interna.
A médio prazo isso significa falhas graves das cabeças de leitura e o disco poderá parar em alguns meses.

184 (0xB8) End-to-End error (ou IOEDC): Indica erros nos dados que transitam do disco ou SSD para a memória RAM.
Imediatamente causa muito lentidão de acesso aos dados; com valores altos desse atributo, há perdas de dados.

195 (0xC3) Hardware ECC Recovered: Sozinho não quer dizer muita coisa; porém somado ao resultado do atributo 187 (0xBB)
abaixo, significa que o disco está perdendo dados mas ainda está se recuperando. Lentidão extrema é prevista.

187 (0xBB) Reported Uncorrectable Errors: Erros incorrigíveis que foram reportados durante o processamento do,
Hardware ECC do próprio HDD. Valores altos significam disco extremamente lento.

188 (0xBC) Command Timeout: Quantidade de vezes que o HDD ou SSD desistiu de fazer uma leitura.
Um valor alto indica falha geral da placa lógica do disco.

196 (0xC4) Reallocation Event Count: Quantidade de vezes que o disco copiou dados de um setor ruim para um bom,
se auto-recuperando. Os valores podem ser altos sem perdas de dados, mas a lentidão será notável.

197 (0xC5) Current Pending Sector Count: Setores que aguardam ser remapeados. Altos valores do atributo 187 (0xBB) ou
mesmo do atributo 05 (0x05) indicam que o HDD está com setores defeituosos e está com dificuldades de lidar. Lentidão.

198 (0xC6) (Offline) Uncorrectable Sector Count: Costuma indicar erros na superfície dos discos ou ainda uma falha
mecânica geral da cabeça de leitura dos discos, ou ainda de multiplexadoras de SSDs.

201 (0xC9) Soft Read Error Rate (ou TA Counter Detected): Quantidade de erros causados por software.
Valores altos indicam a presença de bad sectors (diferente de bad blocks), que podem ser corrigidos com
ferramentas de análise, como o HD Regenerator.

As informações acima são referências para análises da saúde dos discos. Atenção ao interpretar os resultados!"

TEXTAO05="De maneira geral o DRBD precisa estar com todas as suas opções indicando:

Disk: UpToDate
Peer-Disk: UpToDate

Dessa forma os discos estão sincronizados!"

TEXTAO06="De maneira geral o PCS precisa estar com todas as suas opções indicando:

Node List: Online [ Primary Secondary ]

Full List of Resources: Todos os resources precisam estar ativos, definidos como
Primary e/ou Secondary, dependendo do Nó que está sendo analisado."

TEXTAO07="set from = 'srvlinux.report@gmail.com'
set realname = '$HOSTNAME'
set imap_user = 'srvlinux.report@gmail.com'
set imap_pass = 'objkhaxxwmofspvk'
set smtp_url = 'smtps://srvlinux.report@smtp.gmail.com:465'
set smtp_pass = 'objkhaxxwmofspvk'
set folder = 'imaps://imap.gmail.com/'
set spoolfile = '+INBOX'
set postponed = '+[Gmail]/Drafts'
#set record = '+[Gmail]/Sent Mail'
set trash = '+[Gmail]/Trash'"

TEXTAO08="A lista abaixo não necessariamente informa todos os processos configurados!
Esteja atento ao que está instalado no sistema. Mesmo aqueles não instalados aparecerão apenas como 'Parado'.

Samba: Se esse servidor compartilha (via smb) arquivos na rede.
Dominio: Se há um Dominio ativo neste servidor, o Samba (smb) é substituido pelo processo samba-ad-dc.

Apache2: Usado se houver um Nextcloud neste servidor.
Lighttpd: Processo usado pelo PiHole se estiver instalado neste servidor.
PiHole: Processo próprio do PiHole se estiver instalado neste servidor.

DRBD: Essencial se este é um servidor Cluster.
Corosync: Essencial se este é um servidor Cluster.
Pacemaker: Essencial se este é um servidor Cluster.

Spark: Monitor do servidor de banco de dados se houver OpenFire neste servidor.
MySQL: Monitor do servidor de banco de dados se houver MySQL neste servidor.

CUPS: Servidor de impressão em Rede através dos protocolos HTTP ou SMB.
Motion: Processo usado pelo Motion, para monitorar WebCams ou ainda sistemas de CFTV.
DWAgent: Se houver um Acesso Remoto com DWService executando nesta máquina.
VPN Client: Se este Servidor está conectado em uma VPN atuando como cliente."

TEXTAO09="Painel de Ferramentas do Sistema!

SpeedTest: Calcula as velocidades de Download e Upload de uma
conexão á internet existente.

Arp-Scan: Exibe a tabela ARP da rede, mostrando endereços MAC, IP's e nomes
dos computadores descobertos.

WhoIs: É utilizado para identificar o proprietário de site ou domínio caso
este não tenha ocultado seus dados.

TraceRoute: Calcula quantos Hops, saltos, a latência que uma conexão deste
servidor tem até um site especificado.

Governador de CPU: Ver o menu AJUDA dentro desta opção!

Relatórios: Permite enviar por e-mail os resultados dos Menus!

Reiniciar: Se não houver nada que impeça, o sistema será reiniciado.
Desligar: Se não houver nada que impeça, o sistema será desligado."

TEXTAO10="Governadores de CPU são formas como a CPU trabalha para otimizar a performance,
economizar bateria, etc. Num urgência podem ser usados pra esfriar um processador ou melhorar o desempenho geral.

Cada governador possui uma aplicabilidade, dependendo do momento, da necessidade e muitas vezes o padrão em execução
será o ideal para aquele hardware. Os governadores mais comuns com as referidas explicações são:

Conservative: Faz a CPU manter sua frequência no nível mais baixo, porém aumenta a frequência de forma gradual
conforme o necessário.

OnDemand: Faz a CPU manter sua frequência no nível mais baixo e aumenta a frequência para o máximo
conforme a necessidade.

UserSpace: Permite que as aplicações da UserSpace controlem a escala de processamento. Situação Atípica.

PowerSave: Ele mantém o clock mais baixo, não importando o que estiver sendo utilizado.
É o modo de pior desempenho, ideal para economizar baterias e também pode ser usado para esfriar a CPU,
caso o servidor esteja superaquecendo devido a uma carga de trabalho excepcional.

Performance: Faz a CPU manter sua frequência no nível mais alto, mantendo o clock alto mesmo se o
computador não estiver em uso. É o modo de melhor desempenho sem Overclock!

Schedutil: Passa a escala de processamento para o Agendador de Tarefas e as prioridades são definidas de
acordo com a aplicação. Este é o modo que trás o melhor custo-benefício de desempenho e baixo clock.

Um governador aplicado passa a operar imediatamente!"

TEXTAO11="Aqui são exibidas apenas as VMs nos estados Executando ou Parado.
Caso uma VM não apareça na listagem, verifique o real estado da mesma no menu Status Geral!

Status Geral: Exibe a situação real de todas as VMs configuradas no sistema.
Nome da VM + Estado: Permite controlar a VM: reiniciando, desligando ou ligando a mesma.

Ligar Todas as VMs: Inicializará apenas as VMs em estado de -Shut Off- detectadas.
Serão ignoradas todas as demais VMs em quaisquer outros estados.

Desligar Todas as VMs: Desligará apenas as VMs em estado de -running- detectadas.
Serão ignoradas todas as demais VMs em quaisquer outros estados.
Para maiores informações ver AJUDA em Status Geral."

TEXTAO12="Name: Nome da máquina virtual [VM] conforme ela foi registrada no virt-manager

State é a situação em que a VM se encontra. Os States podem ser:

running*: VM executando normalmente.
paused*: VM em estado deliberado de pausa.
idle*: VM em estado de pausa, normalmente por alta carga de I/O e/ou aguardando o 
sistema host voltar a responder.
pmsuspended*: VM suspendida com PowerState S3. 
in shutdown*: VM em processo de desligamento.
shut off: VM desligada normalmente.
crashed: Significa que a VM travou e parou de responder abruptamente por algum erro grave,
seja do próprio sistema virtualizado ou erro de disco do host.

* = Em qualquer um destes estados a VM pode corromper se for desligada abruptamente!"

TEXTAO13="Nome da Máquina: Nome usado na identificação do Servidor.

Versão do SAMBA: Versão atualmente instalada e configurada no sistema.
É substituída em atualizações do sistema quando há correções de segurança.

Nível do Domínio: O nível funcional do domínio representa o quão semelhante o
SAMBA está comparado ao Windows Server. Atualmente os níveis funcionais suportados são:

Nível Funcional - Versão disponível do SAMBA:

Windows Server 2012_R2* - 4.4 e posterior
Windows Server 2012* - 4.4 e posterior
Windows Server 2008_R2 - 4.0 e posterior
Windows Server 2008 - 4.0 e posterior
Windows Server 2003 - 4.0 e posterior

* = Nível funcional não está estável o suficiente.
Caso implementado, melhorias no Kerberos também não serão disponibilizados nesse nível."

################################################################################
#                                                                              #
################################################################################

# Checagem Obrigatória de Dependências:
pkg dialog
pkg curl
pkg lm-sensors
pkg whois
pkg arp-scan
pkg traceroute
pkg libatasmart-bin
pkg mutt

# Início do Sistema:
init
