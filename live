#!/bin/bash

# ============================================================================ #
#########################                                                      #
# Universal Server Menu # ==================================================== #
#########################                                                      #
#                                                           ####################
# ========================================================= # By José Humberto #
#                                                           ####################
# ============================================================================ #

################################################################################
# PAINEL DE CONTROLE ###########################################################

# Versionamento: v1.9.4
# 1.x: Mudanças drásticas, geralmente recursos novos e menus principais.
# x.9: Mudanças pequenas, implementação de novas ferramentas.
# rc-1: Correções de bugs de ferramentas ou menus

# Hashs
hash2="576200e78f0ab25b437dc7372ae920d9"
hash3="9ae7c2a8e120dssssa4915cba5a15e17"

version="v3.0"
revis="r1.1"

################################################################################
################################################################################

# Docs
FILE="/home/$USER/.lockinit"
FILE3="/tmp/.email"
FILE4="/tmp/.relat"

doc_rel="0"
datetime3=$(date +"%m-%Y") # Month

[ -f /home/$USER/.DOC/$datetime3 ] || {
cp "/home/$USER/.DOC/.relat.docx" "/home/$USER/.DOC/$datetime3.docx" 2> /dev/null

TEXTAO14="
Conforme estipulado em contrato mensal de prestação de serviços na área de informática, segue abaixo o relatório de manutenções preventivas e corretivas executados no período de $datetime3:"

echo "$TEXTAO14" >> "/home/$USER/.DOC/$datetime3.docx"
}

# Menu Title
bktitle="USM: Universal Server Menu $version"
report=0; datetime2=0; confrel=0

# SISTEMA Normal
function start {
doc_rel="1" # Relatorio!
datetime=$(date +"%d/%m %H:%M")
uptime=$(uptime | awk {'print $3 $4 $5'})
var1=$(dialog --backtitle "$bktitle" --title 'Menu Principal' --menu "Nome da Máquina: $HOSTNAME
Data e Hora: $datetime
UpTime: $uptime"  0 0 0 \
A 'Status Geral' \
B 'Máquinas Virtuais' \
C 'Processos' \
D 'Ferramentas' \
E 'Avançado' \
F '*Reiniciar' \
G '*Desligar' \
X 'SAIR' 2>&1 > /dev/tty )
[ $? -ne 0 ] && liminal "st4rt1" "start"
case "$var1" in
A) menu01 ;;
B) menu02 ;;
C) menu03 ;;
D) menu05 ;;
E) m10 ;;
F) menu06 ;;
G) menu07 ;;
X) echo "Saindo... Para voltar, digite 'menu'!" && exit ;;
esac
}

# Invertido
function st4rt1 {
datetime=$(date +"%d/%m %H:%M")
uptime=$(uptime | awk {'print $3 $4 $5'})
var1=$(dialog --backtitle "$bktitle" --title 'Menu Principal' --menu "Nome da Máquina: $HOSTNAME
Data e Hora: $datetime
UpTime: $uptime"  0 0 0 \
A 'Status Geral' \
B 'Máquinas Virtuais' \
C 'Processos' \
D 'Ferramentas' \
E '*Reiniciar' \
F '*Desligar' \
X 'SAIR' 2>&1 > /dev/tty )
[ $? -ne 0 ] && liminal "st4rt1" "start"
case "$var1" in
A) m3nu01 ;;
B) menu02 ;;
C) menu03 ;;
D) m3nu05 ;;
E) menu06 ;;
F) menu07 ;;
X) echo "Saindo... Para voltar, digite 'menu'!" && exit ;;
esac
}

function teste {
  dialog --title "TESTES DE FUNCIONALIDADE" --msgbox "AÇÃO ESPERADA: $1" 20 40
}

##########
# STATUS # #------------------------------------------------------------------ #
##########

# Normal
function menu01 {
ip=$(hostname -I | awk '{print $1}')
ip2=$(dig @resolver4.opendns.com myip.opendns.com +short)
var2=$(dialog --title 'Status' --backtitle "$bktitle" --menu "IP Local  : $ip
IP Externo: $ip2" 0 0 0 \
A '*Sistema' \
B '*Temperatura' \
C '*Armazenamento' \
D '*S.M.A.R.T.' \
X 'Voltar' 2>&1 > /dev/tty )
[ $? -ne 0 ] && start
case "$var2" in
A) menu11 ;;
B) menu12 ;;
C) menu13 ;;
D) menu14 ;;
X) start ;;
esac
}

# Invertido
function m3nu01 {
ip=$(hostname -I | awk '{print $1}')
ip2=$(dig @resolver4.opendns.com myip.opendns.com +short)
var2=$(dialog --title 'Status' --backtitle "$bktitle" --menu "IP Local  : $ip
IP Externo: $ip2" 0 0 0 \
A '*Sistema' \
B '*Temperatura' \
C '*Armazenamento' \
X 'Voltar' 2>&1 > /dev/tty )
[ $? -ne 0 ] && liminal "st4rt1" "start"
case "$var2" in
A) menu11 ;;
B) menu12 ;;
C) menu13 ;;
X) liminal "st4rt1" "start" ;;
esac
}

# Status de Sistema
function menu11 {
governor=$(cat /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor || echo "Indisponível!")
bbalance=$(ps aux | grep "btrfs balance start" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
rrsnap=$(ps aux | grep "rsnapshot" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
rsync1=$(ps aux | grep "rsync" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
cp1=$(ps u | grep "cp" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
noip0=$(ps aux | grep "noip2" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado ou Ausente")

[ $(which drbdadm 2>/dev/null) ] && [ $(which virt-manager 2>/dev/null) ] && {
  aswb="sim"
} || {
  aswb="nao"
  }

[ $(which virt-manager 2>/dev/null) ] && {
  aswd="sim"
} || {
  aswd="nao"
  }

[ -d "/sys/firmware/efi/" ] && {
  sysd1=$(systemd-analyze | awk 'NR==1{print $5,$4,$8,$7}')
  sysd2=$(systemd-analyze | awk 'NR==1{print $11,$10,$14,$13}')
  sysd3=$(systemd-analyze | awk 'NR==1{print $15,$16}')
} || {
  sysd1=$(systemd-analyze | awk 'NR==1{print $5,$4,$8,$7}')
  sysd3=$(systemd-analyze | awk 'NR==1{print $9,$10}')
  }

TEXTMAIL="Governador de CPU: $governor

Balance BTRFS: $bbalance
RSnapshot: $rrsnap
RSync: $rsync1
CoPy: $cp1

Tempos de Boot:
$sysd1
$sysd2
Tempo total $sysd3"

dialog --cr-wrap --help-button --help-label 'Ajuda' --title "Informações encontradas" --backtitle "$bktitle" --msgbox "$TEXTMAIL" 0 0
case $? in
  2) dialog --title 'Ajuda com Significados de Status' --msgbox "$TEXTAO01" 0 0 ; menu11 ;;
esac
[ $? -ne 0 ] && liminal "m3nu01" "menu01"

menu08 "$Recado $TEXTMAIL $TEXTAO01 $Mensagem"
liminal "m3nu01" "menu01"
}

# Processos de Sistema
function menu03 {
menu09 smbd && smb1=$prcs
menu09 samba-ad-dc && smb2=$prcs
menu09 apache2 && apache=$prcs
menu09 lighttpd && lighttp=$prcs
menu09 pihole-FTL && pihole=$prcs
menu09 drbd && drbd1=$prcs
menu09 corosync && corosync1=$prcs
menu09 pacemaker && pacemaker1=$prcs
menu09 openfire && spark=$prcs
menu09 mysqld && mysql=$prcs
menu09 cups1 cups && cups1=$prcs
menu09 motion && motion1=$prcs
menu09 dwagent && dwagent1=$prcs
vpn=$(ip a | grep tun 1> /dev/null && echo "Executando" || echo "Parado ou Ausente")

menuxx=$(dialog --ok-label 'Ajustar' --help-button --help-label 'Ajuda' --backtitle "$bktitle" --title 'Processos de Sistema' --menu " "  0 0 0 \
A "Samba      : $smb1"  \
B "Dominio    : $smb2" \
C "Apache2    : $apache" \
D "Lighttpd   : $lighttp" \
E "PiHole     : $pihole" \
F "DRBD       : $drbd1" \
G "Corosync   : $corosync1" \
H "Pacemaker  : $pacemaker1" \
I "Spark      : $spark" \
J "MySQL      : $mysql" \
K "CUPS       : $cups1" \
L "Motion     : $motion1" \
M "DWAgent    : $dwagent1" \
N "VPN Client : $vpn" \
X "Voltar" 2>&1 > /dev/tty )
case $? in
  2) dialog --title 'Ajuda com Significados de Status' --msgbox "$TEXTAO08" 0 0 ; menu03 ;;
esac
[ $? -ne 0 ] && liminal "st4rt1" "start"
case "$menuxx" in
A) status="$smb1"; processname="Samba"; process="smbd"; menu031 ;;
B) status="$smb2"; processname="Dominio"; process="samba-ad-dc"; menu031 ;;
C) status="$apache"; processname="Apache2"; process="apache2"; menu031 ;;
D) status="$lighttp"; processname="Lighttp"; process="lighttp"; menu031 ;;
E) status="$pihole"; processname="PiHole"; process="pihole-FTL"; menu031 ;;
F) dialog --title 'Operação Não Permitida!' --msgbox "Utilize o gerenciamento padrão para lidar com o DRBD" 8 40; menu031 ;;
G) dialog --title 'Operação Não Permitida!' --msgbox "Utilize o gerenciamento padrão para lidar com o Corosync" 8 40; menu031 ;;
H) dialog --title 'Operação Não Permitida!' --msgbox "Utilize o gerenciamento padrão para lidar com o Pacemaker" 8 40; menu031 ;;
I) status="$spark"; processname="Spark"; process="openfire"; menu031 ;;
J) status="$mysql"; processname="MySQL"; process="mysql"; menu031 ;;
K) status="$cups1"; processname="CUPS"; process="cups"; menu031 ;;
L) status="$motion1"; processname="Motion"; process="motion"; menu031 ;;
M) status="$dwagent1"; processname="DWAgent"; process="dwagent"; menu031 ;;
N) status="$vpn"; processname="VPN Client"; process="openvpn"; menu031 ;;
X) liminal "st4rt1" "start" ;;
esac
}

function menu031 {
[ "$status" = "Executando" ] && {
  dialog --title "$processname" --yesno "Deseja reiniciar o processo $processname ?" 6 40
  [ $? = 0 ] && {
    echo "$password" | sudo -S systemctl restart "$process"
    dialog --title "$processname" --msgbox "O processo $processname foi reiniciado!" 6 40
  } || {
    dialog --title "$processname" --yesno "Deseja parar o processo $processname ?" 6 40
    [ $? = 0 ] && {
      echo "$password" | sudo -S systemctl stop "$process"
      dialog --title "$processname" --msgbox "O processo $processname foi parado!" 6 40
      }
  } || {
    menu03
    }
} || {
  dialog --title "$processname" --yesno "Deseja tentar iniciar o processo $processname ?" 6 40
  [ $? = 0 ] && {
    echo "$password" | sudo -S systemctl start "$process"
    dialog --title "$processname" --msgbox "Verifique se o $processname iniciou." 6 40
    }
}

menu03
}

# Status de Processos
function menu09 {
  prcs=$(echo "$password" | sudo -S systemctl is-active --quiet $1 && echo "Executando" || echo "Parado ou Ausente")
}

# Status Temperatura
function menu12 {
sensors0=$(sensors || echo "Indisponível!")
dialog --cr-wrap --help-button --help-label 'Ajuda' --backtitle 'Temperatura, Potencia e Rotação de Cooler(s) [Se disponível!]' --msgbox "$sensors0" 0 0
case $? in
  2) dialog --title 'Ajuda com Significados de Status' --msgbox "$TEXTAO02" 0 0 ; menu12 ;;
esac
[ $? -ne 0 ] && liminal "m3nu01" "menu01"
[ "$sensors1" = "Indisponível!" ] && {
  dialog --title "Erro ao emitir relatório" --msgbox "Sistema incompatível!" 0 0
} || {
  menu08 "$Recado $sensors0 $TEXTAO02 $Mensagem"
  }

liminal "m3nu01" "menu01"
}

# Status de Consumo dos Discos
function menu13 {
sdisks=$(df -Th)
dialog --cr-wrap --help-button --help-label 'Ajuda' --title "Discos encontrados" --backtitle "Status do Armazenamento" --msgbox "$sdisks" 0 0
case $? in
  2) dialog --title 'Ajuda' --msgbox "$TEXTAO03" 0 0; menu13 ;;
esac
[ $? -ne 0 ] && liminal "m3nu01" "menu01"

menu08 "$Recado $sdisks $TEXTAO03 $Mensagem"
liminal "m3nu01" "menu01"
}

# LibATASmart-bin!
function menu14 {
menu140 "sda" && dump1=$skd && dumpst1=$stssd
menu140 "sdb" && dump2=$skd && dumpst2=$stssd
menu140 "sdc" && dump3=$skd && dumpst3=$stssd
menu140 "sdd" && dump4=$skd && dumpst4=$stssd
menu140 "sde" && dump5=$skd && dumpst5=$stssd
menu140 "sdf" && dump6=$skd && dumpst6=$stssd
menu140 "sdg" && dump7=$skd && dumpst7=$stssd
menu140 "sdh" && dump8=$skd && dumpst8=$stssd
menu140 "sdi" && dump9=$skd && dumpst9=$stssd
menusk=$(dialog --help-button --help-label 'Ajuda' --backtitle "Análise de Atributos SMART!" --title "S.M.A.R.T." --menu ""  0 0 0 \
"/dev/sda" "$dumpst1" \
"/dev/sdb" "$dumpst2" \
"/dev/sdc" "$dumpst3" \
"/dev/sdd" "$dumpst4" \
"/dev/sde" "$dumpst5" \
"/dev/sdf" "$dumpst6" \
"/dev/sdg" "$dumpst7" \
"/dev/sdh" "$dumpst8" \
"/dev/sdi" "$dumpst9" \
"X Voltar" "" 2>&1 > /dev/tty )
case $? in
  2) dialog --title "Definições de SMART!" --msgbox "$TEXTAO04" 0 0 ; menu14 ;;
esac
[ $? -ne 0 ] && {start}
case "$menusk" in
"/dev/sda") menu141 "sda" "$dump1" ; menu14 ;;
"/dev/sdb") menu141 "sdb" "$dump2" ; menu14 ;;
"/dev/sdc") menu141 "sdc" "$dump3" ; menu14 ;;
"/dev/sdd") menu141 "sdd" "$dump4" ; menu14 ;;
"/dev/sde") menu141 "sde" "$dump5" ; menu14 ;;
"/dev/sdf") menu141 "sdf" "$dump6" ; menu14 ;;
"/dev/sdg") menu141 "sdg" "$dump7" ; menu14 ;;
"/dev/sdh") menu141 "sdh" "$dump8" ; menu14 ;;
"/dev/sdi") menu141 "sdi" "$dump9" ; menu14 ;;
"X Voltar") menu01 ;;
esac
}

function menu140 {
stssd=$(ls /dev/$1 1> /dev/null 2> /dev/null && echo "Presente" || echo "Ausente")
[ "$stssd" = "Presente" ] && {
  skd=$(echo "$password" | sudo -S skdump /dev/$1 | grep -A40 -P 'ID#' | awk '{print $1,$2,$6}')
} || {
  skd=$(echo "Disco ausente!")
  }
}

function menu141 {
dialog --cr-wrap --backtitle /dev/$1 --msgbox "$2" 0 0

menu08 "$Recado $2 $TEXTAO04 $Mensagem"
menu14
}

function menu17 {
var2=$(dialog --title 'UDPCast' --backtitle "$bktitle" --menu "Escolha o modo!" 0 0 0 \
A 'Cliente' \
B 'Servidor' \
X 'Voltar' 2>&1 > /dev/tty )
[ $? -ne 0 ] && {start}
case "$var2" in
A) echo "Modo Cliente. Para sair, precione CTRL + C!" ; udp-receiver --file=/dev/null ;;
B) echo "Modo Servidor. Para sair, precione CTRL + C!" ; udp-sender --file=/dev/zero ;;
X) m10 ;;
esac
}

function menu21 {
resultenp=$(ip a | sed -n '/enp/p' |  awk '!/mac/' | awk '{print $2}' | sed 's/.$//' | grep 'enp')
for i in $resultenp; do
  velo=$(echo "$password" | sudo -S ethtool "$i" | grep Speed)
  dialog --title 'Velocidades detectadas:' --msgbox "$i $velo" 8 40
done

liminal "m3nu05" "menu05"
}

function ping1 {
  ping -c 1 "$1" | awk 'NR==2{print $7,$8}'
}

function gauge1 {
  echo  "$1" | dialog --title "Testando Ping..." --gauge "Aguarde a conclusão!" 8 40
}

function menu22 {
Google_P=$(ping1 "8.8.4.4")
gauge1 "8"
Google_S=$(ping1 "8.8.8.8")
gauge1 "14"
OpenDNS_P=$(ping1 "208.67.222.222")
gauge1 "19"
OpenDNS_S=$(ping1 "208.67.220.220")
gauge1 "22"
Level3_P=$(ping1 "4.2.2.1")
gauge1 "24"
Level3_S=$(ping1 "4.2.2.2")
gauge1 "28"
Comodo_P=$(ping1 "8.26.56.26")
gauge1 "32"
Comodo_S=$(ping1 "8.20.247.20")
gauge1 "36"
DNSWATCH_P=$(ping1 "84.200.69.80")
gauge1 "42"
DNSWATCH_S=$(ping1 "84.200.70.40")
gauge1 "46"
Quad9_P=$(ping1 "9.9.9.9")
gauge1 "50"
Quad9_S=$(ping1 "149.112.112.112")
gauge1 "57"
Cloudflare_P=$(ping1 "1.1.1.1")
gauge1 "67"
Cloudflare_S=$(ping1 "1.0.0.1")
gauge1 "74"
Algar_P=$(ping1 "200.225.197.34")
gauge1 "79"
Algar_S=$(ping1 "200.225.197.37")
gauge1 "85"
GIGA_P=$(ping1 "189.38.95.95")
gauge1 "96"
GIGA_S=$(ping1 "189.38.95.96")
gauge1 "100"

TEXTAO14="Google 8.8.4.4: $Google_P
Google 8.8.8.8: $Google_S
OpenDNS 208.67.222.222: $OpenDNS_P
OpenDNS 208.67.220.220: $OpenDNS_S
Level3 4.2.2.1: $Level3_P
Level3 4.2.2.2: $Level3_S
Comodo 8.26.56.26: $Comodo_P
Comodo 8.20.247.20: $Comodo_S
DNSWATCH 84.200.69.80: $DNSWATCH_P
DNSWATCH 84.200.70.40: $DNSWATCH_S
Quad9 9.9.9.9: $Quad9_P
Quad9 149.112.112.112: $Quad9_S
Cloudflare 1.1.1.1: $Cloudflare_P
Cloudflare 1.0.0.1: $Cloudflare_S
Algar 200.225.197.34: $Algar_P
Algar 200.225.197.37: $Algar_S
GigaDNS 189.38.95.95: $GIGA_P
GigaDNS 189.38.95.96: $GIGA_S"

dialog --title 'Resultados do Ping:' --msgbox "$TEXTAO14" 0 0

menu08 "$Recado $TEXTAO14 $Mensagem"
liminal "st4rt1" "start"
}

function menu23 {
ipneigh1=$(ip neigh)
dialog --title 'IP Neigh' --msgbox "$ipneigh1" 0 0
menu08 "$Recado $ipneigh1 $Mensagem"
liminal "m3nu05" "menu05"
}

# Ferramentas Normal
 #xorg=$(ls /tmp/.X11-unix | wc -l)
function menu05 {
var6=$(dialog --help-button --help-label 'Ajuda' --title 'Ferramentas' --backtitle "$bktitle" --menu " " 0 0 0 \
A 'Placas de Rede' \
B '*Speed Test' \
C '*Arp-Scan' \
D '*IP Neigh' \
E '*Who Is' \
F '*Trace Route' \
G 'Iniciar Navegador' \
H '*Ping DNS' \
I 'Definir Relatórios' \
J 'Relatórios Salvos' \
X 'Voltar' 2>&1 > /dev/tty )
case $? in
  2) dialog --title 'Ajuda' --msgbox "$TEXTAO09" 0 0 ; liminal "m3nu05" "menu05" ;;
esac
[ $? -ne 0 ] && liminal "st4rt1" "start"
case "$var6" in
A) menu21 ;;
B) menu050 ;;
C) menu0501 ;;
D) menu23 ;;
E) menu051 ;;
F) menu052 ;;
G) [ "$DISPLAY" = "localhost:10.0" ] && { xinit epiphany-browser $* -- :100 vt$XDG_VTNR;} || { epiphany-browser;} ; menu05 ;;
H) menu22 ;;
I) menu054 ;;
J) menu055 ;;
X) liminal "st4rt1" "start" ;;
esac
}

# Ferramentas Invertido
function m3nu05 {
var6=$(dialog --help-button --help-label 'Ajuda' --title 'Ferramentas' --backtitle "$bktitle" --menu " " 0 0 0 \
A 'Placas de Rede' \
B '*Speed Test' \
C '*Arp-Scan' \
D '*Trace Route' \
E 'Definir Relatórios' \
F 'Relatórios Salvos' \
X 'Voltar' 2>&1 > /dev/tty )
case $? in
  2) dialog --title 'Ajuda' --msgbox "$TEXTAO09" 0 0 ; liminal "m3nu05" "menu05" ;;
esac
[ $? -ne 0 ] && liminal "st4rt1" "start"
case "$var6" in
A) menu21 ;;
B) menu050 ;;
C) menu0501 ;;
D) menu052 ;;
E) menu054 ;;
F) menu055 ;;
X) liminal "st4rt1" "start" ;;
esac
}

# SpeedTest
function menu050 {
dialog --title 'SpeedTest' --backtitle "$bktitle" --msgbox "Pressione Enter para iniciar o teste e aguarde!" 0 0
speedy=$(curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python3 -)
dialog --title 'SpeedTest' --backtitle "$bktitle" --msgbox "$speedy" 0 0
menu08 "$Recado $speedy $Mensagem"
liminal "m3nu05" "menu05"
}

# Arp-Scan
function menu0501 {
dialog --title 'Arp-Scan' --backtitle "$bktitle" --msgbox "Pressione Enter para iniciar o teste e aguarde!" 0 0
arpscn=$(echo "$password" | sudo -S arp-scan -l)
dialog --title 'Arp-Scan' --backtitle "$bktitle" --msgbox "$arpscn" 0 0
menu08 "$Recado $arpscn $Mensagem"
liminal "m3nu05" "menu05"
}

#WhoIS
function menu051 {
site=$(dialog --title 'WhoIs' --backtitle "$bktitle" --inputbox "Digite o site que deseja localizar informações. Use o seguinte modelo: exemplo.com.br" 10 40 2>&1 > /dev/tty)
dialog --title "WhoIs" --msgbox "Pressione Enter para iniciar o teste e aguarde!" 0 0
wis=$(whois "$site")
dialog --title "WhoIs" --msgbox "$wis" 0 0
menu08 "$Recado $wis $Mensagem"
liminal "m3nu05" "menu05"
}

# Traceroute
function menu052 {
site=$(dialog --title 'TraceRoute' --backtitle "Identificador de hops/saltos que um computador efetua até acessar um site especificado." --inputbox "Digite o site que deseja analisar os Saltos. Use o seguinte modelo: \n
exemplo.com.br \n
A identificação estará concluída quando um (END) surgir no final." 14 40 2>&1 > /dev/tty)
dialog --title "Traceroute" --msgbox "Pressione Enter para iniciar o teste e aguarde!" 0 0
trot=$(traceroute "$site")
dialog --title "Traceroute" --msgbox "$trot" 0 0
menu08 "$Recado $trot $Mensagem"
liminal "m3nu05" "menu05"
}

# Governador de CPU
function menu053 {
governor1=$(cat /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor || echo "Indisponível!")
governor2=$(cat /sys/devices/system/cpu/cpu1/cpufreq/scaling_available_governors || echo "Indisponível!")
var3=$(dialog --help-button --help-label 'Ajuda' --title 'Governador de CPU' --backtitle "$bktitle" --menu "Governador de CPU Atual: \n
$governor1" 0 0 0 \
A 'Conservative' \
B 'OnDemand' \
C 'UserSpace' \
D 'PowerSave' \
E 'Performance' \
F 'Schedutil' \
X 'Voltar' 2>&1 > /dev/tty )
case $? in
  2) dialog --title 'Ajuda' --msgbox "$TEXTAO10" 0 0 ; menu053 ;;
esac
[ $? -ne 0 ] && liminal "m3nu05" "menu05"
case "$var3" in
A) menu10 conservative ;;
B) menu10 ondemand ;;
C) menu10 userspace ;;
D) menu10 powersave ;;
E) menu10 performance ;;
F) menu10 schedutil ;;
X) m10 ;;
esac
}

# Governador de CPU 2
function menu10 {
governor2=$(cat /sys/devices/system/cpu/cpu1/cpufreq/scaling_available_governors)
govr=$(echo "$password" | sudo -S echo $1 | sudo -S tee /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor 2> /dev/null 1> /dev/null && echo "si" || echo "no")
[ "$govr" = "si" ] && {
  dialog --cr-wrap --title "Bem sucedido!" --backtitle "$bktitle" --msgbox "Governador trocado com sucesso!" 0 0 ; menu053
} || {
  dialog --cr-wrap --title "ERRO" --backtitle "$bktitle" --msgbox "Seu sistema não suporta o governador escolhido. Detectamos estes governadores abaixo como suportados: \n \n
> $governor2 < \n \n
Mais informações em AJUDA!" 0 0 ; menu053
  }

}

function menu054 {
pong=$(ping google.com -c 1 1> /dev/null 2> /dev/null && echo "ok" || echo "notok")
[ "$pong" = "notok" ] && {
  dialog --cr-wrap --title "Erro na Rede" --backtitle "$bktitle" --msgbox "O sistema não pode se comunicar com a rede local! Verifique sua conexão e tente novamente mais tarde." 8 40
  liminal "st4rt1" "start"
} || {
  [ "$report" = "0" ] && {
    dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Deseja habilitar a emissão de relatórios?" 8 40
    [ $? = 0 ] && {
      [ -f "$FILE3" ] && {
        report="1"
        validmail=$(awk 'NR==1' $FILE3)
        dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Deseja reutilizar este(s) e-mail(s) anteriormente utilizado(s) para emissão de relatórios? \n \n
$validmail" 15 40
          [ $? = 0 ] && {
            dialog --cr-wrap --title "Informação" --backtitle "$bktitle" --msgbox "Os relatórios somente funcionam nos menus com *!" 0 0
          } || {
            validmail=$(dialog --title "Inserir Destinatário" --backtitle "$bktitle" --inputbox "Insira o e-mail para o qual deseja enviar os relatórios gerados! \n \n
Pode ser mais de um, bastando separá-los com vírgula e espaço. Exemplo: user@mail.com, user2@mail.com" 15 40 2>&1 > /dev/tty)
             [ -z "$validmail" ] && {
              dialog --cr-wrap --title "Erro no E-mail!" --backtitle "$bktitle" --msgbox "Digite um e-mail válido!" 0 0
             } || {
              echo "$validmail" > "/tmp/.email"
              report="1"
              dialog --cr-wrap --title "Informação" --backtitle "$bktitle" --msgbox "Os relatórios somente funcionam nos items com *!" 0 0
              }
          }
      } || {
        validmail=$(dialog --title "Inserir Destinatário" --backtitle "$bktitle" --inputbox "Insira o e-mail para o qual deseja enviar os relatórios gerados! \n \n
Pode ser mais de um, bastando separá-los com vírgula e espaço. Exemplo: user@mail.com, user2@mail.com" 15 40 2>&1 > /dev/tty)
        [ -z "$validmail" ] && {
          dialog --cr-wrap --title "Erro no E-mail!" --backtitle "$bktitle" --msgbox "Digite um e-mail válido!" 0 0
        } || {
          echo "$validmail" > "/tmp/.email"
          report="1"
          dialog --cr-wrap --title "Informação" --backtitle "$bktitle" --msgbox "Os relatórios somente funcionam nos items com *!" 0 0
          }
      }      
    } || {
      echo "a" > /dev/null
      }
  } || {
    dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Deseja trocar o e-mail de emissão de relatórios?" 8 40
    [ $? = 0 ] && {
      validmail=$(dialog --title " " --backtitle "$bktitle" --inputbox "Insira o e-mail para o qual deseja enviar os relatórios gerados!" 9 40 2>&1 > /dev/tty)
      echo "$validmail" > "/tmp/.email"
      dialog --cr-wrap --title "Informação" --backtitle "$bktitle" --msgbox "Os relatórios somente funcionam nos items com *!" 0 0
    } || {
      dialog --title "Confirmação" --backtitle "$bktitle" --yesno "Deseja desativar a emissão de relatórios?" 8 40
      [ $? = 0 ] && {
        report="0"
      } || {
        echo "a" > /dev/null
        }
    }
  }
}

liminal "st4rt1" "start"
}

function menu055 {
[ "$report" = "0" ] && {
  dialog --cr-wrap --title "Informação" --backtitle "$bktitle" --msgbox "Relatórios desativados!" 0 0
} || {
  [ -f "$FILE4" ] && {
    validrelat=$(cat "$FILE4")
    dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Um relatório salvo foi encontrado. \n \n
$validrelat \n \n
Deseja enviá-lo por e-mail?" 20 70
    [ $? = 0 ] && {
      menu08 "$validrelat"
      dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Deseja apagar o relatório salvo?" 8 20
      [ $? = 0 ] && {
        dialog --cr-wrap --title "Informação" --backtitle "$bktitle" --msgbox "O relatório salvo foi apagado!" 0 0
        rm "$FILE4"
      } || {
        echo "a" > /dev/null
        }
    } || {
      dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Deseja apagar o relatório salvo?" 8 20
      [ $? = 0 ] && {
        dialog --cr-wrap --title "Informação" --backtitle "$bktitle" --msgbox "O relatório salvo foi apagado!" 0 0
        rm "$FILE4"
        }
      }
  } || {
    dialog --cr-wrap --title "Informação" --backtitle "$bktitle" --msgbox "Nenhum relatório salvo foi encontrado!" 0 0
    }
}

liminal "m3nu05" "menu05"
}

# Máquinas Virtuais
function menu02 {
[ $(which virt-manager 2>/dev/null) ] && {
  menu022 "1p" && vm1=$vms && vm11=$sts
  menu022 "2p" && vm2=$vms && vm12=$sts
  menu022 "3p" && vm3=$vms && vm13=$sts
  menu022 "4p" && vm4=$vms && vm14=$sts
  menu022 "5p" && vm5=$vms && vm15=$sts
  menu022 "6p" && vm6=$vms && vm16=$sts
  menu022 "7p" && vm7=$vms && vm17=$sts
  menu022 "8p" && vm8=$vms && vm18=$sts
  menu022 "9p" && vm9=$vms && vm19=$sts
  menu022 "10p" && vm10=$vms && vm110=$sts
  menuxy=$(dialog --ok-label 'Ajustar' --help-button --help-label 'Ajuda' --backtitle "Bem-Vindo ao Gestor de Máquinas Virtuais!" --title "Gestão de VMs" --menu "Gestão de Máquinas Virtuais"  0 0 0 \
  Status "Geral" \
  "$vm1" "$vm11" \
  "$vm2" "$vm12" \
  "$vm3" "$vm13" \
  "$vm4" "$vm14" \
  "$vm5" "$vm15" \
  "$vm6" "$vm16" \
  "$vm7" "$vm17" \
  "$vm8" "$vm18" \
  "$vm9" "$vm19" \
  "$vm10" "$vm110" \
  Iniciar "Todas!" \
  Parar "Todas!" \
  "X Voltar" "" 2>&1 > /dev/tty )
  case $? in
    2) dialog --title "Ajuda" --msgbox "$TEXTAO11" 0 0 ; menu02 ;;
  esac
  [ $? -ne 0 ] && liminal "st4rt1" "start"
  case "$menuxy" in
  Status) menu025 ;;
  "$vm1") chkvm="$vm11"; nmvm="$vm1"; menu021 ;;
  "$vm2") chkvm="$vm12"; nmvm="$vm2"; menu021 ;;
  "$vm3") chkvm="$vm13"; nmvm="$vm3"; menu021 ;;
  "$vm4") chkvm="$vm14"; nmvm="$vm4"; menu021 ;;
  "$vm5") chkvm="$vm15"; nmvm="$vm5"; menu021 ;;
  "$vm6") chkvm="$vm16"; nmvm="$vm6"; menu021 ;;
  "$vm7") chkvm="$vm17"; nmvm="$vm7"; menu021 ;;
  "$vm8") chkvm="$vm18"; nmvm="$vm8"; menu021 ;;
  "$vm9") chkvm="$vm19"; nmvm="$vm9"; menu021 ;;
  "$vm10") chkvm="$vm110"; nmvm="$vm10"; menu021 ;;
  Iniciar) menu023 ;;
  Parar) menu024 ;;
  "X Voltar") liminal "st4rt1" "start" ;;
  esac
} || {
  dialog --cr-wrap --title 'ERRO DETECTADO' --backtitle "$bktitle" --msgbox "O VirtManager não foi encontrado neste sistema ou você não possui as permissões para acessá-lo!" 7 50
  liminal "st4rt1" "start"
}

}

function menu021 {
[ "$chkvm" = "Executando" ] && {
  dialog --title "$nmvm" --yesno "Deseja reiniciar a VM $nmvm?" 6 40
  [ $? = 0 ] && {
    virsh reboot "$nmvm"
    dialog --title "$nmvm" --msgbox "A VM $nmvm foi reiniciada!" 6 40
  } || {
    dialog --title "$nmvm" --yesno "Deseja desligar a VM $nmvm?" 6 40
    [ $? = 0 ] && {
      virsh shutdown "$nmvm"
      dialog --title "$nmvm" --msgbox "A VM $nmvm foi desligada!" 6 40
    } || {
      dialog --title "$nmvm" --yesno "Deseja desligar FORÇADAMENTE a VM $nmvm?" 6 40
      [ $? = 0 ] && {
        virsh destroy "$nmvm"
        dialog --title "$nmvm" --msgbox "A VM $nmvm foi desligada de forma forçada!" 6 40
      } || {
        echo "a" > /dev/null
        }
    }
  }
} || {
  [ "$chkvm" = "- - -" ] && {
    dialog --title "$nmvm" --msgbox "A VM $nmvm não existe!" 6 40
  } || {
    [ "$chkvm" = "Parado" ] && {
      dialog --title "$nmvm" --yesno "Deseja tentar ligar a VM $nmvm?" 6 40
      [ $? = 0 ] && {
        virsh start "$nmvm"
        dialog --title "$nmvm" --msgbox "Verifique se a VM $nmvm iniciou!" 6 40
      } || {
        echo "a" > /dev/null
        }
    }
  }
}

menu02
}

# Status das VMs
function menu022 {
vms=$(virsh list | grep running | sed -n "$1" | awk '{print $2}')
[ "$vms" = "" ] && {
  vms=$(virsh list --all | grep "shut off" | sed -n "$1" | awk '{print $2}')
  sts=$(echo "Parado")
  [ "$vms" = "" ] && {
    vms=$(echo "- - -")
    sts=$(echo "- - -")
  } || {
    echo " " > /dev/null
    }
} || {
  sts=$(echo "Executando")
  }

}

function menu023 {
dialog --title 'Confirmação' --backtitle 'Confirmação de Início de Todas as VMs!' --yesno "Deseja inicializar todas as VMs?" 0 0
[ $? -ne 0 ] && menu02

[ $? = 0 ] && {
  for i in $(virsh list --all | grep "shut off" | awk '{print $2}')
  do
    virsh start $i
    dialog --title 'Status:' --msgbox "VM $i Iniciada!" 0 0
  done
} || {
  echo "a" > /dev/null
  }

menu02
}

function menu024 {
dialog --title 'Confirmação' --backtitle 'Confirmação de Desligamento de Todas as VMs!' --yesno "Deseja desligar todas as VMs?" 0 0
[ $? -ne 0 ] && menu02

[ $? = 0 ] && {
  for i in $(virsh list | grep running | awk '{print $2}')
  do
    virsh shutdown $i
    dialog --title 'Status:' --msgbox "VM $1 desligada!" 0 0
  done
} || {
  echo "a" > /dev/null
  }

menu02
}

# Status de Máquinas Virtuais
function menu025 {
virtmgr0=$(virsh list --all)
dialog --cr-wrap --help-button --help-label 'Ajuda' --title "Maquinas Virtuais encontradas:" --backtitle "$bktitle" --msgbox "$virtmgr0" 0 0
case $? in
  2) dialog --title 'Ajuda' --msgbox "$TEXTAO12" 0 0 ; menu025 ;;
esac
[ $? -ne 0 ] && liminal "st4rt1" "start"

menu02
}

# Reinicio
function menu06 {
bbalance=$(ps aux | grep "btrfs balance start" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
rrsnap=$(ps aux | grep "rsnapshot" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
rsync1=$(ps aux | grep "rsync" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
cp1=$(ps u | grep "cp" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
datetime=$(date +"%d/%m %H:%M")
[ "$bbalance" = "Executando" ] || [ "$rrsnap" = "Executando" ] || [ "$rsync1" = "Executando" ] || [ "$cp1" = "Executando" ] && {
  dialog --cr-wrap --title 'ERRO AO REINICIAR' --backtitle "$bktitle" --msgbox "Reinício bloqueado! \n
Favor verificar o Status do Sistema ou tente novamente mais tarde." 0 0
} || {
  dialog --title 'Reiniciar' --backtitle "$bktitle" --yesno 'Deseja reiniciar este sistema?' 0 0
  [ $? = 0 ] && {
    [ "$report" = "1" ] && {
      dialog --title 'Relatório' --yesno "Deseja enviar um relatório por e-mail sobre este reinício?" 8 40
      [ $? = 0 ] && {
        menu08 "$Recado $Recado5 $datetime $Mensagem"
      } || {
        echo "a" > /dev/null
        }
    }
  echo "$password" | sudo -S reboot
  }
}

liminal "st4rt1" "start"
}

# Desligamento
function menu07 {
rrsnap=$(ps aux | grep "rsnapshot" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
rsync1=$(ps aux | grep "rsync" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
bbalance=$(ps aux | grep "btrfs balance start" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
cp1=$(ps u | grep "cp" | grep -v grep 1> /dev/null && echo "Executando" || echo "Parado")
datetime=$(date +"%d/%m %H:%M")
[ "$bbalance" = "Executando" ] || [ "$rrsnap" = "Executando" ] || [ "$rsync1" = "Executando" ] || [ "$cp1" = "Executando" ] && {
  dialog --cr-wrap --title 'ERRO AO DESLIGAR' --backtitle 'ERRO AO TENTAR DESLIGAR.' --msgbox "Desligamento bloqueado! \n
Favor verificar o Status do Sistema ou tente novamente mais tarde." 0 0
} || {
  dialog --title 'Desligar' --backtitle 'D E S L I G A R' --yesno 'Deseja desligar este sistema?' 0 0
  [ $? = 0 ] && {
    [ "$report" = "1" ] && {
      dialog --title 'Relatório' --yesno "Deseja enviar um relatório por e-mail sobre este desligamento?" 8 40
      [ $? = 0 ] && {
        menu08 "$Recado $Recado6 $datetime $Mensagem"
      } || {
        echo "a" > /dev/null
        }
    }
  echo "$password" | sudo -S shutdown -h now
  }
}

liminal "st4rt1" "start"
}

# Encaminhar relatórios por Email!
function menu08 {
echo "$1" > "/tmp/.relat"
[ "$report" = "0" ] && {
  [ "$confrel" = "0" ] && {
    dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Os relatórios não estão ativos. Deseja reativá-los temporariamente?" 8 40
    [ $? = 0 ] && {
      [ -f "$FILE3" ] && {
        validmail=$(awk 'NR==1' $FILE3)
        dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Deseja reutilizar este(s) e-mail(s) anteriormente utilizado(s) para emissão de relatórios? \n \n
$validmail" 15 40
        [ $? = 0 ] && {         
          echo "$1" | mutt -s "Relatório - $HOSTNAME" "$validmail"
          dialog --title "Relatório" --msgbox "Relatório enviado com sucesso!" 6 40
        } || {
          dialog --title "Relatório" --msgbox "O atual relatório foi salvo! \n
Utilize o menu 'Ferramentas > Relatórios' para trocar o destinatário. \n \n
Depois vá em 'Ferramentas > Relatórios Salvos' tentar reenviar este relatório por e-mail." 20 50
          report="1"
        }
      } || {  
        dialog --title "Relatório" --msgbox "O atual relatório foi salvo! Utilize o menu 'Ferramentas > Relatórios' para trocar o destinatário. \n \n
Depois vá em 'Ferramentas > Relatórios Salvos' tentar reenviar este relatório por e-mail." 20 50
        report="1"
        }
    } || {
      confrel="1"
      }
  } || {
    echo "a" > /dev/null
    }
} || {
  validmail=$(awk 'NR==1' $FILE3)
  dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Deseja enviar este relatório para $validmail?" 8 40
  [ $? = 0 ] && {
    echo "$1" | mutt -s "Relatório - $HOSTNAME" "$validmail"
    dialog --title "Relatório" --msgbox "Relatório enviado com sucesso!" 6 40
  } || {
    echo "a" > /dev/null
    }
}

}

################################################################################
#                                                                              #
################################################################################

# Controlador de Dominio
function menu04 {
  liminal "st4rt1" "start"
}

################################################################################
#                                                                              #
################################################################################

function m1x {
dialog --title 'F.F.A.' --msgbox "Ferramentas e Funções Avançadas" 0 0
password3=$(dialog --backtitle "F.F.A.: Ferramentas e Funções Avançadas" --title 'Acesso Restrito' --insecure --passwordbox 'Digite a senha' 0 0 2>&1 > /dev/tty)

[ "$password3" = "1345278" ] && {
  dialog --title 'Porteiro:' --msgbox "Clift Claft Still, a Porta se Abriu!" 6 40
  m10
} || {
  dialog --title 'Acesso Proibido' --msgbox "Permissão Incorreta" 0 0
  }

}

function m10 {
var10=$(dialog --backtitle "Ferramentas e Funções Avançadas - Utilize com Moderação" --title 'Atenção' --menu "Funções Avançadas" 0 0 0 \
A 'Governador de CPU' \
B 'Parar Backup' \
C 'UDP-Cast' \
D 'Emitir .docx' \
E 'Encaminhar .docx' \
F 'Apagar .docx' \
X 'Voltar' 2>&1 > /dev/tty )
[ $? -ne 0 ] && liminal "st4rt1" "start"
case "$var10" in
A) menu053 ;;
B) m122 ;;
C) menu17 ;;
D) menu28 ;;
E) menu29 ;;
F) menu30 ;;
X) liminal "st4rt1" "start" ;;
esac
}

function m122 {
var_stop=$(dialog --backtitle "Ferramentas e Funções Avançadas - Utilize com Moderação" --title 'Atenção' --menu "Funções Avançadas" 0 0 0 \
A 'Parar RSYNC' \
B 'Parar RSNAPSHOT' \
C 'Parar BALANCE' \
D 'Parar COPY' \
X 'Voltar' 2>&1 > /dev/tty )
[ $? -ne 0 ] && liminal "st4rt1" "start"
case "$var_stop" in
A) m12 ;;
B) m13 ;;
C) m14 ;;
D) m15 ;;
X) m10 ;;
esac
}

function m12 {
dialog --backtitle "Ferramentas e Funções Avançadas - Utilize com Moderação" --title 'Informação' --yesno "Deseja parar o processo RSYNC?" 8 40
[ $? = 0 ] && {
  dialog --backtitle "Ferramentas e Funções Avançadas - Utilize com Moderação" --title 'Informação' --yesno "Tem certeza? Backups poderão não ser completados ou até corromper!" 8 40
  [ $? = 0 ] && {
    echo "$password" | sudo -S killall rsync
    dialog --title "ATENÇÃO" --msgbox "Verifique se seus backups estão íntegros." 8 40
  } || {
    echo "a" > /dev/null
    }
} || {
  echo "a" > /dev/null
  }

m122
}

function m13 {
dialog --backtitle "Ferramentas e Funções Avançadas - Utilize com Moderação" --title 'Informação' --yesno "Deseja parar o processo RSNAPSHOT?" 8 40
[ $? = 0 ] && {
  dialog --backtitle "Ferramentas e Funções Avançadas - Utilize com Moderação" --title 'Informação' --yesno "Tem certeza? Backups poderão não ser completados ou até corromper!" 8 40
  [ $? = 0 ] && {
    echo "$password" | sudo -S killall rsnapshot
    dialog --title "ATENÇÃO" --msgbox "Verifique se seus backups estão íntegros." 8 40
  } || {
    echo "a" > /dev/null
    }
} || {
  echo "a" > /dev/null
  }

m122
}

function m14 { 
blnc=$(dialog --title 'Balance' --backtitle "Parar Balance em $HOSTNAME" --inputbox "Insira o caminho:" 0 0 2>&1 > /dev/tty)
[ $? -ne 0 ] && m10
[ -z "$blnc" ] && {
  dialog --backtitle "Ferramentas e Funções Avançadas - Utilize com Moderação" --title "ERRO" --msgbox "Caminho não pode ficar em branco!" 8 40
} || {
  dialog --backtitle "Ferramentas e Funções Avançadas - Utilize com Moderação" --title 'Balance' --backtitle "Parar Balance em $HOSTNAME" --yesno "Tem certeza que deseja parar o Balance em $blnc?" 8 40
  [ $? = 0 ] && {
    echo "$password" | sudo -S btrfs balance cancel "$blnc"
  } || {
    echo "a" > /dev/null
    }
}

m122
}

function m15 {
dialog --backtitle "Ferramentas e Funções Avançadas - Utilize com Moderação" --title 'Informação' --yesno "Deseja parar o processo CoPy?" 8 40
[ $? = 0 ] && {
  dialog --backtitle "Ferramentas e Funções Avançadas - Utilize com Moderação" --title 'Informação' --yesno "Tem certeza? Backups poderão não ser completados ou até corromper!" 8 40
  [ $? = 0 ] && {
    echo "$password" | sudo -S killall cp
    dialog --title "ATENÇÃO" --msgbox "Verifique se seus backups estão íntegros." 8 40
  } || {
    echo "a" > /dev/null
    }
} || {
  echo "a" > /dev/null
  }

m122
}

function liminal { [ -f "$FILE" ] && { [ "$hash1" = "$hash2" ] || [ "$hash1" = "$hash3" ] && { $2; } || { $1; }; } || { $2; }; }

function menu27 {
[ -f "/home/$USER/.DOC/.relat.docx" ] && {
  [ "$doc_rel"="1" ] && {
    dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Deseja enviar o relatório para $datetime3.docx?" 8 40
    [ $? = 0 ] && {
        echo "$1" >> "/home/$USER/.DOC/$datetime3.docx"
        }
      } || {
        m10
      }
  } || {
    dialog --title 'relat.docx' --msgbox "Arquivo não encontrado. Abortando." 8 30
    m10
    }
}

function menu28 {
[ -f "/home/$USER/.DOC/.relat.docx" ] && {
  [ "$doc_rel"="1" ] && {
    datetime=$(date +"%d/%m %H:%M")
    dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Deseja criar um relatório customizado?" 8 40
    [ $? = 0 ] && {
        cusrelat=$(dialog --title 'Custom' --backtitle "$bktitle" --inputbox "O que deseja reportar?" 8 40 "$datetime : " 2>&1 > /dev/tty)
        menu08 "$Recado $cusrelat $Mensagem"
        menu27 "
$cusrelat"
        m10
        }
    } || {
      m10
     }
  } || {
    dialog --title 'relat.docx' --msgbox "Arquivo não encontrado. Abortando." 8 30
    m10
    }
}

function menu29 {
[ -f "/home/$USER/.DOC/.relat.docx" ] && {
  datetime=$(date +"%d/%m %H:%M")
  validmail=$(awk 'NR==1' $FILE3)

  TEXTAO15="Boa tarde,

Segue anexo o relatório dos atendimentos, manutenções corretivas e manutenções preventivas realizadas em $datetime3!

Grato,
José Humberto"

  dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Deseja enviar $datetime3.docx para $validmail?" 8 40
  [ $? = 0 ] && {
    echo "$TEXTAO15" | mutt -s "Relatório de Atendimento - Período $datetime3" -a "/home/$USER/.DOC/$datetime3.docx" -- "$validmail"
    }

  dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Deseja enviar um documento diferente para $validmail?" 8 40
  [ $? = 0 ] && {
    inputdoc1=$(dialog --title 'Relatório' --backtitle "$bktitle" --inputbox "Insira a data-nome do relatório: " 0 0 "$datetime3" 2>&1 > /dev/tty)
    echo "$TEXTAO15" | mutt -s "Relatório de Atendimento - Período $inputdoc1" -a "/home/$USER/.DOC/$inputdoc1.docx" -- "$validmail"
    }
} || {
  dialog --title 'relat.docx' --msgbox "Arquivo não encontrado. Abortando." 8 30
  }
m10
}

function menu30 {
[ -f "/home/$USER/.DOC/.relat.docx" ] && {
  dialog --title 'Confirmação' --backtitle "$bktitle" --yesno "Deseja APAGAR um relatório.docx?" 8 40
  [ $? = 0 ] && {
    inputdoc2=$(dialog --title 'Deleção' --backtitle "$bktitle" --inputbox "Insira a data-nome do relatório: " 0 0 "$datetime3" 2>&1 > /dev/tty)
    rm "/home/$USER/.DOC/$inputdoc2.docx"
    }
} || {
  dialog --title 'relat.docx' --msgbox "Arquivo não encontrado. Abortando." 8 30
  }
m10
}

################################################################################
#                                                                              #
################################################################################

# Todos os Textões!
Recado="Relatório do sistema $HOSTNAME gerado pela interface de relatórios do $bktitle!

"

Recado2="Em "
Recado3=" o sistema recebeu as atualizações mais recentes e está em dia com sua segurança! 
Os pacotes atualizados foram os seguintes:

"

Recado4="

As Atualizações foram concluídas em "

Recado5="O sistema foi reiniciado em "

Recado6="O sistema foi desligado em "

Mensagem="

AVISO LEGAL: Esta mensagem, inclusive seus anexos, pode conter informações confidenciais e deve ser resguardado o devido sigilo de seu conteúdo. Caso a tenha recebido indevidamente, por favor apague-a imediatamente e comunique o remetente. Qualquer forma de utilização, reprodução, retransmissão, alteração, distribuição e/ou divulgação de conteúdo desta mensagem ou de parte dele, sem a autorização expressa de seu remetente, é estritamente proibida."

TEXTAO01="

Governador de CPU: Mostra como está a execução do processador, se em Máximo Desempenho, Economia de Energia ou outro.

Balance BTRFS: Manutenção de rotina do sistema. Se estiver em Execução, o computador NÃO poderá ser reiniciado ou desligado!
Rsnapshot: Backup incremental automatizado. Se estiver Executando, o computador não poderá ser desligado!
RSync: Sincronia do Backup em Nuvem ou para um backup RAID 1. Se estiver Executando, o computador não poderá ser reiniciado ou desligado!
CoPy: Sincronia de pastas locais. Se estiver Executando, o computador não poderá ser reiniciado ou desligado!

Tempos de Boot: Se o sistema foi instalado como UEFI você pode ver (firmware) e (loader) que são
respectivamente a leitura da BIOS e depois a primeira leitura do HD identificando as partições.
Na sequência, temos o (kernel) que representa o Linux propriamente dito; e o UserSpace,
que são os aplicativos e ferramentas do Usuário. No final, o tempo total que o sistema
demorou pra inicializar."

TEXTAO02="

A temperatura costuma ter valores atuais, mínimos (low) e máximos (high)
Além disso, há também a temperatura Crítica (Crit.): Se o sistema atingir ela,
vai desligar instantaneamente por segurança.

Resultados que indicam temperaturas de CPU:
(edge) (cpu_thermal-xxx) (asus-isa-xxxx) (Core X) (coretemp-isa-xxxx)
Resultados que indicam temperaturas de GPU:
(amdgpu-pci-xxxx) (ISA Adapter)
Resultados que indicam temperaturas de Chipset:
(k10temp-pci-xxxx) (acpitz-acpi-xxxx)
Resultados que indicam rotação de cooler:
(cpu_cooler) (fan1) (RPM)
Resultados que indicam Baterias:
(BAT0-acpi-xxx) (fam15h_power-pci-xxxx)
Em Progresso: Novas indicações são adicionadas periodicamente!"

TEXTAO03="

Os resultados são de discos acessíveis no sistema. 
Se um disco não aparecer aqui, significa que está em estado de erro ou foi ejetado.

As opções são:
[Sist. Arq.] [Tipo] [Tam.] [Usado] [Disp.] [Uso%] [Montado em]

Sist. Arq.: Os mais importantes são começados com //IP e /dev.
Tipo: Podem ser EXT4, BTRFS, NTFS, FAT32, etc.
Tam.: Tamanho total do armazenamento.
Usado: Espaço que já foi utilizado.
Disp.: Espaço restante.
Uso%: Porcentagem de uso do disco comparado ao tamanho total.
Montado em: Local aonde o disco está acessível naquele momento."

TEXTAO04="

As informações S.M.A.R.T. de um HDD ou SSD são variadas mas só
algumas partes realmente interessam. Nem todos os HDDs e SSDs exibem todas
essas informações, isso depende do fabricante. As mais importantes são:

01 (0x01) Read Error Rate: Taxa de erro geral durante as leituras do disco.
Ao lado do atributo 07 (0x07), se estiver muito alto, causará muita lentidão.

05 (0x05) Reallocated Sectors Count: Conhecidos também como BadBlocks, indicam falhas de gravação no disco.
A longo prazo isso pode resultar em perda do disco dentro de alguns meses.

07 (0x07) Seek Error Rate: Erro das cabeças magnéticas; podem surgir
por danos ao braço de leitura ou alargamento térmico do disco rígido.
Normalmente não é preocupante mas ao lado do atributo 01 (0x01) pode causar lentidão.

10 (0x0A) Spin Retry Count: Quantidade de vezes que o HDD tentou inicializar após uma falha interna.
A médio prazo isso significa falhas graves das cabeças de leitura e o disco poderá parar em alguns meses.

184 (0xB8) End-to-End error (ou IOEDC): Indica erros nos dados que transitam do disco ou SSD para a memória RAM.
Imediatamente causa muito lentidão de acesso aos dados; com valores altos desse atributo, há perdas de dados.

195 (0xC3) Hardware ECC Recovered: Sozinho não quer dizer muita coisa; porém somado ao resultado do atributo 187 (0xBB)
abaixo, significa que o disco está perdendo dados mas ainda está se recuperando. Lentidão extrema é prevista.

187 (0xBB) Reported Uncorrectable Errors: Erros incorrigíveis que foram reportados durante o processamento do,
Hardware ECC do próprio HDD. Valores altos significam disco extremamente lento.

188 (0xBC) Command Timeout: Quantidade de vezes que o HDD ou SSD desistiu de fazer uma leitura.
Um valor alto indica falha geral da placa lógica do disco.

196 (0xC4) Reallocation Event Count: Quantidade de vezes que o disco copiou dados de um setor ruim para um bom,
se auto-recuperando. Os valores podem ser altos sem perdas de dados, mas a lentidão será notável.

197 (0xC5) Current Pending Sector Count: Setores que aguardam ser remapeados. Altos valores do atributo 187 (0xBB) ou
mesmo do atributo 05 (0x05) indicam que o HDD está com setores defeituosos e está com dificuldades de lidar. Lentidão.

198 (0xC6) (Offline) Uncorrectable Sector Count: Costuma indicar erros na superfície dos discos ou ainda uma falha
mecânica geral da cabeça de leitura dos discos, ou ainda de multiplexadoras de SSDs.

201 (0xC9) Soft Read Error Rate (ou TA Counter Detected): Quantidade de erros causados por software.
Valores altos indicam a presença de bad sectors (diferente de bad blocks), que podem ser corrigidos com
ferramentas de análise, como o HD Regenerator.

As informações acima são referências para análises da saúde dos discos. Atenção ao interpretar os resultados!"

TEXTAO08="

A lista abaixo não necessariamente informa todos os processos configurados!
Esteja atento ao que está instalado no sistema. Mesmo aqueles não instalados aparecerão apenas como 'Parado'.

Samba: Se esse servidor compartilha (via smb) arquivos na rede.
Dominio: Se há um Dominio ativo neste servidor, o Samba (smb) é substituido pelo processo samba-ad-dc.

Apache2: Usado se houver um Nextcloud neste servidor.
Lighttpd: Processo usado pelo PiHole se estiver instalado neste servidor.

Spark: Monitor do servidor de banco de dados se houver OpenFire neste servidor.
MySQL: Monitor do servidor de banco de dados se houver MySQL neste servidor.

CUPS: Servidor de impressão em Rede através dos protocolos HTTP ou SMB.
Motion: Processo usado pelo Motion, para monitorar WebCams ou ainda sistemas de CFTV.
DWAgent: Se houver um Acesso Remoto com DWService executando nesta máquina.
VPN Client: Se este Servidor está conectado em uma VPN atuando como cliente."

TEXTAO09="

Painel de Ferramentas do Sistema!

Placas de Rede: 

SpeedTest: Calcula as velocidades de Download e Upload de uma
conexão á internet existente.

Arp-Scan: Exibe a tabela ARP da rede, mostrando endereços MAC, IP's e nomes
dos computadores descobertos.

TraceRoute: Calcula quantos Hops, saltos, a latência que uma conexão deste
servidor tem até um site especificado.

Iniciar Scripts: Permite iniciar scripts parados: Cluster e/ou Balloon.

Re-Iniciar NOIP: Permite parar, iniciar ou reiniciar NOIP.

Ajustes Relatórios: Permite enviar por e-mail os resultados dos Menus!
Relatórios Salvos: Permite acessar e enviar por e-mails os relatórios salvos!

Reiniciar: Se não houver nada que impeça, o sistema será reiniciado.
Desligar: Se não houver nada que impeça, o sistema será desligado."

TEXTAO10="

Governadores de CPU são formas como a CPU trabalha para otimizar a performance,
economizar bateria, etc. Num urgência podem ser usados pra esfriar um processador ou melhorar o desempenho geral.

Cada governador possui uma aplicabilidade, dependendo do momento, da necessidade e muitas vezes o padrão em execução
será o ideal para aquele hardware. Os governadores mais comuns com as referidas explicações são:

Conservative: Faz a CPU manter sua frequência no nível mais baixo, porém aumenta a frequência de forma gradual
conforme o necessário.

OnDemand: Faz a CPU manter sua frequência no nível mais baixo e aumenta a frequência para o máximo
conforme a necessidade.

UserSpace: Permite que as aplicações da UserSpace controlem a escala de processamento. Situação Atípica.

PowerSave: Ele mantém o clock mais baixo, não importando o que estiver sendo utilizado.
É o modo de pior desempenho, ideal para economizar baterias e também pode ser usado para esfriar a CPU,
caso o servidor esteja superaquecendo devido a uma carga de trabalho excepcional.

Performance: Faz a CPU manter sua frequência no nível mais alto, mantendo o clock alto mesmo se o
computador não estiver em uso. É o modo de melhor desempenho sem Overclock!

Schedutil: Passa a escala de processamento para o Agendador de Tarefas e as prioridades são definidas de
acordo com a aplicação. Este é o modo que trás o melhor custo-benefício de desempenho e baixo clock.

Um governador aplicado passa a operar imediatamente!"

TEXTAO11="

Aqui são exibidas apenas as VMs nos estados Executando ou Parado.
Caso uma VM não apareça na listagem, verifique o real estado da mesma no menu Status Geral!

Status Geral: Exibe a situação real de todas as VMs configuradas no sistema.
Nome da VM + Estado: Permite controlar a VM: reiniciando, desligando ou ligando a mesma.

Ligar Todas as VMs: Inicializará apenas as VMs em estado de -Shut Off- detectadas.
Serão ignoradas todas as demais VMs em quaisquer outros estados.

Desligar Todas as VMs: Desligará apenas as VMs em estado de -running- detectadas.
Serão ignoradas todas as demais VMs em quaisquer outros estados.
Para maiores informações ver AJUDA em Status Geral."

TEXTAO12="

Name: Nome da máquina virtual [VM] conforme ela foi registrada no virt-manager

State é a situação em que a VM se encontra. Os States podem ser:

running*: VM executando normalmente.
paused*: VM em estado deliberado de pausa.
idle*: VM em estado de pausa, normalmente por alta carga de I/O e/ou aguardando o 
sistema host voltar a responder.
pmsuspended*: VM suspendida com PowerState S3. 
in shutdown*: VM em processo de desligamento.
shut off: VM desligada normalmente.
crashed: Significa que a VM travou e parou de responder abruptamente por algum erro grave,
seja do próprio sistema virtualizado ou erro de disco do host.

* = Em qualquer um destes estados a VM pode corromper se for desligada abruptamente!"

################################################################################
#                                                                              #
################################################################################

# Início do Sistema:
menu054
